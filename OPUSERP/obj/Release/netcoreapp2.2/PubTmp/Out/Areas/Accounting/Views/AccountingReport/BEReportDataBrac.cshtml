@model FinancialReportViewModel
@{
    ViewData["Title"] = "Budget & Expenditure Report";
    Layout = "~/Views/Shared/_PrintView.cshtml";
}

@section Style{
    <style>

        .print-card-body {
            width: 100%;
            padding-bottom: 10px;
        }

        .vartical-table th {
            width: 25%;
        }

        .vartical-table td {
            width: 25%;
        }

        .horizontal-table {
            /*width: 100%;*/
        }

        .table td, .table th {
            padding: .3rem;
            font-size: 15px;
        }

        table {
            page-break-inside: auto
        }

        tr {
            page-break-inside: avoid;
            page-break-after: auto
        }

        thead {
            display: table-header-group
        }

        tfoot {
            display: table-footer-group
        }

        h6 {
            font-size: 14px;
            background-color: gray;
            color: white !important;
            padding: 3px;
        }
    </style>
}
@{

    <div class="print-card" style="width: 100%;">
        <div class="print-card-body">
            <div class="container-fluid">
                <div class="row" style="padding-top:0px;">
                    <div class="col-3"></div>
                    <div class="col-6">
                        <div style="color:black;text-align:center;">
                            <img src="@Model.companies.FirstOrDefault().filePath" alt="OPUS ERP" style="height:80px;" />
                            <h3>@Model.companies.FirstOrDefault().companyName</h3>
                            <label>@Model.companies.FirstOrDefault().addressLine</label><br />

                            @if (ViewBag.SBUName != null)
                            {
                                <label>SBU : @ViewBag.SBUName</label>
                            }
                            @if (ViewBag.projectName != null)
                            {
                                <label>Project Name : @ViewBag.projectName</label><br />
                            }
                            <h5>Budget & Expenditure Report</h5>
                            <h5>From @Model.budgetExpenseMasterViewModels.FirstOrDefault().fromDate To @Model.budgetExpenseMasterViewModels.FirstOrDefault().toDate</h5>
                            <h5>Report generating date:@DateTime.Now.ToString("dd-MM-yyyy")</h5>
                            <br />
                        </div>
                    </div>
                    <div class="col-3"></div>
                </div>
            </div>
            <div class="container-fluid" style="color:black;">
                <div class="row" style="padding: 0px 15px 0px 15px;">
                    <table class="table table-bordered">
                        <tr>
                            <th>Budget Line Items</th>
                            <th>Approved Budget</th>
                            <th>Expenditure Upto Previous Month</th>
                            <th>Expenditure During the Period</th>
                            <th>Expenditure Upto the Period </th>
                            <th>Burn Rate(%)</th>
                            <th>Budget Balance</th>
                        </tr>
                        @{
                            decimal? totalsunone = 0;
                            decimal? totalsuntwo = 0;
                            decimal? totalsun = 0;
                            @foreach (var data in Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Select(x => x.MainHead).Distinct())
                            {
                                <tr style="background-color:grey">
                                    <td colspan="7">@data</td>
                                </tr>
                                @foreach (var d in Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Select(x => x.SubHead).Distinct())
                                {
                                    <tr>
                                        <td colspan="7" style="background-color:lightgray">@d</td>
                                    </tr>
                                    @foreach (var c in Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d))
                                    {
                                        //i = 0;
                                        if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.BudgetAmount) > 0)
                                        {
                                            totalsunone = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.TotalExpense) * 100 / @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.BudgetAmount);
                                        }
                                        <tr>
                                            <td>@c.Head</td>
                                            <td style="text-align:right">@c.BudgetAmount?.ToString("0,0.00")</td>
                                            @if (c.PreviuosAmount < 0)
                                            {
                                                var negative = c.PreviuosAmount * -1;
                                                <td style="text-align:right;">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="text-align:right;">@c.PreviuosAmount?.ToString("0,0.00")</td>
                                            }
                                            @if (c.CurrentAmount < 0)
                                            {
                                                var negative = c.CurrentAmount * -1;
                                                <td style="text-align:right;">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="text-align:right;">@c.CurrentAmount?.ToString("0,0.00")</td>
                                            }
                                            @if (c.TotalExpense < 0)
                                            {
                                                var negative = c.TotalExpense * -1;
                                                <td style="text-align:right;">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="text-align:right;">@c.TotalExpense?.ToString("0,0.00")</td>
                                            }
                                            <td style="text-align:right">@c.BurnRate?.ToString("0,0.00")</td>
                                            <td style="text-align:right">@c.BudgetBalance?.ToString("0,0.00")</td>
                                        </tr>
                                    }
                                        <tr>
                                            <td style="background-color:lightgray;">TOTAL @d</td>
                                            <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.BudgetAmount)?.ToString("0,0.00")</td>
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.PreviuosAmount) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.PreviuosAmount) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.PreviuosAmount)?.ToString("0,0.00")</td>
                                            }
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.CurrentAmount) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.CurrentAmount) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>*@
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.TotalExpense) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.TotalExpense) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>*@
                                            @if (@totalsunone < 0)
                                            {
                                                var negative = @totalsunone * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@totalsunone?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@totalsunone?.ToString("0,0.00")</td>*@
                                            <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data && x.SubHead == d).Sum(x => x.BudgetBalance)?.ToString("0,0.00")</td>
                                        </tr>
                                }
                                if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.BudgetAmount) > 0)
                                {
                                    totalsuntwo = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.TotalExpense) * 100 / @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.BudgetAmount);
                                }
                                        <tr>
                                            <td style="background-color:lightgray;">TOTAL @data</td>
                                            <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.BudgetAmount)?.ToString("0,0.00")</td>
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.PreviuosAmount) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.PreviuosAmount) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.PreviuosAmount)?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.PreviuosAmount)?.ToString("0,0.00")</td>*@
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.CurrentAmount) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.CurrentAmount) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>*@
                                            @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.TotalExpense) < 0)
                                            {
                                                var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.TotalExpense) * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>*@
                                            @if (@totalsuntwo < 0)
                                            {
                                                var negative = @totalsuntwo * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@totalsuntwo?.ToString("0,0.00")</td>
                                            }
                                            @*<td style="background-color:lightgray;text-align:right">@totalsuntwo?.ToString("0,0.00")</td>*@
                                            <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Where(x => x.MainHead == data).Sum(x => x.BudgetBalance)?.ToString("0,0.00")</td>
                                        </tr>
                            }
                            if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.BudgetAmount) > 0)
                            {
                                totalsun = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.TotalExpense) * 100 / @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.BudgetAmount);
                            }
                                <tr>
                                    <td style="background-color:lightgray;">TOTAL</td>
                                    <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.BudgetAmount)?.ToString("0,0.00")</td>
                                    @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.PreviuosAmount) < 0)
                                    {
                                        var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.PreviuosAmount) * -1;
                                        <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                    }
                                    else
                                    {
                                        <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.PreviuosAmount)?.ToString("0,0.00")</td>
                                    }
                                    @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.PreviuosAmount)?.ToString("0,0.00")</td>*@
                                    @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.CurrentAmount) < 0)
                                    {
                                        var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.CurrentAmount) * -1;
                                        <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                    }
                                    else
                                    {
                                        <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>
                                    }
                                    @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.CurrentAmount)?.ToString("0,0.00")</td>*@
                                    @if (@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.TotalExpense) < 0)
                                    {
                                        var negative = @Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.TotalExpense) * -1;
                                        <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                    }
                                    else
                                    {
                                        <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>
                                    }
                                    @*<td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.TotalExpense)?.ToString("0,0.00")</td>*@
                                    @if (@totalsun < 0)
                                            {
                                                var negative = @totalsun * -1;
                                                <td style="background-color:lightgray;text-align:right">(@negative?.ToString("0,0.00"))</td>
                                            }
                                            else
                                            {
                                                <td style="background-color:lightgray;text-align:right">@totalsun?.ToString("0,0.00")</td>
                                            }
                                    @*<td style="background-color:lightgray;text-align:right">@totalsun?.ToString("0,0.00")</td>*@
                                    <td style="background-color:lightgray;text-align:right">@Model.budgetExpenseMasterViewModels.FirstOrDefault().budgetExpenseDetailViewModels.Sum(x => x.BudgetBalance)?.ToString("0,0.00")</td>
                                </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
}