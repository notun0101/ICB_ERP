@model LedgerOpeningBalanceViewModel
@{
    ViewData["Title"] = "Payment Voucher";
    Layout = "~/Areas/Accounting/Views/Shared/_VoucherLayout.cshtml";

}

    <style>
        .redStar {
            color: red;
            float: right;
        }
    </style>

@*<div class="card p-0 m-0">
        <div class="row">
            <div class="col-sm-10">
                <span style="font-size:1.5em;font-weight:700;color:gray;">Ledger Opening Balance</span>
            </div>
            <div class="col-sm-2 text-right">
                <a class="btn btn-sm btn-dark" href="/Accounting/PaymentVoucher/AllVoucherList">Back To List</a>
            </div>
        </div>
    </div>*@
<div class="card" style="width: 100%;">
    <div class="card-header  d-flex flex-row align-items-center justify-content-between">
        <h5 class="m-0 font-weight-bold text-primary">Ledger Opening Balance</h5>
        <a class='btn btn-info mr-3 ' style="float:right" data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=1012&perentId=6102'>@*<i class="fas fa-backward fa-2x "></i>*@<i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>

    </div>

    <div class="card-body">
        <div class="container">
            <form id="frmOpeningBalance" aria- data-parsley-validate="parsley" autocomplete="off">
                <div asp-validation-summary="All" class="text-danger"></div>




                <div class="form-group row" id="SBUSelect">
                    <label for="sbuId" class="col-sm-4 col-form-label">SBU</label>
                    <div class="col-sm-8">
                        <select type="text" class="form-control" id="sbuId"></select>
                    </div>
                </div>

                <div class="form-group row">

                    <label for="particular" class="col-sm-4 col-form-label text-left">Account Name<span class="redStar">*</span></label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control input-group-sm" name="particular" id="particular" />
                        <input type="hidden" name="ledgerRelationId" id="ledgerRelationId" />
                        <input type="hidden" name="hiddenLederId" id="hiddenLederId" value="0" />
                        <input type="hidden" name="voucherId" id="voucherId" value="0" />
                        <input type="hidden" name="particularId" id="particularId" />
                        <input type="hidden" name="txtHaveSubLedger" id="txtHaveSubLedger" />
                        <input type="hidden" id="txtAccountCode" />
                        <input type="hidden" name="txtnatureId" id="txtnatureId" />
                        <input type="hidden" name="ledgerOpeningBalanceId" id="ledgerOpeningBalanceId" value="0" />
                    </div>
                </div>
                <input type="hidden" id="subledgerRelationId" name="subledgerRelationId" value="0" />
                <div class="form-group row haveSubledger">
                    <label for="txtSubLedger" class="col-sm-4 col-form-label text-left">Subledger<span class="redStar">*</span></label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control input-group-sm" name="txtSubLedger" id="txtSubLedger" />
                        <input type="hidden" name="txtSubLedgerId" id="txtSubLedgerId" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="txtAmount" class="col-sm-4 col-form-label text-left">Amount<span class="redStar">*</span></label>
                    <div class="col-sm-8 input-group">
                        <input type="text" class="form-control input-group-sm numeric text-right" name="amount" id="amount" />
                        <div class="input-group-prepend">
                            <select name="transectionModeId" id="transectionModeId" class="form-control input-group-sm input-group-text bg-white">
                                <option value="1">DR</option>
                                <option value="2">CR</option>
                            </select>
                        </div>
                    </div>
                </div>


                <div class="form-group row">
                    <label for="projectId" class="col-sm-4 col-form-label">Project <span class="redStar">*</span></label>
                    <div class="col-sm-8">
                        <select type="text" class="form-control" id="projectId" name="projectId" required></select>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="balanceUpTo" class="col-sm-4 col-form-label text-left">Balance UpTo Date</label>
                    <div class="col-sm-8 input-group">
                        <input name="balanceUpTo" id="balanceUpTo" class="form-control input-group-sm" readonly />
                        <div class="input-group-prepend">
                            <i class="fas fa-calendar-alt form-control input-group-sm input-group-text bg-white"></i>
                        </div>
                    </div>

                </div>





                @*<div class="col-md-3" style="text-align:right">

                    </div>*@

                <input type="button" onclick="RefreshAll()" id="btnRefesh" value="Refresh" class="btn btn-outline-secondary btn-sm" style="width:90px; float:right; " />&nbsp;&nbsp;
                <input type="submit" id="btnSave" value="Save" class="btn btn-info btn-sm" style="float:right;width:90px;" />


            </form>
        </div>
    </div>


    <br />
</div>
<hr />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Ledger Opening Balance List</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <table class="table table-striped table-bordered" id="ledgerOpeningBalanceTable">
                    <thead>
                        <tr>
                            <th>Account Name</th>
                            <th>DR</th>
                            <th>CR</th>
                            <th>Action</th>
                    </thead>
                    <tbody>
                        @{
                            int i = 1;


                            @foreach (var data in Model.voucherMasters.Where(e => e.specialBranchUnitId == ViewBag.branchId))
                            {
                                decimal? dramount = 0;
                                decimal? cramount = 0;
                                @if (data.transectionModeId == 1)
                                {
                                    dramount = data.amount;
                                }
                                else
                                {
                                    cramount = data.amount;
                                }
                                <tr>
                                    <td><span style="display:none">-@data.Id-</span>@data.ledgerRelation.ledger.accountName @data.ledgerRelation?.subLedger?.accountName</td>
                                    <td>@dramount</td>
                                    <td>@cramount</td>
                                    @if (i % 2 == 0)
                                    {
                                        <td class="mt-5">
                                            <a class="btn btn-info" onclick="Edit(@data.Id,'@data.ledgerRelationId', '@data.ledgerRelation.ledger.accountName','@data.transectionModeId','@data.amount','@data.isDelete', '@data.voucherId')" href="#" title='Edit/Update'><i class="fa fa-edit"></i></a>&nbsp;&nbsp;
                                            <a class="btn btn-danger" title="Delete" href="javascript:void(0)" onclick="DeleteMaster(@data.voucherId)"><i class="fa fa-trash-alt"></i></a>
                                        </td>
                                    }
                                    else
                                    {

                                        <td></td>
                                    }

                                </tr>
                                i++;
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section ScriptsV{


    <script type="text/javascript">

        function RefreshAll() {
            window.location.href = "/Accounting/LedgerOpeningBalance/Index";
            getCurrentDate();
        }

        function Edit(Id,ledgerRelationId, accountName,transectionModeId,amount,hiddenLederId, voucherId) {
            $("#ledgerOpeningBalanceId").val(Id);
            $("#ledgerRelationId").val(ledgerRelationId);
            $('#transectionModeId').val(transectionModeId);
            $('#amount').val(amount);
            $('#particular').val(accountName);
            $('#hiddenLederId').val(hiddenLederId);
            $('#voucherId').val(voucherId);
        }

        function DeleteMaster(Id) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {

                $.ajax({
                    url: '@Url.Action("DeleteopeningBalanceByVoucherMasterId", "LedgerOpeningBalance")',
                    data: { Id: Id },
                    type: 'POST',
                })
                    .done(function () {
                        swal('', 'Deleted Successfully!', 'success');
                        window.location.href = "/Accounting/LedgerOpeningBalance/Index";
                    })
                    .fail(function () {
                        swal('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                    });
            });
        }

        function GetLedgerForOpeningBalance(response) {
            $('#particular').empty();
            $("#ledgerRelationId").val('0');
            $("#particularId").val('');
            $('#txtHaveSubLedger').val('');
            $('#subledgerRelationId').val('0');
            $('#txtAccountCode').val('');
            $('#txtnatureId').val(0);
            var lstParticular = [];
            $.each(response, function (i, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.ledgerId = option.ledgerId;
                obj.haveSubLedger = option.haveSubLedger;

                obj.value = option.accountName + ' (' + option.accountCode + ')';
                obj.accountCode = option.accountCode;
                obj.natureId = option.natureId;
                lstParticular[lstParticular.length] = obj;
            });
            $('#particular').autocomplete({
                source: lstParticular,
                select: function (event, ui) {
                    $('#particular').val(ui.item.value);
                    $('#ledgerRelationId').val(ui.item.key);
                    $("#particularId").val(ui.item.ledgerId);
                    $('#txtHaveSubLedger').val(ui.item.haveSubLedger);
                    $('#txtAccountCode').val(ui.item.accountCode);
                    $('#txtnatureId').val(ui.item.natureId);
                    let ledgerId = ui.item.ledgerId;
                    //Common.Ajax('GET', '/api/global/getOpenBalanceById/' + ui.item.key, [], 'json', GetLedgerBalance);
                    if (ui.item.haveSubLedger == 1) {
                        $('.haveSubledger').show();
                        Common.Ajax('GET', '/api/global/getSubLedersByLedgerId/' + ledgerId, [], 'json', GetSubLedgerByLedgerId);

                    } else {

                        $('.haveSubledger').hide();
                    }
                }
            });
        }



        function GetSubLedgerByLedgerId(response) {
            $('#txtSubLedger').empty();
            $("#txtSubLedgerId").val('');
            $('#subledgerRelationId').val('');
            var lstSubLedger = [];
            $.each(response, function (i, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.ledgerId = option.ledgerId;
                obj.value = option.accountName + ' (' + option.accountCode + ')';
                lstSubLedger[lstSubLedger.length] = obj;
            });
            $('#txtSubLedger').autocomplete({
                source: lstSubLedger,
                select: function (event, ui) {
                    $('#txtSubLedger').val(ui.item.value);
                    $("#txtSubLedgerId").val(ui.item.ledgerId);
                    $('#subledgerRelationId').val(ui.item.key);
                    //Common.Ajax('GET', '/api/global/getOpenSubBalanceById/' + ui.item.key, [], 'json', GetSubLedgerBalance);
                }
            });
        }

        function getVoucherDate(vdate) {
            var formattedDate = new Date(vdate);
            var d = formattedDate.getDate();
            var m = formattedDate.getMonth();
            m += 1;  // JavaScript months are 0-11
            var y = formattedDate.getFullYear();

            var monthNames = [
                "Jan", "Feb", "Mar",
                "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct",
                "Nov", "Dec"
            ];

            var fullDate = d + "-" + monthNames[m] + "-" + y;
            return fullDate;
        }

        function getCurrentDate() {
            $("#voucherDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
        }

        $(document).ready(function () {
            $('.haveSubledger').hide();
            $('#ledgerOpeningBalanceTable');
            $('#ledgerOpeningBalanceTable').DataTable();
            $("#balanceUpTo").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());

            Common.Ajax('GET', '/api/global/getLedgerForOpeningBalance/', [], 'json', GetLedgerForOpeningBalance);


            $("#btnSave").click(function (e) {
                if ($('#amount').val() == "0" || $('#amount').val() == "") {
                    swal('Warning', 'Please input Amount', 'warning');
                    return false;
                }
                e.preventDefault();

                var form = $("#frmOpeningBalance");
                swal({
                    title: 'Are you sure?', text: 'Do you want to Save this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, Save it!'
                }).then(function () {
                    $.ajax({
                        url: '/Accounting/LedgerOpeningBalance/Index',
                        data: form.serialize(),
                        type: 'POST',
                        success: function (records) {
                            swal('Save Successfull!!!');
                            window.location.href = "/Accounting/LedgerOpeningBalance/Index";
                        }
                    });
                });
                return false;
            });

            $(".numeric").keydown(function (e) {
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    (e.keyCode >= 35 && e.keyCode <= 40)) {
                    return;
                }
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            var id = $("#sbuId").val();
            Common.Ajax('GET', '/global/api/GetSBU/', [], 'json', GetSBU);
            Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);

            $("#sbuId").change(function () {
                var id = $(this).val();
                Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);
            });
        });

        function GetSBU(response) {
            $('#sbuId').empty();
            var options = '';
            $.each(response, function (i, item) {
                options += '<option selected value="' + item.Id + '">' + item.branchUnitName + '</option>';

                var id = item.Id;
                Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);

            });
            $('#sbuId').append(options);

            var id = response[0].Id
            Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);
        }

        function GetProject(response) {
            var isdefault = 0;
            $('#projectId').empty();
            var options = '<option value="0">Select Project</option>';
            $.each(response, function (i, item) {
                if (item.isdefault == 1) {
                    isdefault = item.Id;
                }
                options += '<option value="' + item.Id + '">' + item.projectName + '</option>';
            });
            $('#projectId').append(options);
            if (isdefault != 0) {
                $('#projectId').val(isdefault);
            }
        }


        function addCommas(x) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

    </script>
}

@section StyleV{
    <style>
        input[readonly] {
            background-color: transparent;
        }
    </style>
}



