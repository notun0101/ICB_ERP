@model AutoVoucherMasterViewModel
@{
    ViewData["Title"] = "Create Auto Voucher";
    Layout = "~/Areas/Accounting/Views/Shared/_AccountingMasterForm.cshtml";
}

@section StyleMD{
    <style>
        .redStar {
            color: red;
        }
    </style>
}
<div class="card" style="width: 100%;">
    <div class="card-body">
        <div class="row">
            <div class="col-6">
                <h6 class="card-title" style="color: black">Auto Voucher Name</h6>
            </div>
        </div>
        <hr>
        <div class="container">
            <form asp-area="Accounting" asp-controller="VoucherSetting" asp-action="CreateAutoVoucher" method="post" data-parsley-validate="parsley">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="row">
                    <div class="col-sm-6">
                        <input type="hidden" id="masterId" name="masterId" value="0">

                        <div class="form-group row">
                            <label for="autoVoucherNameId" class="col-sm-3 col-form-label">Voucher For <span class="redStar">*</span></label>
                            <div class="col-sm-9">
                                <select class="form-control" name="autoVoucherNameId" id="autoVoucherNameId" data-parsley-required="true">
                                    <option value="">Select</option>
                                    @foreach (var data in Model.autoVoucherNames)
                                    {
                                        <option value="@data.Id">@data.autoVoucherName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="voucherTypeId" class="col-sm-3 col-form-label">Voucher Type<span class="redStar">*</span></label>
                            <div class="col-sm-9">
                                <select class="form-control" name="voucherTypeId" id="voucherTypeId" data-parsley-required="true">
                                    <option value="">Select</option>
                                    @foreach (var data in Model.voucherTypes)
                                    {
                                        <option value="@data.Id">@data.voucherTypeName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="description" class="col-sm-3 col-form-label">Description</label>
                            <div class="col-sm-9">
                                <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" id="SBUSelect">
                            <label for="sbuId" class="col-sm-3 col-form-label">SBU</label>
                            <div class="col-sm-9">
                                <select type="text" class="form-control" id="sbuId" name="sbuId"></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="projectId" class="col-sm-3 col-form-label">Project <span style="color:red;">*</span></label>
                            <div class="col-sm-9">
                                <select type="text" class="form-control" id="projectId" name="projectId" required></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="particular" class="col-sm-3 col-form-label text-left">Particular<span style="color:red;">*</span></label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control input-group-sm" name="particular" id="particular" />
                                <input type="hidden" name="particularId" id="particularId" />
                                <input type="hidden" name="txtHaveSubLedger" id="txtHaveSubLedger" />
                                <input type="hidden" name="txtAccountCode" id="txtAccountCode" />
                                <input type="hidden" name="txtnatureId" id="txtnatureId" />
                            </div>
                        </div>
                        <input type="hidden" id="txtLedgerRelationId" name="txtLedgerRelationId" />
                        <div class="form-group row haveSubledger">
                            <label for="txtSubLedger" class="col-sm-3 col-form-label text-left">Subledger<span style="color:red;">*</span></label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control input-group-sm" name="txtSubLedger" id="txtSubLedger" />
                                <input type="hidden" name="txtSubLedgerId" id="txtSubLedgerId" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="transectionModeId" class="col-sm-3 col-form-label">Trans. Mode <span class="redStar">*</span></label>
                            <div class="col-sm-9">
                                <select class="form-control" name="transectionModeId" id="transectionModeId">
                                    <option value="">Select</option>
                                    @foreach (var data in Model.transectionModes)
                                    {
                                        <option value="@data.Id">@data.modeName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label"></label>
                            <div class="col-sm-9">
                                <button type="button" onclick="AddItemInfo()" value="Add" title="Add" class="btn btn-facebook btn-sm" style="float:right; margin-top:5px;width:80px;">Add</button>&nbsp;&nbsp;
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <h5 class="card-title pull-left col-md-12 col-form-label " style="color: black;margin-left:0px;padding-left:0px;">Auto Voucher Details</h5>
                    <table class="table table-bordered" id="tblfuelDetails" data-parsley-required="true">
                        <thead>
                            <tr>
                                <th>Ledger Name</th>
                                <th>Transaction Mode</th>
                                <th><span>Action</span></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <hr />
                <button type="submit" value="Submit" class="btn btn-success btn-sm" style="float:right;width:80px;">Save</button>
            </form>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Auto Voucher List</h6>
            </div>
            <div class="card-body">
                <table class="table table-striped table-bordered" id="contactsTable">
                    <thead>
                        <tr>
                            <th>SL#</th>
                            <th>Auto Voucher Name</th>
                            <th>Description</th>
                            <th>Project Name</th>
                            <th>Voucher Type</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 1;
                            @foreach (var data in Model.autoVoucherMasters)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@data?.autoVoucherName?.autoVoucherName</td>
                                    <td>@data.description</td>
                                    <td>@data?.project?.projectName</td>
                                    <td>@data?.voucherType?.voucherTypeName</td>
                                    <td>
                                        <a class="btn btn-success" onclick="Edit(@data.Id,@data.autoVoucherNameId,@data.voucherTypeId,@data.projectId,@data.project?.specialBranchUnitId,'@data.description')" href="javascript:void(0)"><i class="fa fa-edit"></i></a>
                                        &nbsp;&nbsp;
                                        <a class="btn btn-danger" href="javascript:void(0)" onclick="DeleteMaster(@data.Id)"><i class="fa fa-trash-alt"></i></a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section ScriptsMD{
    <script>
        $(document).ready(function () {
            $('.haveSubledger').hide();
            $('#contactsTable').DataTable();
            Common.Ajax('GET', '/global/api/GetSBU/', [], 'json', GetSBU);
            $("#sbuId").change(function () {
                var id = $(this).val();
                Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);
                Common.Ajax('GET', '/api/global/GetLedgerAllBySbuId/' + id, [], 'json', GetLedgerForParticular);
            });


        });
        function GetSBU(response) {
            $('#sbuId').empty();
            var options = '';
            $.each(response, function (i, item) {
                options += '<option selected value="' + item.Id + '">' + item.branchUnitName + '</option>';
            });
            $('#sbuId').append(options);

            var id = response[0].Id
            Common.Ajax('GET', '/global/api/GetProject/' + id, [], 'json', GetProject, false);
        
        }

        function GetProject(response) {
            var isdefault = 0;
            $('#projectId').empty();
            var options = '<option value="0">Select Project</option>';
            $.each(response, function (i, item) {
                if (item.isdefault == 1) {
                    isdefault = item.Id;
                }
                options += '<option value="' + item.Id + '">' + item.projectName + '</option>';
            });

            $('#projectId').append(options);
            if (isdefault != 0) {
                $('#projectId').val(isdefault);
            }
        }

        function GetLedgerForParticular(response) {
            $('#particular').empty();
            $("#particularId").val('');
            $('#txtHaveSubLedger').val('');
            $('#txtLedgerRelationId').val('');
            $('#txtnatureId').val(0);
            var lstParticular = [];
            $.each(response, function (i, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.ledgerId = option.ledgerId;
                obj.haveSubLedger = option.haveSubLedger;
                obj.natureId = option.natureId;
                obj.value = option.accountName + ' (' + option.accountCode + ')';
                obj.accountCode = option.accountCode;
                lstParticular[lstParticular.length] = obj;
            });
            $('#particular').autocomplete({
                source: lstParticular,
                select: function (event, ui) {
                    $('#particular').val(ui.item.value);
                    $("#particularId").val(ui.item.ledgerId);
                    $('#txtHaveSubLedger').val(ui.item.haveSubLedger);
                    $('#txtAccountCode').val(ui.item.accountCode);

                    $('#txtnatureId').val(ui.item.natureId);
                    let ledgerId = ui.item.ledgerId;
                    if (ui.item.haveSubLedger == 1) {
                        $('.haveSubledger').show();
                        Common.Ajax('GET', '/api/global/getSubLedersByLedgerId/' + ledgerId, [], 'json', GetSubLedgerByLedgerId);
                    } else {
                        $('#txtLedgerRelationId').val(ui.item.key);
                        $('.haveSubledger').hide();
                    }

                }
            });
        }

        function GetSubLedgerByLedgerId(response) {
            $('#txtSubLedger').empty();
            $("#txtSubLedgerId").val('');
            $('#txtLedgerRelationId').val('');
            var lstSubLedger = [];
            $.each(response, function (i, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.ledgerId = option.ledgerId;
                obj.value = option.accountName + '(' + option.accountCode + ')';
                lstSubLedger[lstSubLedger.length] = obj;
            });
            $('#txtSubLedger').autocomplete({
                source: lstSubLedger,
                select: function (event, ui) {
                    $('#txtSubLedger').val(ui.item.value);
                    $("#txtSubLedgerId").val(ui.item.ledgerId);
                    $('#txtLedgerRelationId').val(ui.item.key);
                }
            });
        }

        function Edit(masterId, autoVoucherNameId, voucherTypeId, projectId, sbuId, description) {
            $('#masterId').val(masterId);
            $('#autoVoucherNameId').val(autoVoucherNameId);
            $('#voucherTypeId').val(voucherTypeId);
            $('#sbuId').val(sbuId);
            Common.Ajax('GET', '/global/api/GetProject/' + sbuId, [], 'json', GetProject, false);
            $('#projectId').val(projectId);
            $('#description').val(description);

            Common.Ajax('GET', '/global/api/VoucherSettingController/GetAutoVoucherDetailByMasterId/' + masterId, [], 'json', ajaxGetAutoVoucherDetailByMasterId);
        }

        function DeleteMaster(Id) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {

                $.ajax({
                    url: '@Url.Action("DeleteAutoVoucherDetailByMasterId", "VoucherSetting")',
                    data: { Id: Id },
                    type: 'POST',
                })
                    .done(function () {
                        swal('', 'Deleted Successfully!', 'success');
                        window.location.href = "/Accounting/VoucherSetting/CreateAutoVoucher";
                    })
                    .fail(function () {
                        swal('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                    });
            });
        }

        function AddItemInfo() {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblfuelDetails tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblfuelDetails tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            let fuelTypeName = $('#particular').val();
            let headId = $('#txtLedgerRelationId').val();

            let modeName = $('#transectionModeId option:selected').text();
            let modeId = $('#transectionModeId').val();

            var editOption = parseInt($('#IsEdit').val()) ? parseInt($('#IsEdit').val()) : 0;
            var RowCount = $("#tblfuelDetails tbody>tr").length;

            if (headId == null || headId == '') {
                swal('Warning', 'You must be select a ledger!', 'warning');
                return false;
            }
            else if (modeId == null || modeId == '') {
                swal('Warning', 'You must be select transaction mode!', 'warning');
                return false;
            }

            for (i = 0; i < RowCount; i++) {
                var _itemId = $('#headAll' + i + '').val();
                if (_itemId == fuelTypeName && editOption == 0) {
                    swal('Warning', 'You have already added this ledger!', 'warning');
                    return false
                }
            }

            var dtTable = $("#tblfuelDetails");
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr id=' + index + '>' +
                '<td>' + fuelTypeName + '<input type="hidden" id="headAll' + index + '" name="headAll" class="clsId" value="' + fuelTypeName + '"></td> <input type="hidden" id="headIdAll' + index + '" name="headIdAll" class="clsId" value="' + headId + '"></td>' +
                '<td>' + modeName + '<input type="hidden" id="modeAll' + index + '" name="modeAll" class="clsId" value="' + modeName + '"></td> <input type="hidden" id="modeIdAll' + index + '" name="modeIdAll" class="clsId" value="' + modeId + '"></td>' +
                '<td><a href="javascript:void(0)"style="background-color:red;border-color:red" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-xs" onclick="Delete(' + index + ')"><i class="fa fa-trash"></i></a>&nbsp;&nbsp;' +
                '</tr>';

            if (ifExistIndex == null || ifExistIndex == "null") {
                tableBody.append(trHtml);
            }
            else {
                var rowUpdate = $("#tblfuelDetails tbody >tr:eq(" + ifExistIndex + ")");
                rowUpdate.replaceWith(trHtml);
                window.localStorage.setItem("holdIndex", null);
                ifExistIndex = null;
            }
        }

        function Delete(index) {

            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {
                $("#tblfuelDetails #" + index).remove();
                swal('', 'Deleted Successfully!', 'success')
            });
            return false;
        }

        function ajaxGetAutoVoucherDetailByMasterId(response) {
            $("#tblfuelDetails tbody>tr").remove();

            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblfuelDetails tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblfuelDetails tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            $.each(response, function (key, value) {

                index = $("#tblfuelDetails tbody>tr").length;
                var dtTable = $("#tblfuelDetails");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.ledgerRelation.ledger.accountName + '<input type="hidden" id="headAll' + index + '" name="headAll" class="clsId" value="' + value.ledgerRelation.ledger.accountName + '"></td> <input type="hidden" id="headIdAll' + index + '" name="headIdAll" class="clsId" value="' + value.ledgerRelationId + '"></td>' +
                    '<td>' + value.transectionMode.modeName + '<input type="hidden" id="modeAll' + index + '" name="modeAll" class="clsId" value="' + value.transectionMode.modeName + '"></td> <input type="hidden" id="modeIdAll' + index + '" name="modeIdAll" class="clsId" value="' + value.transectionModeId + '"></td>' +
                    '<td><a href="javascript:void(0)"style="background-color:red;border-color:red" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-xs" onclick="Delete(' + index + ')"><i class="fa fa-trash"></i></a>&nbsp;&nbsp;' +
                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblfuelDetails tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })
        }

    </script>
}



