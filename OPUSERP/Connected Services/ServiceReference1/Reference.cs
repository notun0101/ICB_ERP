//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiResponse", Namespace="http://api")]
    public partial class ApiResponse : object
    {
        
        private string out_BIN_DataField;
        
        private string out_StatusField;
        
        private string out_XML_DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string out_BIN_Data
        {
            get
            {
                return this.out_BIN_DataField;
            }
            set
            {
                this.out_BIN_DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string out_Status
        {
            get
            {
                return this.out_StatusField;
            }
            set
            {
                this.out_StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string out_XML_Data
        {
            get
            {
                return this.out_XML_DataField;
            }
            set
            {
                this.out_XML_DataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api", ConfigurationName="ServiceReference1.DataInsertMain")]
    public interface DataInsertMain
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.dataInsertResponse> dataInsertAsync(ServiceReference1.dataInsertRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class dataInsertRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="dataInsert", Namespace="http://api", Order=0)]
        public ServiceReference1.dataInsertRequestBody Body;
        
        public dataInsertRequest()
        {
        }
        
        public dataInsertRequest(ServiceReference1.dataInsertRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://api")]
    public partial class dataInsertRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string in_user_id;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string in_Auth_Key;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string in_ChkSum;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string in_request_id;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string in_xml_data;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string in_Bin_data;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string in_request_type;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string in_Add_Param_One;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string in_Add_Param_Two;
        
        public dataInsertRequestBody()
        {
        }
        
        public dataInsertRequestBody(string in_user_id, string in_Auth_Key, string in_ChkSum, string in_request_id, string in_xml_data, string in_Bin_data, string in_request_type, string in_Add_Param_One, string in_Add_Param_Two)
        {
            this.in_user_id = in_user_id;
            this.in_Auth_Key = in_Auth_Key;
            this.in_ChkSum = in_ChkSum;
            this.in_request_id = in_request_id;
            this.in_xml_data = in_xml_data;
            this.in_Bin_data = in_Bin_data;
            this.in_request_type = in_request_type;
            this.in_Add_Param_One = in_Add_Param_One;
            this.in_Add_Param_Two = in_Add_Param_Two;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class dataInsertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="dataInsertResponse", Namespace="http://api", Order=0)]
        public ServiceReference1.dataInsertResponseBody Body;
        
        public dataInsertResponse()
        {
        }
        
        public dataInsertResponse(ServiceReference1.dataInsertResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://api")]
    public partial class dataInsertResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceReference1.ApiResponse dataInsertReturn;
        
        public dataInsertResponseBody()
        {
        }
        
        public dataInsertResponseBody(ServiceReference1.ApiResponse dataInsertReturn)
        {
            this.dataInsertReturn = dataInsertReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface DataInsertMainChannel : ServiceReference1.DataInsertMain, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class DataInsertMainClient : System.ServiceModel.ClientBase<ServiceReference1.DataInsertMain>, ServiceReference1.DataInsertMain
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataInsertMainClient() : 
                base(DataInsertMainClient.GetDefaultBinding(), DataInsertMainClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.DataInsertMain.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataInsertMainClient(EndpointConfiguration endpointConfiguration) : 
                base(DataInsertMainClient.GetBindingForEndpoint(endpointConfiguration), DataInsertMainClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataInsertMainClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataInsertMainClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataInsertMainClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataInsertMainClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataInsertMainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.dataInsertResponse> ServiceReference1.DataInsertMain.dataInsertAsync(ServiceReference1.dataInsertRequest request)
        {
            return base.Channel.dataInsertAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.dataInsertResponse> dataInsertAsync(string in_user_id, string in_Auth_Key, string in_ChkSum, string in_request_id, string in_xml_data, string in_Bin_data, string in_request_type, string in_Add_Param_One, string in_Add_Param_Two)
        {
            ServiceReference1.dataInsertRequest inValue = new ServiceReference1.dataInsertRequest();
            inValue.Body = new ServiceReference1.dataInsertRequestBody();
            inValue.Body.in_user_id = in_user_id;
            inValue.Body.in_Auth_Key = in_Auth_Key;
            inValue.Body.in_ChkSum = in_ChkSum;
            inValue.Body.in_request_id = in_request_id;
            inValue.Body.in_xml_data = in_xml_data;
            inValue.Body.in_Bin_data = in_Bin_data;
            inValue.Body.in_request_type = in_request_type;
            inValue.Body.in_Add_Param_One = in_Add_Param_One;
            inValue.Body.in_Add_Param_Two = in_Add_Param_Two;
            return ((ServiceReference1.DataInsertMain)(this)).dataInsertAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataInsertMain))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataInsertMain))
            {
                return new System.ServiceModel.EndpointAddress("http://10.100.7.3/isteler_CBS_API/services/DataInsertMain");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataInsertMainClient.GetBindingForEndpoint(EndpointConfiguration.DataInsertMain);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DataInsertMainClient.GetEndpointAddress(EndpointConfiguration.DataInsertMain);
        }
        
        public enum EndpointConfiguration
        {
            
            DataInsertMain,
        }
    }
}
