@model TrainingScheduleViewModel
@{
	ViewData["Title"] = "Create Training Schedule";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Assets/MD_Time_Picker/mdtimepicker.css" rel="stylesheet" />
<link rel="stylesheet" href="https://unpkg.com/multiple-select@1.3.1/dist/multiple-select.min.css">
<style>
	.redStar {
		color: red;
	}
</style>
<div class="card">
	<div class="card-header">
		Training Schedule Maker
	</div>
	<div class="card-body">
		<form method="post" id="scheduleForm">
			<div class="row">
				<div class="col-md-12">
					<div class="form-group row">
						<label for="trainingId" class="col-sm-2 col-form-label">Training <span style="float:right;" class="redStar">*</span></label>
						<div class="col-sm-10">
							<input type="hidden" name="trainingScheduleId" id="trainingScheduleId" value="0" />
							<select class="form-control" id="trainingId" name="trainingId">
								<option value="">Choose Training</option>
								@foreach (var item in Model.trainingInfoNews)
								{
									<option startdate="@item.startDate?.ToString(" dd-MMM-yy")" enddate="@item.endDate?.ToString(" dd-MMM-yy")" value="@item.Id">@item.course (@item.startDate?.ToString("dd-MMM-yy") to @item.endDate?.ToString("dd-MMM-yy"))</option>
								}
							</select>
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="form-group row">
						<label for="topic" class="col-sm-4 col-form-label">Topic <span style="float:right;" class="redStar">*</span></label>
						<div class="col-sm-8">
							<input type="text" name="topic" class="form-control" id="topic" />
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="form-group row">
						<label for="effectiveDate" class="col-sm-4 col-form-label"> Date <span style="float:right;" class="redStar">*</span></label>
						<div class="col-sm-8">
							<input type="text" name="effectiveDate" class="form-control datePicker" autocomplete="off" id="effectiveDate" readonly />
						</div>
					</div>
				</div>
			</div>

			<hr />

			<div class="row">
				@*<div class="form-group row">
				<label for="trainerId" class="col-sm-4 col-form-label">Trainer <span style="float:right;" class="redStar">*</span></label>
				<div class="col-sm-7">
					<select class="form-control" id="trainerId">
						<option value="">Choose Trainer</option>
					</select>
				</div>
				<div class="col-md-1">
					<a href="javascript:void(0)" onclick="AddTrainer()" class="btn btn-success btn-sm"><i class="fas fa-plus float-left"></i></a>
				</div>
			</div>*@
				
				<div class="col-md-4">
					<div style="border:1px solid#ccc; border-radius:5px;padding:10px;min-height:220px;">
						<span>Select Trainer</span>
						<table border="1" id="tableTrainer" cellpadding="3" cellspacing="0" style="border-collapse:collapse; width:100%; margin:auto;">
							<thead>
								<tr>
									<td>SL</td>
									<td>Trainer Name</td>
									<td><input type="checkbox" id="chkAllTrainer" /></td>
								</tr>
							</thead>
							<tbody id="tbodyTrainer">
								
							</tbody>
						
						</table>
					</div>
					</div>
					<div class="col-md-4">
						<div style="border:1px solid#ccc; border-radius:5px;padding:10px;;min-height:220px;max-height:220px;">
							<div  style="max-height:195px;overflow:auto;">
								<span style="text-align:center;">Select Trainee</span>
								<style>
									#tableTraineeTemp, #tableTrainer, #tableScheduleTemp {
										font-size: 12px;
									}
								</style>
								<table id="tableTraineeTemp" border="1" cellpadding="3" cellspacing="0" style="border-collapse:collapse; width:100%;margin:auto; ">
									<thead>
										<tr>
											<td>SL</td>
											<td>Trainee Name</td>
											<td><input type="checkbox" id="chkAllTrainee" /></td>
										</tr>
									</thead>
									<tbody id="tbodyTraineeTemp"></tbody>

								</table>
							</div>
						
						</div>

					</div>
					<div class="col-md-4">
						<div class="row">
							<div style="border:1px solid#ccc; border-radius:5px;padding:10px;;min-height:220px;">
								<div class="col-md-12">
									<div class="form-group row">
										<label for="startTime" class="col-sm-4 col-form-label">Start Time <span style="float:right;" class="redStar">*</span></label>
										<div class="col-sm-8">
											<input type="text" name="startTime" class="form-control " id="startTime" />
										</div>
									</div>
								</div>
								<div class="col-md-12">
									<div class="form-group row">
										<label for="endTime" class="col-sm-4 col-form-label">End Time <span style="float:right;" class="redStar">*</span></label>
										<div class="col-sm-8">
											<input type="text" name="endTime" class="form-control" id="endTime" />
										</div>
									</div>
								</div>
								<div class="col-md-12">
									<div class="form-group row">
										<label for="isBreak" class="col-sm-4 col-form-label">Is Break <span style="float:right;" class="redStar">*</span></label>
										<div class="col-sm-8">
											<select class="form-control" id="isBreak" name="isBreak">
												<option value="0">No</option>
												<option value="1">Yes</option>
											</select>
										</div>
									</div>
								</div>
								<div class="col-md-12">
									<div class="form-group row">
										<label for="sortOrder" class="col-sm-4 col-form-label">Sort Order</label>
										<div class="col-sm-8">
											<input type="text" name="sortOrder" value="1" class="form-control" id="sortOrder" />
										</div>
									</div>
								</div>
								<div class="col-md-12">
									<button type="button" class="btn btn-sm btn-success fa-pull-right" onclick="AddTime()">Add</button>
								</div>
							</div>

						</div>
					</div>

				</div>
			<hr />
			<div class="row">
				<div class="col-md-12">
					<div class="row">
						<div class="col-md-12">
							<span>Schedule Time</span>
							<table border="1" cellpadding="3" cellspacing="0" style="border-collapse:collapse; width:100%; margin:auto;" id="tableScheduleTemp">
								<thead>
									<tr style="text-align:center;">

										<td>Start Time</td>
										<td>End Time</td>
										<td>IsBreak</td>
										<td>Sort Order</td>
										<td>Action</td>
									</tr>
								</thead>
								<tbody id="tbodyScheduleTemp">
								
								</tbody>
							
							</table>

						</div>
					</div>
				</div>
			


			</div>
		

			<div class="row">
				<div class="col-md-12" style="font-size: 25px;" id="trainerDiv">

				</div>
			</div>
			<br />

			<div class="row">
				<div class="col-md-6">

				</div>

				<div class="col-md-6">
					<a href="javascript:void(0)" class="btn btn-sm btn-success fa-pull-right" onclick="AddSchedule()"><i class="fas fa-save" style="margin-right:5px;"></i>Save</a>
				</div>
			</div>
		</form>


	</div>
	<div class="card-footer">
		<table class="table table-bordered table-striped table-hover" id="appendTable">
			<thead>
				<tr>
					<th>SL</th>
					<th>Training</th>
					<th>Date</th>
					<th>Topic</th>
					<th>Trainer</th>
					<th>Start</th>
					<th>End</th>
					<th>IsBreak</th>
					<th>Sort order</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody></tbody>
		</table>
	</div>
</div>


@section Scripts{
	<script src="~/Assets/MD_Time_Picker/mdtimepicker.js"></script>
	<!--Latest compiled and minified JavaScript-->
	<script src="https://unpkg.com/multiple-select@1.3.1/dist/multiple-select.min.js"></script>
	<script src="~/lib/main.js"></script>
	<script src="~/lib/jquery/dist/notify.js"></script>
	<script>
		$(document).ready(function () {
			$('.datePicker').datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "1900:2100" });

			$('#startTime').mdtimepicker({

				// format of the time value (data-time attribute)
				timeFormat: 'hh:mm:ss',
				// format of the input value
				format: 'hh:mm:ss',

				// theme of the timepicker
				// 'red', 'purple', 'indigo', 'teal', 'green', 'dark'
				theme: 'purple',

				// determines if input is readonly
				readOnly: true,

				// determines if display value has zero padding for hour value less than 10 (i.e. 05:30 PM); 24-hour format has padding by default
				hourPadding: true,

				// determines if clear button is visible
				clearBtn: true

			});
			$('#endTime').mdtimepicker({

				// format of the time value (data-time attribute)
				timeFormat: 'hh:mm:ss',
				// format of the input value
				format: 'hh:mm:ss',

				// theme of the timepicker
				// 'red', 'purple', 'indigo', 'teal', 'green', 'dark'
				theme: 'purple',

				// determines if input is readonly
				readOnly: true,

				// determines if display value has zero padding for hour value less than 10 (i.e. 05:30 PM); 24-hour format has padding by default
				hourPadding: true,

				// determines if clear button is visible
				clearBtn: true

			});
			//GetTrainerListByTrainingId(int? id)

		



			$('#trainingId').on('change', function () {
				var id = this.value;
				Common.Ajax('GET', '/HRPMSTrainingNew/TrainingImplementation/GetTrainerByTrainingId?id=' + this.value, [], 'json', ajaxGetTrainerByTrainingId, false);
				Common.Ajax('GET', '/HRPMSTrainingNew/TrainingImplementation/GetAllScheduleByTrainingId?id=' + this.value, [], 'json', ajaxGetAllSchedules, false).done(function () {
					$.ajax({
						url: '@Url.Action("GetTrainerListByTrainingId", "TrainingImplementation")',
						type: 'POST',
						data: { id: id }
					}).done(function (res) {
						//console.log(res);
						for (var i = 0; i < res.length; i++) {
							$("#tr" + res[i].trainingId).html(res[i].trainers);
						}

					});
				});
				GetEnrolledTraineeByPlannId(id);
			});
		});

		function GetEnrolledTraineeByPlannId(id) {
			$.ajax({
				url: '@Url.Action("GetEnrolledTraineeByPlannId", "TrainingImplementation")',
				type: 'POST',
				data: { id: id }
			}).done(function (response) {
				//console.log(response);
				var item = '';
				for (var i = 0; i < response.length; i++) {
					item += '<tr>' +
						'<td style="display:none;">' + response[i].employeeId + '</td>' +
						'<td>' + (i + 1) + '</td>' +
						'<td>' + response[i].name + ' (' + response[i].designation + ')</td>' +
						'<td><input type="checkbox"></td>' +
						'</tr>';
				}
				$("#tbodyTraineeTemp").html(item);

			});
		}

		$('#chkAllTrainee').change(function () {
			if ($(this).prop('checked')) {
				$('#tableTraineeTemp tbody tr td input[type="checkbox"]').each(function () {
					$(this).prop('checked', true);
				});
			} else {
				$('#tableTraineeTemp tbody tr td input[type="checkbox"]').each(function () {
					$(this).prop('checked', false);
				});
			}
		});
		$('#chkAllTrainer').change(function () {
			if ($(this).prop('checked')) {
				$('#tableTrainer tbody tr td input[type="checkbox"]').each(function () {
					$(this).prop('checked', true);
				});
			} else {
				$('#tableTrainer tbody tr td input[type="checkbox"]').each(function () {
					$(this).prop('checked', false);
				});
			}
		});

		function AddTime() {
			if (isValidTime()) {
				var breake = 'YES';
				if ($('#isBreak').val() == "0") {
					breake = 'NO';
				}

				var item = '<tr  style="text-align:center;">' +
					'<td style="display:none;">' + $('#isBreak').val() + '</td>' +
					'<td>' + $('#startTime').val() + '</td>' +
					'<td>' + $('#endTime').val() + '</td>' +
					'<td>' + breake + '</td>' +
					'<td>' + $('#sortOrder').val() + '</td>' +
					'<td><button type="button" class="btn btn-sm btn-danger" onclick="DeleteTime()"><i class="fa fa-trash-alt"></i></button></td>' +
					+'</tr>';
				$('#tbodyScheduleTemp').append(item);
				$('#startTime').val('');
				$('#endTime').val('');
				$('#sortOrder').val((parseInt($('#sortOrder').val()) + 1));
			}
		};

		function isValidTime() {
			var isValid = false;
	       if ($("#startTime").val() == '') {
				$.notify("error: Start Time Required", "error");
			}
			else if ($("#endTime").val() == '') {
				$.notify("error: End Time Required", "error");
			}
		   else if ($('#sortOrder').val()=='') {
			   $.notify("sort Order Required!.", "error");
			}
			else {
				isValid = true;
			}
			return isValid;
		}


		$("#effectiveDate").change(function () {
			if ($("#trainingId :selected").val() == '') {
				$.notify("error: Please Select Training first!", "error");
				$("#effectiveDate").val('');
			} else {
				if (!CheckDateValid()) {
					$("#effectiveDate").val('');
				}
			};
		});

		function CheckDateValid() {
			isValid = false;
			var startdate = $("#trainingId").find('option:selected').attr('startdate');
			var enddate = $("#trainingId").find('option:selected').attr('enddate');
			var effectiveDate = $("#effectiveDate").val();

			if (Date.parse(effectiveDate) > Date.parse(enddate)) {
				$.notify("error: Effective date between  " + startdate + " and " + enddate +"!", "error");
			}
			else if (Date.parse(effectiveDate) < Date.parse(startdate)) {
				$.notify("error:  Effective date between  " + startdate + " and " + enddate +"!", "error");
			} else {
				isValid = true;
			}
			return isValid ;
		};

		$("#startTime, #endTime").change(function () {
			if ($("#startTime").val().length > 0 && $("#endTime").val().length > 0) {
				if (!CheckTimeValid()) {
					$("#startTime").val('');
					$("#endTime").val('');
				};
			}
		});

		function CheckTimeValid() {
			var isValid = false;
			var start_time = $("#startTime").val();
			var end_time = $("#endTime").val();
			var stt = new Date("November 13, 2021 " + start_time);
			stt = stt.getTime();
			var endt = new Date("November 13, 2021 " + end_time);
			endt = endt.getTime();
			//console.log("Time1: " + stt + " Time2: " + endt);

			if (stt > endt) {
				$.notify("error:  Start time must be smaller then End-time", "error");
			} else {
				isValid = true;
			}
			return isValid;
		}

		function isValidForm() {
			var isValid = false;
			if ($("#trainingId :selected").val() == '') {
				$.notify("error: Please select training first!", "error");
			} else if ($("#effectiveDate").val() == '') {
				$.notify("error: Date Required", "error");
			}
			else if ($("#topic").val() == '') {
				$.notify("error: Topic Required", "error");
			}
			else if ($("#startTime").val() == '') {
				$.notify("error: Start Time Required", "error");
			}
			else if ($("#endTime").val() == '') {
				$.notify("error: End Time Required", "error");
			}

			else if ($("#isBreak").val() == '0' && $('#trainerDiv').find('span').length == '') {
               $.notify("Please select a Trainer!.", "error");
			}

			else {
				isValid = true;
			}
			return isValid;
		}


		function AddTrainer() {
            var trainerId = $('#trainerId :selected').val();
            var trainerName = $('#trainerId :selected').text();
			var trainer = $('#trainerId :selected').val() + '-' + $('#trainerId :selected').text();
			if (trainerId > 0) {
				if ($('#trainerDiv').find('#trainer_' + trainerId).length > 0) {
					$.notify("already exists this Person!.", "error");
				} else {
					var option = ` <span id="trainer_${trainerId}" class="badge badge-info">${trainerName} <input type="hidden" name="trainerId" value="${trainer}" /> <a href="javascript:void(0)" class="text-danger" onclick="RemoveTrainer(${trainerId})">x</a></span>`;
					$('#trainerDiv').append(option);
				}
				$('#trainerId').val('');
			} else {
				$.notify("Please select person before add.", "error");
			}
		};

		function RemoveTrainer(trainerId) {
			$("#trainer_" + trainerId).remove();
		};

		function clearForm() {
			$('#trainerDiv').html('');
			$("#topic").val('');
			$("#startTime").val('');
			$("#endTime").val('');
			$('#trainerId').val('');
			$('#sortOrder').val('');
		};

		function ajaxGetTrainerByTrainingId(response) {
			console.log(response);

            var option = '';
            $.each(response, function (i, item) {
                option += `<option value="${item.Id}">${item.name}</option>`
            })
            $('#trainerId').empty();
            $('#trainerId').append(`<option value="">Choose Trainer</option>`);
			$('#trainerId').append(option);

			//Id: designation name: 
			var item = '';
			for (var i = 0; i < response.length; i++) {
				item += '<tr>' +
					'<td style="display:none;">' + response[i].Id + '</td>'+
				'<td>' +(i+1) + '</td>'+
				'<td>' + response[i].name + ' (' + response[i].designation+ ')</td>'+
				'<td><input type="checkbox"></td>'+
				'</tr>';
			}
			$("#tbodyTrainer").html(item);
			

        }

		function AddSchedule() {

			var TraineeList = [];
			var TranerList = [];
			var DetailList = [];
			var HeadObj = {
				trainingId: $("#trainingId").val(),
				effectiveDate: $("#effectiveDate").val(),
				topic: $("#topic").val()
			};

			$('#tableTrainer tr:gt(0)').each(function () {
				var chkBox = $(this).find('td :checkbox');
				var isActive = chkBox.is(":checked");
				if (isActive == true) {
					var Traner = {
						resourcePersonId: $(this).closest("tr").children("td").eq(0).text()
					}
					TranerList.push(Traner);
				}
			});
			$('#tableTraineeTemp tr:gt(0)').each(function () {
				var chkBox = $(this).find('td :checkbox');
				var isActive = chkBox.is(":checked");
				if (isActive == true) {
					var Tranee = {
						employeeInfoId: $(this).closest("tr").children("td").eq(0).text()
					}
					TraineeList.push(Tranee);
				}
			});
			$('#tableScheduleTemp tr:gt(0)').each(function () {
				
				var Schedule = {
					isBreak: $(this).closest("tr").children("td").eq(0).text(),
					startTime: $(this).closest("tr").children("td").eq(1).text(),
					endTime: $(this).closest("tr").children("td").eq(2).text(),
					sortOrder: $(this).closest("tr").children("td").eq(4).text()
					}
				DetailList.push(Schedule);
			});

			console.log(HeadObj);
			console.log(TranerList);
			console.log(TraineeList);
			console.log(DetailList);



			if (isValidForm()) {
				      var formData = $('#scheduleForm').serialize();
				@*$.ajax({
					url: '@Url.Action("SaveSchedule", "TrainingImplementation")',
					type: 'Post',
					data: formData
				}).done(function (res) {
						$.notify("Save Operation Successfully.", "success");
						if (res > 0) {
							Common.Ajax('GET', '/HRPMSTrainingNew/TrainingImplementation/GetAllScheduleByTrainingId?id=' + res, [], 'json', ajaxGetAllSchedules, false)
								.done(function () {
								$.ajax({
									url: '@Url.Action("GetTrainerListByTrainingId", "TrainingImplementation")',
									type: 'POST',
									data: { id: $("#trainingId :selected").val() }
								}).done(function (res) {
									//console.log(res);
									for (var i = 0; i < res.length; i++) {
										$("#tr" + res[i].trainingId).html(res[i].trainers);
									}

								});
							});
							clearForm();
						}
					})
					.fail(function () {
						//console.log("Unable to Save. Please Try Again");
					});*@
			};

		};

        function ajaxGetAllSchedules(response) {
            console.log(response);
			var option = ''; var index = 0;
            $.each(response, function (i, item) {
                var breakStr = 'No';
                if (item.isBreak == 1) {
                    breakStr = 'Yes';
                }
				index++;

				var today = new Date(item.effectiveDate);
				var dd = String(today.getDate()).padStart(2, '0');
				var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
				var yyyy = today.getFullYear();
				today = dd + '/' + mm + '/' + yyyy;
				//console.log(today);


				option += `<tr>
	                        <td>${index}</td>
                            <td>${item.training?.course}</td>
                            <td>${today}</td>
                            <td>${item.topic}</td>
                            <td  id="tr${item.Id}">${item.trainer?.name}</td>
                            <td>${item.startTime}</td>
                            <td>${item.endTime}</td>
                            <td>${breakStr}</td>
                            <td>${item.sortOrder}</td>
                            <td>
                                <a href="javascript:void(0)" onclick="DeleteSchedule(${item.Id})" class="btn btn-sm btn-danger"><i class="fas fa-times"></i></a>
                            </td>
                        </tr>`
            })
            $('#appendTable tbody').empty();
			$('#appendTable tbody').append(option);

        }

        function DeleteSchedule(id) {
            Common.Ajax('GET', '/HRPMSTrainingNew/TrainingImplementation/DeleteSchedule?id=' + id, [], 'json', ajaxDeleteSchedule, false);
        }
		function ajaxDeleteSchedule(res) {
			$.notify("Delete Operation Successfully!", "success");
            Common.Ajax('GET', '/HRPMSTrainingNew/TrainingImplementation/GetAllScheduleByTrainingId?id=' + res, [], 'json', ajaxGetAllSchedules, false);
        }
	</script>
}