@model BudgetRequisitionViewModel
@{
    ViewData["Title"] = "Budget Approval Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-12">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Budget Approve</h6>
            <a class="btn btn-outline-warning btn-sm" data-toggle="tooltip" title="New" href="@Url.Action(" BudgetApprovalList", "BudgetApproval" )" style="color:midnightblue;"><i class="fa fa-backward"> Back To List</i></a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card-body">
            <div class="container" style="background:white">
                <h4 class="card-title col-12" style="color: black;"><u>Budget Details</u></h4>
                <div style="margin-bottom:30px;color:black">
                    <input id="budgetTypeId" value="@Model.budgetTypeId" type="hidden" />
                    <span style="color:black;float:left"><span style="font-weight:800;color:black">@Model.flang.reqNo</span>&nbsp; &nbsp;@Model.Number</span><br />
                    <span style="color:black;float:left"><span style="font-weight:800;color:black">@Model.flang.fiscalYear</span>&nbsp; &nbsp;@Model.fiscalYear.yearName</span>
                    <span style="color:black;text-align:right;float:right"><span style="font-weight:800;color:black">@Model.flang.date</span>&nbsp; &nbsp;@Model.Date?.ToString("dd-MMM-yyyy")</span>
                </div>
                <div class="row">
                    <table class="table table-striped table-bordered table-responsive" id="budgetDetailsTable">
                        <thead style="border:1px solid;border-color:grey"></thead>
                        <tbody style="color:black;border:1px solid;border-color:grey"></tbody>
                    </table>
                </div>
                <div class="row"></div>
            </div>
        </div>
    </div>
</div>
<hr />

<div class="container">
    <h6 class="card-title pull-left col-2" style="color: black;margin-left:0px;padding-left:0px;">Approver Panel</h6>
    <div class="row demop" style="border:ridge" id="divPanel"></div>
</div>


<hr />
<div style="height:15px;"></div>
<div class="row">
    <div class="col-md-8">
        <h6 style="color: black"><u>Budget Approver History</u></h6>
    </div>
</div>
<div class="row">
    <div id="divPanel" class="col-md-8 divBorder" style="padding-left:0px;padding-right:0px;max-height:150px;overflow-x:scroll">
        <table id="AppprovedGrid" class="table table-striped table-bordered">
            <thead style="background-color:#c6c3c3">
                <tr>
                    <th style="width:30%">Process By</th>
                    <th style="width:30%">Date</th>
                    <th style="width:15%;">Remark</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var data in Model.approerPanelList)
                {
                    <tr>
                        <td>@data.EmpName</td>
                        <td>@data.ProcessDate.Substring(0, 10)</td>
                        <td>@data.notes</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4 divBorder">
        <div class="row divBorder">
            <div class="col-sm-6">
                <div style="height:10px;"></div>
                <select id="processType" class="form-control">
                    <option value="3">Approve</option>
                    <option value="4">Return</option>
                    <option value="5">Reject</option>
                </select>
            </div>
            <div class="col-md-6">
                <button type="button" id="btnSave" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;"><i class="fas fa-save"></i></button>
            </div>
        </div>
        <div class="col-md-12 divBorder" style="padding-right:0px;">
            <span style="color:#eb106b;font-size:.8em;padding-left:0px;padding-right:0px;padding-left:0px;"> Remarks<i id="remarkforReturn" style="color:red">*</i></span>
            <textarea id="Remarks" class="form-control pull-right" placeholder="Remarks" style="max-height:40px;"></textarea>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
    $(document).ready(function () {
        let rqId = parseInt(@Model.reqId) ? parseInt(@Model.reqId) : 0;
    if (rqId > 0) {
        EditBudgetDetails();
        Common.Ajax('GET', '/api/matrix/GetPRApproverPanelListFromApprovalLogs/' + 1 + '/' + rqId, [], 'json', GetApproverPanelList);
    }
    $("#btnSave").on("click", SaveRequisuitionApprovalLog);
        });

    function SaveRequisuitionApprovalLog() {
        //$("#btnSave").attr("disabled", true);
        var ReqMasterId = @Model.reqId;
        var ReqNo = '@Model.Number';
        var Remark = $("#Remarks").val();
        var txtAppType = "";
        var conAppType = "";
        var AppType = 0;
        if ($("#processType").val() == "4") {
            AppType = 4; //return
            txtAppType = "Do you want to return this record!";
            conAppType = "Yes, return it!";
        }
        else if ($("#processType").val() == "5") {
            AppType = 5; // reject
            txtAppType = "Do you want to reject this record!";
            conAppType = "Yes, reject it!";
        }
        else {
            AppType = 3; //approve
            txtAppType = "Do you want to approve this record!";
            conAppType = "Yes, approve it!";
        }
        swal({
            title: 'Are you sure?', text: txtAppType, type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: conAppType
        }).then(function () {
            $("#btnSave").attr("disabled", true);
            $.ajax({
                url: '@Url.Action("SaveBudgetApproval", "BudgetApproval")',
                type: "POST",
                data: { reqId: parseInt(ReqMasterId), reqNo: ReqNo, appType: AppType, remark: Remark },
            })
                .done(function () {
                    if (AppType == 5) {
                        swal('Rejected!', 'Your Budget has been rejected.', 'success').then(function () {
                            window.location = '@Url.Action("BudgetApprovalList", "BudgetApproval")';
                            $("#btnSave").attr("disabled", false);
                        })
                    }
                    else if (AppType == 4) {
                        swal('Returned!', 'Your Budget has been returned.', 'success').then(function () {
                            window.location = '@Url.Action("BudgetApprovalList", "BudgetApproval")';
                            $("#btnSave").attr("disabled", false);
                        })
                    }
                    else {
                        swal('Approved!', 'Your Budget has been approved.', 'success').then(function () {
                            window.location = '@Url.Action("BudgetApprovalList", "BudgetApproval")';
                            $("#btnSave").attr("disabled", false);
                        })
                    }
                })
                .fail(function () {
                    swal('Attention!', 'Unable to Approved. Please Try Again.', 'warning');
                    $("#btnSave").attr("disabled", false);
                })
                , function (isConfirm) {
                    if (isConfirm) {
                        $("#btnSave").attr("disabled", false);
                    } else {
                        swal("Cancelled", "", "error");
                        $("#btnSave").attr("disabled", false);
                    }
                };
        });
    }

    function GetApproverPanelList(response) {
        console.log(response);
        $("#divPanel").empty();
        var divPanel = $("#divPanel");
        var inputPanel;
        var index = 0;
        $.each(response, function (id, option) {
            var empName = option.EmpName;//.substr(option.EmpName, 100);
            inputPanel =
                `  <div class="card-body pb-1">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <div class="card aa" style="width:160px!important">
                                                <div class="pt-1" style="height:200px;text-align:center;">
                                                    <div class="">
                                                        <img data-toggle="modal" data-target="#exampleModal1" class="rounded-circle" src="/EmpImages/g2.png" width="100" />
                                                    </div>
                                                    <div class="pt-1" id="result" name="raiserName">${empName}</div>
                                                    <div class="pt-1" id="result" name="raiserName">${option.sequenceNo}</div>
                                                    <input type="hidden" class="clsUserId" value="${option.nextApproverId}"/>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;
            divPanel.append(inputPanel);
            index++;
        });
    }

        function EditBudgetDetails() {
            var monthInfo = dateRange('@Model.fiscalYear.yearStartFrom', '@Model.fiscalYear.yearEndOn');
            $("#budgetDetailsTable thead>tr").empty();
            $("#budgetDetailsTable tbody>tr").empty();
            index = $("#budgetDetailsTable tbody>tr").length;
            var dtTable = $("#budgetDetailsTable");
            var tableHead = dtTable.find('thead');
            var tableBody = dtTable.find('tbody');


            var trHtml = '<tr>' +
                '<td>Budget Head</td>' +
                '<td>' + monthInfo[0] + '</td>' +
                '<td>' + monthInfo[1] + '</td>' +
                '<td>' + monthInfo[2] + '</td>' +
                '<td>' + monthInfo[3] + '</td>' +
                '<td>' + monthInfo[4] + '</td>' +
                '<td>' + monthInfo[5] + '</td>' +
                '<td>' + monthInfo[6] + '</td>' +
                '<td>' + monthInfo[7] + '</td>' +
                '<td>' + monthInfo[8] + '</td>' +
                '<td>' + monthInfo[9] + '</td>' +
                '<td>' + monthInfo[10] + '</td>' +
                '<td>' + monthInfo[11] + '</td>' +
                '<td>Total</td>' +
                '</tr>';

            var trHtmlforhalf =
                `<tr>
               <td>Budget Head</td>
               <td>First Half</td>
               <td>Second Half</td>
               <td>Total</td>
               </tr>`;

            var trHtmlforQuarter =
                `<tr>
               <td>Budget Head</td>
               <td>First Quarter</td>
               <td>Second Quarter</td>
               <td>Third Quarter</td>
               <td>Forth Quarter</td>
               <td>Total</td>
               </tr>`;

            var trHtmlforYear =
                `<tr>
               <td>Budget Head</td>
               <td>Total</td>
               </tr>`;


            var type = $("#budgetTypeId").val()
            
            if (type == 1) {
                tableHead.append(trHtmlforYear);
            }
            else if (type == 2) {
                tableHead.append(trHtml);
            }
            else if (type == 3) {
                tableHead.append(trHtmlforhalf);
            }
            else if (type == 4) {
                tableHead.append(trHtmlforQuarter);
            }
        

        $.each(@Html.Raw(Json.Serialize(Model.budgetRequsitionDetails)), function (id, option) {
            console.table(option);

            var trHtml = '<tr id="0">' +
                '<td> <input readonly="readonly" class="heads" id="head0" value="' + option.budgetHead.name + '" /> <input type="hidden" name="heads" value="' + option.budgetHead.Id + '" class="heads" id="headId0" /></td>' +
                '<td> <input <input readonly="readonly" name="col1"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.firstMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col2"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.secondMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col3"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.thirdMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col4"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.fourthMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col5"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.fifthMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col6"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.sixthMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col7"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.seventhMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col8"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.eighthMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col9"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.ninethMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col10" class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.tenthMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col11"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.eleventhMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col12"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.twelvethMonth + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="amounts"class="TableInput subCol0" value="' + option.subTotal + '" required/></td>' +
                '</tr>';

            var trHtmlforQuarter = '<tr id="0">' +
                '<td> <input readonly="readonly" class="heads" id="head0" value="' + option.budgetHead.name + '" /> <input type="hidden" name="heads" value="' + option.budgetHead.Id + '" class="heads" id="headId0" /></td>' +
                '<td> <input <input readonly="readonly" name="col1"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.firstQuarter + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col2"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.secondQuarter + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col3"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.thirdQuarter + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col4"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.forthQuarter + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="amounts"class="TableInput subCol0" value="' + option.subTotal + '" required/></td>' +
                '</tr>';
            var trHtmlforhalf = '<tr id="0">' +
                '<td> <input readonly="readonly" class="heads" id="head0" value="' + option.budgetHead.name + '" /> <input type="hidden" name="heads" value="' + option.budgetHead.Id + '" class="heads" id="headId0" /></td>' +
                '<td> <input <input readonly="readonly" name="col1"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.firstHalf + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="col2"  class="TableInput col' + id + '" onKeyUp="fnSubTotal(0);" value="' + option.secondHalf + '" required/></td>' +
                '<td> <input <input readonly="readonly" name="amounts"class="TableInput subCol0" value="' + option.subTotal + '" required/></td>' +
                '</tr>';
            var trHtmlforYear = '<tr id="0">' +
                '<td> <input readonly="readonly" class="heads" id="head0" value="' + option.budgetHead.name + '" /> <input type="hidden" name="heads" value="' + option.budgetHead.Id + '" class="heads" id="headId0" /></td>' +
                '<td> <input <input readonly="readonly" name="amounts"class="TableInput subCol0" value="' + option.subTotal + '" required/></td>' +
                '</tr>';
            if (type == 1) {
                tableBody.append(trHtmlforYear);
            } else if (type == 2) {
                tableBody.append(trHtml);
            } else if (type == 3) {
                tableBody.append(trHtmlforhalf);
            } else if (type == 4) {
                tableBody.append(trHtmlforQuarter);
            }
        })
    }
    function dateRange(startDate, endDate) {
        var monthNames = [
            "January", "February", "March",
            "April", "May", "June", "July",
            "August", "September", "October",
            "November", "December"
        ];
        var start = startDate.split('-');
        var end = endDate.split('-');
        var startYear = parseInt(start[0]);
        var endYear = parseInt(end[0]);
        var dates = [];
        for (var i = startYear; i <= endYear; i++) {
            var endMonth = i != endYear ? 11 : parseInt(end[1]) - 1;
            var startMon = i === startYear ? parseInt(start[1]) - 1 : 0;
            for (var j = startMon; j <= endMonth; j = j > 12 ? j % 12 || 11 : j + 1) {
                var month = j;
                var displayMonth = month < 10 ? '0' + month : month;
                dates.push(monthNames[parseInt(displayMonth)]);
            }
        }
        return dates;
    }

    </script>
}
<style>
    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }
        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 3px 25px 3px 25px;
            transition: 0.3s;
            font-size: 15px;
        }
            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }

    .heading {
        text-align: right;
    }

    .project-tab #tabs .nav-tabs .nav-link.show, .nav-tabs .nav-link.active {
        color: #0062cc;
        background-color: transparent;
        border-color: transparent transparent #f3f3f3;
        border-bottom: 3px solid !important;
        font-size: 16px;
        font-weight: bold;
    }

    .project-tab .nav-link {
        border: 1px solid transparent;
        border-top-left-radius: .25rem;
        border-top-right-radius: .25rem;
        color: gray;
        font-size: 16px;
        font-weight: 600;
    }

        .project-tab .nav-link:hover {
            border: none;
        }

    .project-tab a {
        text-decoration: none;
        color: #333;
        font-weight: 600;
    }

    .dropdown-menu > a:hover {
        background-color: #79d180;
        background-image: none;
    }
</style>