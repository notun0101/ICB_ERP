@model FixationIntegrationViewModel
@{
	ViewData["Title"] = "Create";
	Layout = "~/Areas/Payroll/Views/Shared/_SalaryMasterForm.cshtml";

}
<style>
	.redStar {
		color: red;
	}
</style>

<div class="card" style="width: 100%;">
	<div class="card-header  d-flex flex-row align-items-center justify-content-between">
		<h5 class="m-0 font-weight-bold text-primary">Increment Information</h5>
		<a class='btn btn-info mr-4' style="" data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=1013&perentId=5926'><i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>

	</div>
	<div class="card-body">

		<div class="container">
			<form asp-area="Payroll" asp-controller="Fixation" asp-action="Create" method="post" data-parsley-validate="parsley">
				<div asp-validation-summary="All" class="text-danger"></div>
				<div class="row">
					<input type="hidden" id="fixationintegrationId" name="fixationintegrationId" value=0>
					<input type="hidden" id="employeeId" name="employeeId">
					<div class="col-sm-6">
						<div class="form-group row">
							<label for="empcode" class="col-sm-4 col-form-label">Employee Name</label>
							<div class="col-sm-8">
								<input type="hidden" class="form-control" id="empCode" name="empCode">
								<input type="text" class="form-control" id="employeeName">
							</div>
						</div>
						<div class="form-group row">
							<label for="joiningDate" class="col-sm-4 col-form-label">Joining Date</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="joiningDate" id="joiningDate" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="dateOfBirth" class="col-sm-4 col-form-label">Birth Date</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="dateOfBirth" id="dateOfBirth" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="currentGradeId" class="col-sm-4 col-form-label">Current Grade</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="currentGradeId" name="currentGradeId" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="lastIncrementDate" class="col-sm-4 col-form-label">Last Increment date</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="lastIncrementDate" id="lastIncrementDate" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="postingPlace" class="col-sm-4 col-form-label">Posting Place</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="postingPlace" id="postingPlace" readonly>

							</div>
						</div>
						<div class="form-group row">
							<label for="lastPromotionDate" class="col-sm-4 col-form-label">Last promotion Date</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="lastPromotionDate" name="lastPromotionDate" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="effectiveDate" class="col-sm-4 col-form-label">Effective Date </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="effectiveDate" id="effectiveDate" readonly>
							</div>
						</div>

					</div>
					<div class="col-sm-6">

						<div class="form-group row">
							<label for="brachCode" class="col-sm-4 col-form-label">Branch</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="hrBranchId" id="hrBranchId" readonly>
							</div>
						</div>

						<div class="form-group row">
							<label for="designation" class="col-sm-4 col-form-label">Designation</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="designation" id="designation" readonly>
							</div>
						</div>
						<div class="form-group row d-none">
							<label for="fixationType" class="col-sm-4 col-form-label">Fixation Type </label>
							<div class="col-sm-8">
								<input type="hidden" name="fixationType" id="fixationType" value="Increment" />
							</div>
						</div>
						<div class="form-group row">
							<label for="fixationGrade" class="col-sm-4 col-form-label">Fixation Grade <span class="redStar">*</span></label>
							<div class="col-sm-8">
								<select data-parsley-required="true" data-parsley-trigger="keyup" class="form-control" name="fixationGrade" id="fixationGrade">
									<option value="">Select</option>
									@foreach (var data in Model.salaryGrades)
									{
										<option value="@data.Id">@data.gradeName</option>
									}
								</select>
							</div>
						</div>
						<div class="form-group row">
							<label for="amount" class="col-sm-4 col-form-label">New Basic <span class="redStar">*</span></label>
							<div class="col-sm-8">
								<input data-parsley-required="true" type="text" data-parsley-trigger="keyup" class="form-control" readonly name="amount" id="amount">
							</div>
						</div>

						<div class="form-group row">
							<label for="refNo" class="col-sm-4 col-form-label">Ref. No @*<span class="redStar" style="color:red">*</span>*@ </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="refNo" id="refNo" data-parsley-required="false">
							</div>
						</div>
						<div class="form-group row">
							<label for="note" class="col-sm-4 col-form-label">File No </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="fileNo" id="fileNo" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="letterDate" class="col-sm-4 col-form-label">Letter Date </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="letterDate" id="letterDate" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="nextIncrementDate" class="col-sm-4 col-form-label">Next Increment Date </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" name="nextIncrementDate" id="nextIncrementDate" readonly>
							</div>
						</div>

					</div>
				</div>
				<hr>
				<button type="submit" id="submitbtn" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;display:none;"><i class="fas fa-save"></i></button>
				<button type="button" id="submit" value="Submit" class="btn btn-success" style="float:right; margin-top:5px;"><i class="fas fa-save"></i> Save</button>
			</form>
		</div>
	</div>
</div>
<script>

	$(document).ready(function () {
		$("#submit").click(function () {
			swal({
				title: 'Are you sure?', text: 'Do you want to submit this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
			}).then(function () {
				$("#submitbtn").click();
			});
		});
		Common.Ajax('GET', '/global/api/GetActiveAllEmployeeInfoForFixation', [], 'json', ajaxGetEmployees);

		$("#lastIncrementDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
		$("#lastPromotionDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
		$("#letterDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
		$("#effectiveDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
		$("#nextIncrementDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());



	});
	function ajaxGetEmployees(response) {
		var GeEmployeesList = [];
		$.each(response, function (id, option) {
			var obj = new Object();
			obj.key = option.Id;
			obj.value = option.nameEnglish + "(" + option.employeeCode + ")";
			obj.employeeCode = option.employeeCode;
			obj.designation = option.designationName;
			obj.joiningDate = option.joiningDate;
			obj.dateOfBirth = option.dateOfBirth;
			obj.incrementDate = option.incrementDate;
			obj.promotionDate = option.promotionDate;
			obj.nextIncrementDate = option.nextIncrementDate;
			obj.postingPlace = option.placeOfPosting;
			obj.currentGrade = option.currentGrade;
			obj.currentBasic = option.currentBasic;
			obj.branchName = option.branchName;
			obj.fileNo = option.employeeCode;
			GeEmployeesList[GeEmployeesList.length] = obj;
		});
		$('#employeeName').autocomplete({
			source: GeEmployeesList,
			select: function (event, ui) {
				console.log(ui.item)
				//$("#employeeName").val(ui.item.value);
				var Bdate = formatingDate(ui.item.dateOfBirth)
				$("#employeeId").val(ui.item.key);
				$("#empCode").val(ui.item.employeeCode);
				$("#designation").val(ui.item.designation);
				$("#joiningDate").val(formatingDate(ui.item.joiningDate));
				$("#dateOfBirth").val(Bdate);
				$("#postingPlace").val(ui.item.postingPlace);
				$("#currentGradeId").val(ui.item.currentGrade + ' (' + ui.item.currentBasic + ')');
				$("#hrBranchId").val(ui.item.branchName);
				$("#lastIncrementDate").val(formatingDate(ui.item.incrementDate));
				$("#lastPromotionDate").val(formatingDate(ui.item.promotionDate));
				$("#nextIncrementDate").val(formatingDate(ui.item.nextIncrementDate));
				$("#fileNo").val(ui.item.fileNo);
				Common.Ajax('GET', '/Payroll/Fixation/GetSalaryAndGradeByEmpCode?code=' + ui.item.employeeCode, [], 'json', ajaxFiationGrade, true);
				Common.Ajax('GET', '/Payroll/Fixation/GetDisciplinaryInfobyEmp?code=' + ui.item.employeeCode, [], 'json', ajaxDisciplinary, true);
			}
		});
	}
	function ajaxFiationGrade(res) {
		//console.log(res)
		//if (res.jobDuration < 4 && res.gradeId == 17) {
		//    swal('warning', 'Job Duration must be 4 years or more for increment !')
		//}
		//else if (res.jobDuration < 5 && res.gradeId == 16) {

		//    swal('warning', 'Job Duration must be 5 years or more for increment !')
		//}
		//else if (res.jobDuration < 10 && res.gradeId == 15) {

		//    swal('warning', 'Job Duration must be 10 years or more for increment !')
		//}
		//else if (res.jobDuration < 12 && res.gradeId == 14) {

		//    swal('warning', 'Job Duration must be 12 years or more for increment !')
		//}
		//else if (res.jobDuration < 14 && res.gradeId == 13) {
		//    swal('warning', 'Job Duration must be 14 years or more for increment !')
		//}
		//else if (res.jobDuration < 17 && res.gradeId == 12) {
		//    swal('warning', 'Job Duration must be 17 years or more for increment !')
		//}
		//else if (res.jobDuration < 20 && res.gradeId == 1) {
		//    swal('warning', 'Job Duration must be 20 years or more for increment !')
		//}

		//else {
		//    $('#fixationGrade').val(res.employee ?.currentGradeId).css('background-color', '#EAECF4');
		//    $('#fixationGrade').on('mousedown', function (e) {
		//        e.preventDefault();
		//        this.blur();
		//        window.focus();
		//    });
		//    Common.Ajax('GET', '/Payroll/Fixation/GetNewIncrementSalaryAndGradeByEmpCode?code=' + res.employee ?.employeeCode + '&type=increment', [], 'json', ajaxNewFiationGrade, true);
		//}

		$('#fixationGrade').val(res.employee ?.currentGradeId).css('background-color', '#EAECF4');
		$('#fixationGrade').on('mousedown', function (e) {
			e.preventDefault();
			this.blur();
			window.focus();
		});
		Common.Ajax('GET', '/Payroll/Fixation/GetNewIncrementSalaryAndGradeByEmpCode?code=' + res.employee ?.employeeCode + '&type=increment', [], 'json', ajaxNewFiationGrade, true);
		$('#amount').val(res.amount)
	}

	function ajaxDisciplinary(res) {

		console.log("Disciplinary")
		console.log(res)
		if (res != 0) {
			$('#fixationGrade').val();
			$('#amount').val();
			swal('warning', 'The employee is not eligible for increment, because of punishment!');
		}
	}

	function ajaxNewFiationGrade(res) {
		console.log("check")
		console.log(res)
		if (parseInt(res) <= parseInt(0)) {
			swal('warning', 'Please add initial basic first!');
		}
		else {
			$('#amount').val(res);
		}
	}




	$('#fixationGrade').on('change', function () {
		var empCode = $('#empCode').val();
		Common.Ajax('GET', '/Payroll/Fixation/GetNewIncrementFixationByEmpCode?code=' + code, [], 'json', ajaxNewFixationIncrement, false);

	})
	function ajaxNewFixationIncrement(res) {
		console.log(res);
	}
	$('#fixationType').on('change', function () {
		if ($(this).val() == 'Promotion') {
			var code = $('#empCode').val();
			var type = "Promotion";
			Common.Ajax('GET', '/Payroll/Fixation/GetPromotionSalaryByEmpCodeAndType?code=' + code + '&type=' + type, [], 'json', ajaxFunctionGetGrade, false);
		}
		if ($(this).val() == 'Increment') {
			var code = $('#empCode').val();
			var type = "Increment";
			Common.Ajax('GET', '/Payroll/Fixation/GetPromotionSalaryByEmpCodeAndType?code=' + code + '&type=' + type, [], 'json', ajaxFunctionGetGrade, false);
		}
	})
	function ajaxFunctionGetGrade(res) {
		console.log(res);
	}
	//function formatingDate(date) {
	//    date = new Date(date);
	//    var year = date.getFullYear(),
	//        month = date.getMonth() + 1, // months are zero indexed
	//        day = date.getDate(),
	//        hour = date.getHours(),
	//        minute = date.getMinutes(),
	//        second = date.getSeconds(),
	//        hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
	//        minuteFormatted = minute < 10 ? "0" + minute : minute,
	//        morning = hour < 12 ? "am" : "pm";

	//    return day + "/" + + month + "/" + year;

	//}


	function formatingDate(date) {
		var monthName = "";
		date = new Date(date);
		var year = date.getFullYear(),
			month = date.getMonth() + 1, // months are zero indexed
			day = date.getDate(),
			hour = date.getHours(),
			minute = date.getMinutes(),
			second = date.getSeconds(),
			hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
			minuteFormatted = minute < 10 ? "0" + minute : minute,
			morning = hour < 12 ? "am" : "pm";
		if (month == 1) {
			monthName = 'Jan';
		}
		else if (month == 2) {
			monthName = 'Feb';
		}
		else if (month == 3) {
			monthName = 'Mar';
		}
		else if (month == 4) {
			monthName = 'Apr';
		}
		else if (month == 5) {
			monthName = 'May';
		}
		else if (month == 6) {
			monthName = 'Jun';
		}
		else if (month == 7) {
			monthName = 'Jul';
		}
		else if (month == 8) {
			monthName = 'Aug';
		}
		else if (month == 9) {
			monthName = 'Sep';
		}
		else if (month == 10) {
			monthName = 'Oct';
		}
		else if (month == 11) {
			monthName = 'Nov';
		}
		else {
			monthName = 'Dec';
		};

		return day + "-" + monthName + "-" + year;
	}

</script>
