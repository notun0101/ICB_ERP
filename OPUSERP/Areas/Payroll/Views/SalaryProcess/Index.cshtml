@model SalaryProcessViewModel
@{
    ViewData["Title"] = "Employees Salary Process";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Style{
    <style>
        ul.ui-autocomplete {
            z-index: 99999999;
        }
    </style>
}
<div class="card" style="width: 100%;">
    <div class="card-body">
        <h5 class="card-title" style="color: black">Employees Salary Process</h5>
        <h6 id="task" class="animate__animated animate__lightSpeedInRight animate__infinite	infinite" style="background-color: yellow; display: none; width: fit-content; padding: 5px 10px; font-weight: bold; margin-left: 10px;">Background Process Running. Please Wait...</h6>
        <div style="float: right; margin: 16px;">
            <a class='btn btn-success' onclick="CheckLoans()" style="margin-top: -104px;" data-toggle='tooltip' title='Check Loans' href='javascript:void(0)'><span style="">Check Loans</span></a>
            <a class='btn btn-success' onclick="GetNewLoans()" style="margin-top: -104px;" data-toggle='tooltip' title='New Loans' href='javascript:void(0)'><span style="">New Loans</span></a>
            <a class='btn btn-info' style="margin-top: -104px;" data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=10&perentId=5963'><i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>
        </div>
        <hr>
        <div class="container">
            <form id="frmSalaryProcess" method="post" data-parsley-validate="parsley">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="row">
                    <div class="col-md-2">
                    </div>
                    <input type="hidden" id="employeeInfoId" name="employeeInfoId">
                    <div class="col-md-8">
                        <div class="form-group row">
                            <label for="salaryPeriodId" class="col-md-3 col-form-label">Salary Period <span style="color:red;">*</span></label>
                            <div class="col-md-5">
                                <select name="salaryPeriodId" id="salaryPeriodId" class="form-control" onchange="salaryList()" data-parsley-required="true">
                                    <option value="">Select Salary Period</option>
                                    @foreach (var data in Model.salaryPeriods.Where(x => x.salaryTypeId == 1 && x.lockLabel != 5 && x.lockLabel != 6))
                                    {
                                        <option value="@data.Id">@data.periodName</option>
                                    }
                                </select>
                                <input type="hidden" name="lockLabel" value="1" />
                            </div>
                            <div class="col-md-4">
                                <a href="javascript:void(0)" id="checkhouserent" onclick="CheckPartialHouseRent()" class="btn btn-success btn-sm" style="display: none;">Check Partial House Rent</a>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="employeeInfoId" class="col-md-3 col-form-label">Employee Name</label>
                            <div class="col-md-9">
                                <input type="text" class="form-control" id="employeeName" name="employeeName" data-parsley-required="true" data-parsley-trigger="keyup">
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="hrBranchId" class="col-sm-3 col-form-label">Branch Name <span style="color:red;">*</span></label>
                            <div class="col-sm-9">
                                <select class="form-control changable" name="hrBranchId" id="hrBranchId">
                                    <option value="0">Choose Branch</option>
                                    @*@foreach (var item in Model.hrBranches.OrderBy(x => x.branchName))
                                    {
                                        <option value="@item.Id">@item.branchName</option>
                                    }*@
                                </select>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="locationId" class="col-sm-3 col-form-label">Zone Name <span style="color:red;">*</span></label>
                            <div class="col-sm-9">
                                <select class="form-control changable" name="locationId" id="locationId">
                                    <option value="0">Choose Zone</option>
                                    @*@foreach (var item in Model.locations.OrderBy(x => x.branchUnitName))
                                    {
                                        <option value="@item.Id">@item.branchUnitName</option>
                                    }*@
                                </select>
                            </div>
                        </div>

                        <div class="form-group row" id="divtotalemployee">
                            <label for="totalemployee" class="col-md-3 col-form-label">Total Employes</label>
                            <div class="col-md-9">
                                <input type="text" class="form-control" id="totalemployee" name="totalemployee" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label input-sm col-md-3"></label>
                            <div class="col-md-9" id="progress" style="display:none; align-content:center;">
                                <span class="text-success"> <b>Please wait while salary is processing ...</b></span>  <img src="~/Assets/spinner.gif" />
                            </div>
                        </div>




                        @*for period info*@
                        <div class="col-12" id="periodInfo" style="margin-left:25%;padding-right: 24%;">
                            <div class="card">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Salary Period Info</h6>
                                </div>

                                <div class="card-body">
                                    <table class="table table-striped table-bordered" id="educationalTable">
                                        <thead>
                                            <tr>
                                                <th>SL#</th>
                                                <th>Period Name</th>
                                                <th>Year</th>
                                                <th>Month Name</th>
                                                <th>Tax Year</th>

                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row" id="forReportType">
                            <div class="col-md-3">
                            </div>
                            <div class="col-md-5">
                                <select class="form-control" name="reportTypeId" id="reportTypeId">
                                    <option class="form-control" value="">Please Select Report</option>
                                    <option class="form-control" value="MWSS">Month Wise Salary Sheet</option>
                                    <option class="form-control" value="BNKSTMNT">Bank Statement</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Preview" id="btnPrint" class="btn btn-facebook btn-sm" style="width:80px;" />
                            </div>
                            <div class="col-md-2">

                                <button type="button" id="btnSaveProcess" onclick="SavesalaryProcess()" class="btn btn-success btn-sm" style="width:80px;">Process</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<br />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Salary Process List</h6>
            </div>
            <hr />
            <div class="card-body">
                <table class="table table-striped table-bordered table-responsive" id="investmentTable" style="width:100%;"></table>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Salary Log </h6>
            </div>
            <hr />
            <div class="card-body">
                <table class="table table-striped table-bordered table-responsive" id="statusTable" style="width:100%;"></table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="viewEmpSalaryStructureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Remarks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <form id="frmJob" method="post" data-parsley-validate="parsley">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <input type="hidden" id="empId" name="empId" value="0" />
                            <input type="hidden" id="salperId" name="salperId" value="0" />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Name</label>
                                        <div class="col-md-4">
                                            <input type="text" name="txtName" id="txtName" class="form-control" readonly />
                                        </div>
                                        <label class="col-md-2 control-label">Designation</label>
                                        <div class="col-md-4">
                                            <input type="text" name="txtDesig" id="txtDesig" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Remarks <span style="color:red;">*</span></label>
                                        <div class="col-md-8">
                                            <textarea rows="4" name="comments" id="comments" class="form-control" data-parsley-required="true"></textarea>
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" id="btnSaveComments" onclick="SaveComments()" class="btn btn-success btn-sm">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modalFinal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Remarks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="frmDraft" method="post" data-parsley-validate="parsley">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="row">
                        <input type="hidden" id="draftFinalId" name="draftFinalId" value="0" />
                        <input type="hidden" id="statusType" name="statusType" value="" />
                        <input type="hidden" id="salaryPeriodLoadId" name="salaryPeriodLoadId" value="0" />
                        <div class="col-md-8">
                            <div class="form-group row">
                                <label for="remarks" class="col-sm-3 col-form-label">Remarks</label>
                                <div class="col-sm-9">
                                    <textarea name="remarks" id="remarks" class="form-control" rows="3"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="button" class="btn btn-secondary btn-sm" value="Submit" id="btnSubmit" style="width:80px;" onclick="SaveSubmit()" />
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="CheckLoans" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Loan Difference</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<table class="table table-bordered table-striped" id="CheckLoansTbl">
					<thead>
						<tr>
							<th>Sl.</th>
							<th>Emp Code</th>
							<th>Employee Name</th>
							<th>Loan Type</th>
							<th>Total Outstanding</th>
							<th>Salary Structure</th>
						</tr>
					</thead>
					<tbody>
						
					</tbody>
                    <tfoot>

                        <a class='btn btn-danger' onclick="ResolveAll()" title='Resolve All' href='javascript:void(0)'><span style="">Resolve All</span></i></a>

                        @*<a href="javascript:void(0)" class="btn btn-danger" id="resolveAllBtn">Resolve All</a>*@
                        <br />
                        <br />
                    </tfoot>
				</table>
			</div>
		</div>
	</div>
</div>

<div class="modal fade bd-example-modal-lg" id="CheckHouseRentModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Partial House Rent</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped" id="CheckHouseRentTbl">
                    <thead>
                        <tr>
                            <th>Sl.</th>
                            <th>Emp Code</th>
                            <th>Employee Name</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Posting</th>
                            <th>Total Days</th>
                            <th>House Rent</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@*asad added on 08.06.2023*@
<div class="modal fade bd-example-modal-lg" id="SetLoanToSalStruct" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Set Loan To Salary Structure</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <a class='btn btn-danger text-right' onclick="SetAllToSalaryStructure()" title='Set To Salary Structure' href='javascript:void(0)'><span style="">Set To Salary Structure</span></a>
                <table class="table table-bordered table-striped" id="SetLoanToSalStructTbl">
                    <thead>
                        <tr>
                            <th>SL</th>
                            <th>Emp. Name</th>
                            @*<th>First Inst Date</th>*@
                            <th>Loan Type</th>
                            @*<th>Paricular</th>*@
                            <th>Principal</th>
                            <th>Interest</th>
                            <th>Charge</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        $(document).ready(function () {
            $("#divtotalemployee").hide();
            $("#periodInfo").hide();

            $('#hrBrnachId').on('change', function () {
                $('#locationId').val(0);
            })

            $('#locationid').on('change', function () {
                $('#hrBranchId').val(0);
            })

            Common.Ajax('GET', '/global/api/GetActiveAllEmployeeInfo', [], 'json', ajaxGetEmployees);
            //Common.Ajax('GET', '/global/api/GetSalaryPeriodByName', [], 'json', ajaxGetPeriodInfo);
           
            //$("#btnLoad").on("click", function () {
            //    let salaryPeriodId = $('#salaryPeriodId').val();
            //    if (salaryPeriodId == 0) {
            //        swal('Warning', 'Select Salary Period', 'warning');
            //        return false;
            //    }
            //    GetSalaryList(salaryPeriodId);
            //});

			$('#salaryPeriodId').on('change', function () {
                var branchId = $('#salaryPeriodId').val();
                if (branchId != '') {
                    $('#checkhouserent').show();
                }
                else {
                    $('#checkhouserent').hide();
                }
				Common.Ajax('GET', '/Payroll/SalaryProcess/HrBranchForSalaryProcess?periodId=' + branchId, [], 'json', HrBranchForSalaryProcess, false);
				Common.Ajax('GET', '/Payroll/SalaryProcess/HrZonesForSalaryProcess?periodId=' + branchId, [], 'json', HrZonesForSalaryProcess, false);
            })

        });


        $("#btnPrint").click(function (e) {
            let rptType = $('#reportTypeId').val();
            let salaryPeriodId = $('#salaryPeriodId').val();
            let hrBranchId = $('#hrBranchId').val();
            if (rptType == "") {
                swal('Warning', 'Select Report Type', 'warning');
                return false;
            }
            if (salaryPeriodId == 0) {
                swal('Warning', 'Select Salary Period', 'warning');
                return false;
            }
            if (hrBranchId != '0' || hrBranchId != 0) {
                if (rptType == 'MWSS') {
                    //window.open('/Payroll/PayrollReport/MonthlySalaryReport?rptType=' + rptType + '&sbuId=' + 0 + '&pnsId=' + 0 + '&salaryPeriodId=' + salaryPeriodId, '_blank');
                    window.open('/Payroll/PayrollReport/MonthlySalaryReportByHrBranch?rptType=MWSSBNew&hrbranchId=' + hrBranchId + '&pnsId=' + 0 + '&salaryPeriodId=' + salaryPeriodId, '_blank');
                }
                if (rptType == 'BNKSTMNT' || rptType == 'BNKAPP' || rptType == 'WALLSTMNT' || rptType == 'CASHSTMNT') {
                    window.open('/Payroll/PayrollReport/BankStatementReport?rptType=' + rptType + '&sbuId=' + 0 + '&pnsId=' + 0 + '&salaryPeriodId=' + salaryPeriodId, '_blank');
                }
            }
            else {
                swal('Warning', 'Select Branch Name', 'warning');
                return false;
            }
        });

        function ajaxProcessPartialHouseRent(res) {
            console.log(res);
        }

		function ajaxCheckLoans(response) {
			var option = '';
			$.each(response.checkLoans, function (i, item) {
				option += `<tr>
								<td>${i + 1}</td>
								<td>${item.empCode}</td>
								<td>${item.employeeName}</td>
								<td>${item.loanType}</td>
								<td style="text-align: right;">${item.loanDue.toFixed(2)}</td>
								<td style="text-align: right;">${item.Structure.toFixed(2)}</td>
							</tr>`
			})
            $('#CheckLoansTbl tbody').empty();
            $('#CheckLoansTbl tbody').append(option);
            $('#CheckLoansTbl').DataTable();

			$('#CheckLoans').modal('show');
        }

        //Asad added on 08.06.2023
        
        function ajaxGetNewLoans(response) {
    
            var option = '';
            $.each(response.staffLoanInfo, function (i, item) {
                option += `<tr>
								<td>${i + 1}</td>
								<td>${item.EmployeeName}</td>
								<td>${item.loanType}</td>
								<td style="text-align: right;">${item.Principal.toFixed(2)}</td>
								<td style="text-align: right;">${item.Interest.toFixed(2)}</td>
                                <td style="text-align: right;">${item.Charge.toFixed(2)}</td>
                                <td style="text-align: right;">${item.Total.toFixed(2)}</td>
							</tr>`
            })
            $('#SetLoanToSalStructTbl tbody').empty();
            $('#SetLoanToSalStructTbl tbody').append(option);
            $('#SetLoanToSalStructTbl').DataTable();

            $('#SetLoanToSalStruct').modal('show');
        }


		function CheckLoans() {
			Common.Ajax('GET', '/Payroll/SalaryProcess/CheckLoans', [], 'json', ajaxCheckLoans, false);
        }

        //Asad added on 08.06.2023
        function GetNewLoans() {
            var salaryPeriodId = $('#salaryPeriodId option:selected').val();
            //salaryPeriodId = 82;
            if (salaryPeriodId == '') {
                swal("Please Select Salary Period");
                return false;
            }
            Common.Ajax('GET', '/Payroll/StaffLoan/GetNewLoans?salaryPeriodId=' + salaryPeriodId, [], 'json', ajaxGetNewLoans, false);
        }

        function formatDate(date) {
            date = new Date(date);
            var year = date.getFullYear(),
                month = date.getMonth() + 1, // months are zero indexed
                day = date.getDate(),
                hour = date.getHours(),
                minute = date.getMinutes(),
                second = date.getSeconds(),
                hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
                minuteFormatted = minute < 10 ? "0" + minute : minute,
                morning = hour < 12 ? "am" : "pm";

            return day + "/" + + month + "/" + year;
        }

        function ResolveAll() {
            Common.Ajax('GET', '/Payroll/SalaryProcess/ResolveAllLoans', [], 'json', ajaxResolveAll, false);
        }

        function ajaxResolveAll(response) {
            console.log(response);

            if (response != null) {
                swal('success', 'Process Completed Successfully!', 'success').then(function () {});
            }
          
        }

        //Asad added on 08.06.2023
        function SetAllToSalaryStructure() {
            var salaryPeriodId = $('#salaryPeriodId option:selected').val();
            //salaryPeriodId = 82;
            if (salaryPeriodId == '') {
                 alert("Please Select Salary Period");
                 return false;
            }
            Common.Ajax('GET', '/Payroll/SalaryProcess/SetAllToSalaryStructure?salaryPeriodId=' + salaryPeriodId, [], 'json', ajaxSetAllToSalaryStructure, false);
        }
        function ajaxSetAllToSalaryStructure(response) {
            console.log(response);

            if (response != null) {
                swal('success', 'Process Completed Successfully!', 'success').then(function () { });
            }

        }
                     

        function ajaxGetEmployees(response) {
            var GeEmployeesList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.nameEnglish + "(" + option.employeeCode + ")";
                obj.designation = option.designation;
                obj.employeeCode = option.employeeCode;
                GeEmployeesList[GeEmployeesList.length] = obj;
            });
            $('#employeeName').autocomplete({
                source: GeEmployeesList,
                select: function (event, ui) {
                    $("#employeeName").val(ui.item.value);
                    $("#employeeInfoId").val(ui.item.key);
                }
            });
        }

		function HrBranchForSalaryProcess(res) {
			var option = '';
			option += `<option value="0">Choose Branch</option>`
			$.each(res, function (i, item) {
				option += `<option value="${item.Id}">${item.branchName}</option>`
			})
			$('#hrBranchId').empty();
			$('#hrBranchId').append(option);
		}
		function HrZonesForSalaryProcess(res) {
			var option = '';
			option += `<option value="0">Choose Zone</option>`
			$.each(res, function (i, item) {
				option += `<option value="${item.Id}">${item.branchName}</option>`
			})
			$('#locationId').empty();
			$('#locationId').append(option);
		}
        function SavesalaryProcess() {
            let salaryPeriodId = $('#salaryPeriodId').val();
                        
            //$('#progress').show();
            if (salaryPeriodId == "") {
                alert("Please Select Salary Period");
                $('#progress').hide();
                $("#btnSaveProcess").prop("disabled", false);
                return false;
            }

            //Asad added on 10.06.2023
            //salaryPeriodId = 82;
            var newLoans = GetNumberOfNewLoans(salaryPeriodId);
            if (newLoans < 0) {
                alert('Unable to fetch loan information.');
                return false;
            }
            if (newLoans > 0) {
                alert('There are ' + newLoans.toString() + ' new loan(s), please sync with salary structure.');
                return false;
            }            
            $('#progress').show();        
            Common.Ajax('GET', '/Payroll/SalaryProcess/ProcessPartialHouseRent?periodId=' + salaryPeriodId, [], 'json', ajaxProcessPartialHouseRent, false);

            var form = $("#frmSalaryProcess");
                $.ajax({
                    url: '@Url.Action("EMPSalaryProcess", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (count) {
                        swal({
                            title: '', text: 'Process Successfully! Run Background Tasks?', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            $("#totalemployee").val(count);
                            $("#divtotalemployee").show();
                            $('#progress').hide();
                            $("#btnSaveProcess").prop("disabled", true);
                            GetStatusLog(salaryPeriodId);
                            @*if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                                GetSalaryList(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                                GetSalaryList_Brac(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "DB Schenker") {
                                GetSalaryList_DbShenker(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                                GetSalaryList_Priyojon(salaryPeriodId);
                            }
                            else {
                                GetSalaryList_Opus(salaryPeriodId);
                            }*@
                            $('#task').show();
                            location.href = '/Payroll/SalaryProcess/ProcessBackgroundTask?periodId=' + $('#salaryPeriodId').val() + '&empId=0'

                        });
                    }
                });
        }

        function GetNumberOfNewLoans(salaryPeriodId) {
            
            var newLoans = 0;
            $.ajax({
                type: 'GET',
                url: '/Payroll/StaffLoan/GetNumberOfNewLoans?salaryPeriodId=' + salaryPeriodId,
                data: { salaryPeriodId: salaryPeriodId },
                async: false,
                cache: false,
                success: function (data) {
                    newLoans = data.resolveAllVms.status;
                },
                error: function (err, type, httpStatus) {
                    newLoans = -1;
                }
            });
            return newLoans;
        }
        

        function GetStatusLog(salaryPeriodId) {
            $('#statusTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetSalaryStatusLogByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                processing: true,
                destroy: true,
                columns: [
                    { data: "salaryPeriod.periodName", title: "Period Name", width: "25%" },
                    { data: "statusType", title: "Status", width: "15%" },
                    { data: "remarks", title: "Remarks", width: "10%" },
                    { data: "createdBy", title: "Created By", width: "10%" },
                    { data: "createdAt", title: "Created At", width: "25%" },
                    { data: "ipAddress", title: "IP Address", width: "15%" }
                ],
                stateSave: true,
            });
        }
        ////////////////
        function salaryList() {
            var salaryPeriodId = $('#salaryPeriodId').val();
            $("#periodInfo").show();
            Common.Ajax('GET', '/Payroll/SalaryProcess/PeriodList?id=' + salaryPeriodId, [], 'json', ajaxFunction5, false);
        }
        function ajaxFunction5(response) {
            var option = "";
            $.each(response.salaryPeriods, function (i, item) {
                option += `<tr>
                                <td>${i+1}</td>
                                <td>${item.periodName}</td>
                                 <td>${item.salaryYear.yearName}</td>
                                <td>${item.monthName}</td>                      
                                <td>${item.taxYear.taxYearName}</td> 
                            </tr>`
            });
            $('#educationalTable tbody').empty();
            $('#educationalTable tbody').append(option);
        }
        function SendToTaxProcess() {
            if ($('#salaryPeriodId').val() == "") {
                alert("Please Select Salary Period");
                return false;
            }
            swal({
                title: 'Are you sure?', text: 'Do you want to send for tax process this Period!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, send to tax process!'
            }).then(function () {
                window.location.href = "/Payroll/SalaryProcess/EditSalaryPeriodForlockLabel?Id=" + $('#salaryPeriodId').val() + '&lockLabel=' + 1;

                swal('', 'Send Successfully!', 'success')
            });
        }

        function PrintPayslip(empId, periodId) {
            window.open('/Payroll/PayrollReport/SalaryReport?rptType=' + "PSLIP" + '&employeeInfoId=' + empId + '&salaryPeriodId=' + periodId, '_blank');
        }

        function AddComment(id, salaryPeriodId,name,designation,comment) {
            $('#empId').val(id);
            $('#salperId').val(salaryPeriodId);
            $('#txtName').val(name);
            $('#txtDesig').val(designation);
            $('#comments').val(comment);
        }

        function SaveComments() {
            let empId = $('#empId').val();
            let salperId = $('#salperId').val();
            if (empId == 0) {
                swal("Please select employee");
                return false;
            }
            else if ($('#comments').val() == "") {
                swal("Please Insert Comments");
                return false;
            }
            var form = $("#frmJob");
                $.ajax({
                    url: '@Url.Action("SaveSalaryComments", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Saved Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            $('#viewEmpSalaryStructureModal').modal('hide');
                            $('#comments').val('');
                            if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                                GetSalaryList(salperId);
                            }
                            else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                                GetSalaryList_Brac(salperId);
                            }
                            else if ('@ViewBag.Company' == "DB Schenker") {
                                GetSalaryList_DbShenker(salperId);
                            }
                            else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                                GetSalaryList_Priyojon(salperId);
                            }
                            else {
                                GetSalaryList_Opus(salperId);
                            }
                        });
                    }
                });
        }

        function DeleteMaster(empId, salperId) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this remarks!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {

                $.ajax({
                    url: '@Url.Action("DeleteProcessSalaryRemarks", "SalaryProcess")',
                    data: { empId: empId, salperId: salperId},
                    type: 'POST',
                })
                    .done(function () {
                        swal('', 'Deleted Successfully!', 'success');
                        if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                            GetSalaryList(salperId);
                        }
                        else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                            GetSalaryList_Brac(salperId);
                        }
                        else if ('@ViewBag.Company' == "DB Schenker") {
                            GetSalaryList_DbShenker(salperId);
                        }
                        else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                            GetSalaryList_Priyojon(salperId);
                        }
                        else {
                            GetSalaryList_Opus(salperId);
                        }
                    })
                    .fail(function () {
                        swal('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                    });
            });
        }

        function OpenFinalModal(draftFinalId, statusType) {
            let salperId = $('#salaryPeriodId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }
            $('#salaryPeriodLoadId').val(salperId);
            $('#draftFinalId').val(draftFinalId);
            $('#statusType').val(statusType);
            $('#modalFinal').modal('show');
        }

        function SaveSubmit() {            
            let salperId = $('#salaryPeriodId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }            

            swal({
                title: 'Are you sure?', text: 'Do you want to submit this period!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit!'
            }).then(function () {
            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("SaveSalaryStatusLog", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Submit Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            $('#modalFinal').modal('hide');
                            window.location.href = "/Payroll/SalaryProcess/Index";
                        });
                    }
                });
            });
        }

        @*function SaveFinal(draftFinalId, statusType) {
            $('#draftFinalId').val(draftFinalId);
            $('#statusType').val(statusType);

            let salperId = $('#salaryPeriodLoadId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }
            swal({
                title: 'Are you sure?', text: 'Do you want to final this period!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, final!'
            }).then(function () {

            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("SaveSalaryStatusLog", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Final Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            window.location.href = "/Payroll/SalaryProcess/Index";
                        });

                    }
                });

            });
        }*@

        function RefreshPage() {
            window.location.href = "/Payroll/SalaryProcess/Index";
        }

        function GetSalaryList(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UpKeepAllowance", title: "UpKeep Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UtilityAllowance", title: "Utility Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PersonalPay", title: "Personal Pay", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "SpecialAllowance", title: "Site Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "GROSS", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OverTime", title: "Over Time", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSWPF", title: "Gross Salary with OT", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherDeduction", title: "Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "AbsentDeduction", title: "Absent Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "MealCharge", title: "Meal", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Payable Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function GetSalaryList_DbShenker(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                //scrollX: true,
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Enroll." },
                    { data: "nameEnglish", title: "Employee Name" },
                    { data: "empType", title: "Employment Type" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "GROSSFour", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Basic", title: "Basic Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "SpecialAllowance", title: "Exceptional Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "CarAllowance", title: "Car Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FestivalBonus", title: "Festival Bonus", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFEmployer", title: "PF Contribution (Employer's)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Advance", title: "Arrear", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "MealCharge", title: "Lunch Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ExceedCellBill", title: "Mobile uses over limit", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TransportDeduction", title: "Transportation allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFOwn", title: "PF Contribution (Employees)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFEmployer", title: "PF Contribution (Employer's)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ThisYearAdjustment", title: "Adjustment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSFour", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALALLOWANCE", title: "Total Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Total Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Payable", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26,27]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function GetSalaryList_Brac(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Employee's PIN" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "LFA", title: "Leave Fare Assistance-LFA", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ELEnCash", title: "Entertainment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseMaintenance", title: "Maintenance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UtilityAllowance", title: "Utility", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherAddition", title: "Other Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FestivalBonus", title: "Bonus", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFOwn", title: "PF Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TransportDeduction", title: "Transport Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseLoan", title: "Loan Realization", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "InstallmentDeduction", title: "WothOut Pay Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FamilyPackage", title: "Employee Welfare Fund Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "DPSDeduction", title: "DPS Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Deduction Total", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherDeduction", title: "Other Adjustment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Payable", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function GetSalaryList_Priyojon(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Employee Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Annuity", title: "Annuity", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Wages", title: "Wages", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "AdvanceDeduction", title: "Advance Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Total Deduct", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Payable Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    }
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function CheckPartialHouseRent() {
            var periodId = $('#salaryPeriodId').val();
            Common.Ajax('GET', '/Payroll/SalaryProcess/GetPartialHouseRent?periodId=' + periodId, [], 'json', ajaxGetPartialHouseRent, false);
        }

        function ajaxGetPartialHouseRent(response) {
            console.log(response);
            var option = '';
            $.each(response, function (i, item) {
                var posting = '';
                if (item.branchName != null) {
                    posting = item.branchName;
                }
                if (item.zoneName != null) {
                    posting = item.zoneName;
                }
                option += `<tr>
                                <td>${i + 1}</td>
                                <td>${item.employeeCode}</td>
                                <td>${item.employeeName}</td>
                                <td>${formatDate(item.startDate)}</td>
                                <td>${formatDate(item.endDate)}</td>
                                <td>${posting}</td>
                                <td>${item.totalDays} Days</td>
                                <td style="text-align: right;">${item.houseRent.toFixed(2)}</td>
                            </tr>`
            })
            $('#CheckHouseRentTbl tbody').empty();
            $('#CheckHouseRentTbl tbody').append(option);
            $('#CheckHouseRentTbl').DataTable();
            $('#CheckHouseRentModal').modal('show');
        }

        function GetSalaryList_Opus(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Employee Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "deptName", title: "Department" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },                    
                    {
                        data: "GROSS", title: "Gross", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherAddition", title: "Other Addition", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSWPF", title: "Total", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Other Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Pay", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "bankPayable", title: "Bank", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "walletPayable", title: "Wallet", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "cashPayable", title: "Cash", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    { data: "bankAccountNo", title: "A/C No" }
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
                        },
                        title: "Salary List",
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
                        },
                        title: "Salary List",
                    }
                ]
            });
        }

    </script>
}