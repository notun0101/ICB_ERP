@model SalaryProcessViewModel
@{
    ViewData["Title"] = "Salary checker Returns";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Style{
    <style>
    </style>
}
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Salary Returns List</h6>
                <div style="float: right;">
                    <a class='btn btn-info' style=" margin-top: -10px;" data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=10&perentId=5981'><i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>

                </div>
            </div>
            <div class="card-body">
                <form id="frmDraft" method="post" data-parsley-validate="parsley">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="row">
                        <input type="hidden" id="draftFinalId" name="draftFinalId" value="0" />
                        <input type="hidden" id="statusType" name="statusType" value="" />
                        <input type="hidden" id="salaryPeriodId" name="salaryPeriodId" value="0" />
                        <input type="hidden" id="employeeInfoId" name="employeeInfoId" value="0" />
                        <div class="col-md-8">
                            <div class="form-group row">
                                <label for="salaryPeriodLoadId" class="col-sm-3 col-form-label">Salary Period</label>
								<div class="col-sm-9">
									<select name="salaryPeriodLoadId" id="salaryPeriodLoadId" class="form-control" data-parsley-required="true">
										<option value="">Select Salary Period</option>
										@foreach (var data in Model.salaryPeriods.Where(x => x.salaryTypeId == 1 && x.lockLabel == 7))
										{
											<option value="@data.Id">@data.periodName</option>
										}
									</select>
									<input type="hidden" name="lockLabel" id="lockLabel" value="3" />
								</div>
                            </div>
                            <div class="form-group row">
                                <label for="reportTypeId" class="col-sm-3 col-form-label">Report Type</label>
                                <div class="col-sm-9">
                                    <select class="form-control" name="reportTypeId" id="reportTypeId">
                                        <option class="form-control" value="">Please Select Report</option>
                                        <option class="form-control" value="MWSS">Month Wise Salary Sheet</option>
                                        <option class="form-control" value="BNKSTMNT">Bank Statement</option>
                                        @*<option class="form-control" value="WALLSTMNT">Wallet Statement</option>
                                        <option class="form-control" value="CASHSTMNT">Cash Statement</option>*@
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="remarks" class="col-sm-3 col-form-label">Remarks</label>
                                <div class="col-sm-9">
                                    <textarea name="remarks" id="remarks" class="form-control" rows="3"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="button" class="btn btn-success btn-sm" value="Load" id="btnLoad" style="width:120px;" />
                                </div>
                            </div>


                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="button" value="Re-Check" id="btnDraft" class="btn  btn-sm" style="width:120px;background-color:lightskyblue;color:white;" onclick="SaveDraft(2,'Salary Send to Approve')" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="button" value="Preview" id="btnPrint" class="btn  btn-sm" style="width:120px;background-color:darkblue;color:white;" />
                                </div>
                            </div>

                            <br />
                            @*<input type="button" value="Send to Disburse" id="btnFinal" class="btn btn-danger btn-sm" style="width:130px;" onclick="SaveFinal(4,'Salary Disburse')" />
        <br /><br />*@
                            @*<input type="button" value="Back" id="btnBack" class="btn btn-dark btn-sm" style="width:130px;" onclick="SaveBack(0,'Salary Back to Process')" />*@
                            @*<div class="form-group row">
            <div class="col-sm-12">
                <input type="button" value="Send for Approval" id="btnDraft" class="btn btn-danger btn-sm" style="width:130px;" onclick="SaveDraft(3,'Salary Send to Approve')" />
                <button type="button" id="btnSaveProcess" onclick="SavesalaryProcess()" class="btn btn-success btn-sm" style="width:130px;">ReProcess</button>

            </div>
        </div>*@
                        </div>
                    </div>
                </form>
            </div>
            <hr />
            <div class="card-body">
                <table class="table table-striped table-bordered table-responsive" id="investmentTable" style="width:100%;"></table>
            </div>      
        </div>
    </div>
</div>
<br />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Salary Log </h6>
            </div>
            <hr />
            <div class="card-body">
                <table class="table table-striped table-bordered table-responsive" id="statusTable" style="width:100%;"></table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="viewEmpSalaryStructureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Remarks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <form id="frmJob" method="post" data-parsley-validate="parsley">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <input type="hidden" id="empId" name="empId" value="0" />
                            <input type="hidden" id="salperId" name="salperId" value="0" />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Name</label>
                                        <div class="col-md-4">
                                            <input type="text" name="txtName" id="txtName" class="form-control" readonly />
                                        </div>
                                        <label class="col-md-2 control-label">Designation</label>
                                        <div class="col-md-4">
                                            <input type="text" name="txtDesig" id="txtDesig" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Remarks <span style="color:red;">*</span></label>
                                        <div class="col-md-8">
                                            <textarea rows="4" name="comments" id="comments" class="form-control" data-parsley-required="true"></textarea>
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" id="btnSaveComments" onclick="SaveComments()" class="btn btn-success btn-sm">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            $("#btnPrint").click(function (e) {  
                let rptType = $('#reportTypeId').val();
                let salaryPeriodId = $('#salaryPeriodLoadId').val();
                if (rptType == "") {
                    swal('Warning', 'Select Report Type', 'warning');
                    return false;
                }
                if (salaryPeriodId == 0) {
                    swal('Warning', 'Select Salary Period', 'warning');
                    return false;
                }
                if (rptType == 'MWSS') {
                    window.open('/Payroll/PayrollReport/MonthlySalaryReport?rptType=' + rptType + '&sbuId=' + 0 + '&pnsId=' + 0 + '&salaryPeriodId=' + salaryPeriodId, '_blank');
                }
                if (rptType == 'BNKSTMNT' || rptType == 'BNKAPP' || rptType == 'WALLSTMNT' || rptType == 'CASHSTMNT') {
                    window.open('/Payroll/PayrollReport/BankStatementReport?rptType=' + rptType + '&sbuId=' + 0 + '&pnsId=' + 0 + '&salaryPeriodId=' + salaryPeriodId, '_blank');
                }
            });

            $("#btnLoad").on("click", function () {
                let salaryPeriodId = $('#salaryPeriodLoadId').val();
                if (salaryPeriodId == 0) {
                    swal('Warning', 'Select Salary Period', 'warning');
                    return false;
                }                
                GetStatusLog(salaryPeriodId);
                if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                    GetSalaryList(salaryPeriodId);
                }
                else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                    GetSalaryList_Brac(salaryPeriodId);
                }
                else if ('@ViewBag.Company' == "DB Schenker") {
                    GetSalaryList_DbShenker(salaryPeriodId);
                }
                else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                    GetSalaryList_Priyojon(salaryPeriodId);
                }
                else {
                    GetSalaryList_Opus(salaryPeriodId);
                }
            });
        });

        function PrintPayslip(empId, periodId) {
            window.open('/Payroll/PayrollReport/SalaryReport?rptType=' + "PSLIP" + '&employeeInfoId=' + empId + '&salaryPeriodId=' + periodId, '_blank');
        }        

        function GetStatusLog(salaryPeriodId) {
            $('#statusTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetSalaryStatusLogByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                //scrollX: true,
                processing: true,
                destroy: true,
                columns: [
                    { data: "salaryPeriod.periodName", title: "Period Name", width: "25%" },
                    { data: "statusType", title: "Status", width: "15%" },
                    { data: "remarks", title: "Remarks", width: "10%" },
                    { data: "createdBy", title: "Created By", width: "10%" },
                    { data: "createdAt", title: "Created At", width: "25%" },
                    { data: "ipAddress", title: "IP Address", width: "15%" }
                ],
                stateSave: true,
            });
        }

        function AddComment(id, salaryPeriodId, name, designation, comment) {
            $('#empId').val(id);
            $('#salperId').val(salaryPeriodId);
            $('#txtName').val(name);
            $('#txtDesig').val(designation);
            $('#comments').val(comment);
        }

        function SaveComments() {
            let empId = $('#empId').val();
            let salperId = $('#salperId').val();
            if (empId == 0) {
                swal("Please select employee");
                return false;
            }
            else if ($('#comments').val() == "") {
                swal("Please Insert Comments");
                return false;
            }
            var form = $("#frmJob");
                $.ajax({
                    url: '@Url.Action("SaveSalaryComments", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Saved Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            $('#viewEmpSalaryStructureModal').modal('hide');                           
                            $('#comments').val('');
                            if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                                GetSalaryList(salperId);
                            }
                            else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                                GetSalaryList_Brac(salperId);
                            }
                            else if ('@ViewBag.Company' == "DB Schenker") {
                                GetSalaryList_DbShenker(salperId);
                            }
                            else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                                GetSalaryList_Priyojon(salperId);
                            }
                            else {
                                GetSalaryList_Opus(salperId);
                            }
                        });
                    }
                });
        }

        function DeleteMaster(empId, salperId) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this remarks!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {

                $.ajax({
                    url: '@Url.Action("DeleteProcessSalaryRemarks", "SalaryProcess")',
                    data: { empId: empId, salperId: salperId},
                    type: 'POST',
                })
                    .done(function () {
                        swal('', 'Deleted Successfully!', 'success');                       
                        if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                            GetSalaryList(salperId);
                        }
                        else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                            GetSalaryList_Brac(salperId);
                        }
                        else if ('@ViewBag.Company' == "DB Schenker") {
                            GetSalaryList_DbShenker(salperId);
                        }
                        else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                            GetSalaryList_Priyojon(salperId);
                        }
                        else {
                            GetSalaryList_Opus(salperId);
                        }
                    })
                    .fail(function () {
                        swal('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                    });
            });
        }

        function SaveDraft(draftFinalId, statusType) {
            $('#draftFinalId').val(draftFinalId);
            $('#statusType').val(statusType);

            let salperId = $('#salaryPeriodLoadId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }
            swal({
                title: 'Are you sure?', text: 'Do you want to send this period for Re-Check?', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, Send!'
            }).then(function () {
            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("SaveSalaryStatusLog", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Send Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            window.location.href = "/Payroll/SalaryProcess/SalaryOngoing";
                        });
                    }
                });
            });
        }

        @*function SaveFinal(draftFinalId, statusType) {
            $('#draftFinalId').val(draftFinalId);
            $('#statusType').val(statusType);

            let salperId = $('#salaryPeriodLoadId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }
            swal({
                title: 'Are you sure?', text: 'Do you want to send this period for disburse?', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, send!'
            }).then(function () {

            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("SaveSalaryStatusLog", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Send Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            window.location.href = "/Payroll/SalaryProcess/SalaryOngoing";
                        });
                    }
                });
            });
        }

        function SaveBack(draftFinalId, statusType) {
            $('#draftFinalId').val(draftFinalId);
            $('#statusType').val(statusType);

            let salperId = $('#salaryPeriodLoadId').val();
            if (salperId == "") {
                swal("Please Select Salary Period");
                return false;
            }
            swal({
                title: 'Are you sure?', text: 'Do you want to back this salary period?', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, back!'
            }).then(function () {

            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("SaveSalaryStatusLog", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Back Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            window.location.href = "/Payroll/SalaryProcess/SalaryOngoing";
                        });
                    }
                });
            });
        }

        function SavesalaryProcess() {
            let salaryPeriodId = $('#salaryPeriodLoadId').val();
            if (salaryPeriodId == "") {
                swal("Please Select Salary Period");
                $("#btnSaveProcess").prop("disabled", false);
                return false;
            }
            $('#salaryPeriodId').val(salaryPeriodId);

            var form = $("#frmDraft");
                $.ajax({
                    url: '@Url.Action("EMPSalaryReProcess", "SalaryProcess")',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        swal({
                            title: '', text: 'Process Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            $("#btnSaveProcess").prop("disabled", true);                            
                            GetStatusLog(salaryPeriodId);
                            if ('@ViewBag.Company' == "Bricks & Bridges Ltd") {
                                GetSalaryList(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "CLIMATE BRIDGE FUND") {
                                GetSalaryList_Brac(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "DB Schenker") {
                                GetSalaryList_DbShenker(salaryPeriodId);
                            }
                            else if ('@ViewBag.Company' == "Priyojon Healthcare Ltd") {
                                GetSalaryList_Priyojon(salaryPeriodId);
                            }
                            else {
                                GetSalaryList_Opus(salaryPeriodId);
                            }
                        });

                    }
                });
        }*@

        function GetSalaryList(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                processing: true,
                destroy: true,
                columns: [
                    {
                        title: "Action", 
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UpKeepAllowance", title: "UpKeep Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UtilityAllowance", title: "Utility Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PersonalPay", title: "Personal Pay", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "SpecialAllowance", title: "Site Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "GROSS", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OverTime", title: "Over Time", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSWPF", title: "Gross Salary with OT", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherDeduction", title: "Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "AbsentDeduction", title: "Absent Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "MealCharge", title: "Meal", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Payable Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        @*function GetSalaryList_DbShenker(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                //scrollX: true,
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Enroll." },
                    { data: "nameEnglish", title: "Employee Name" },
                    { data: "empType", title: "Employment Type" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "GROSSFour", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Basic", title: "Basic Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "SpecialAllowance", title: "Exceptional Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "CarAllowance", title: "Car Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FestivalBonus", title: "Festival Bonus", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFEmployer", title: "PF Contribution (Employer's)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Advance", title: "Arrear", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "MealCharge", title: "Lunch Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ExceedCellBill", title: "Mobile uses over limit", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TransportDeduction", title: "Transportation allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFOwn", title: "PF Contribution (Employees)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFEmployer", title: "PF Contribution (Employer's)", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ThisYearAdjustment", title: "Adjustment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSFour", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALALLOWANCE", title: "Total Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Total Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Payable", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26,27]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function GetSalaryList_Brac(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                //scrollX: true,
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "PIN" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "LFA", title: "Leave Fare Assistance-LFA", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "ELEnCash", title: "Entertainment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseMaintenance", title: "Maintenance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "UtilityAllowance", title: "Utility", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherAddition", title: "Other Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FestivalBonus", title: "Bonus", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "PFOwn", title: "PF Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TransportDeduction", title: "Transport Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseLoan", title: "Loan Realization", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "InstallmentDeduction", title: "WothOut Pay Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "FamilyPackage", title: "Employee Welfare Fund Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "DPSDeduction", title: "DPS Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Deduction Total", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherDeduction", title: "Other Adjustment", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Payable", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }

        function GetSalaryList_Priyojon(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                //scrollX: true,
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Employee Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "designation", title: "Designation" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Allownace", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance Allowance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Annuity", title: "Annuity", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Wages", title: "Wages", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSS", title: "Gross Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "AdvanceDeduction", title: "Advance Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "IncomeTax", title: "Tax Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Total Deduct", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Payable Salary", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    }
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary',
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
                        },
                        title: "Salary List",
                        messageTop: 'List Of Salary'
                    }
                ]
            });
        }*@

        function GetSalaryList_Opus(salaryPeriodId) {
            $('#investmentTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetMonthlySalaryReportByPeriodId", "SalaryProcess")',
                    dataSrc: "",
                    data: { salaryPeriodId: salaryPeriodId }
                },
                destroy: true,
                columns: [
                    {
                        title: "Action", "width": "10%",
                        "render": function (data, type, e, meta) {
                            return '<a class="btn btn-info" href="javascript:void(0)" title="Add Comments" onclick="AddComment(' + e.Id + ',' + e.salaryPeriodId + ',' + "'" + e.nameEnglish + "'" + ',' + "'" + e.designation + "'" + ',`' + e.Remarks + '`)" data-toggle="modal" data-target="#viewEmpSalaryStructureModal"><i class="fa fa-plus-square"></i></a>&nbsp;&nbsp;<a class="btn btn-danger" href="javascript:void(0)" title="Delete Comments" onclick="DeleteMaster(' + e.Id + ',' + e.salaryPeriodId + ')"><i class="fa fa-trash-alt"></i></a>&nbsp;&nbsp;<a class="btn btn-facebook" href="javascript:void(0)" title="View Payslip" onclick="PrintPayslip(' + e.Id + ',' + e.salaryPeriodId +  ')"><i class="fa fa-print"></i></a>';
                        }
                    },
                    { data: "employeeCode", title: "Employee Code" },
                    { data: "nameEnglish", title: "Name" },
                    { data: "deptName", title: "Department" },
                    { data: "joiningDatePresentWorkstation", title: "Joining Date" },
                    { data: "Remarks", title: "Remarks" },
                    {
                        data: "Basic", title: "Basic", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "HouseRent", title: "House Rent", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Medical", title: "Medical", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "Conveyance", title: "Conveyance", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },                    
                    {
                        data: "GROSS", title: "Gross", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "OtherAddition", title: "Other Addition", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "GROSSWPF", title: "Total", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "TOTALDEDUCT", title: "Other Deduction", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "NET", title: "Net Pay", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "bankPayable", title: "Bank", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "walletPayable", title: "Wallet", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    {
                        data: "cashPayable", title: "Cash", render: $.fn.dataTable.render.number(',', '.', 2, ''), sClass: "numericCol"
                    },
                    { data: "bankAccountNo", title: "A/C No" }
                ],
                stateSave: true,
                dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
                    "<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        titleAttr: 'Excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
                        },
                        title: "Salary List",
                        class: 'btn btn-info'
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-excel"></i> CSV',
                        titleAttr: 'CSV',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
                        },
                        title: "Salary List",
                    }
                ]
            });
        }

    </script>
}