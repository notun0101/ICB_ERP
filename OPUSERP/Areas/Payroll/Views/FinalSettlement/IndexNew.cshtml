
@model FinalSettlementViewModel
@{
    ViewData["Title"] = "Final Settlement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style{
    <style>
        ul.ui-autocomplete {
            z-index: 99999999;
        }
    </style>
}

<div class="card" style="width: 100%;">
    <div class="card-body">
        <h4 class="card-title" style="color: black">Final Settlement</h4>
        <hr>
        <div class="container">
            <div class="row clearfix">
                <div class="col-12">
                    <div class="card mb-4">
                        <!-- Card Header - Dropdown -->
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h6 class="m-0 font-weight-bold text-primary">Resign List</h6>
                        </div>
                        <!-- Card Body -->
                        <div class="card-body">
                            <table class="table table-striped table-bordered" id="resignTable">
                                <thead>
                                    <tr>
                                        <th>@Model.visualEmpCodeName</th>
                                        <th>Employee Name</th>
                                        <th>Designation</th>
                                        <th>Last Working Day</th>
                                        <th>Resign Date</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var data in Model.resigns)
                                    {
                                        <tr>
                                            <td>@data.employee.employeeCode</td>
                                            <td>@data.employee.nameEnglish</td>
                                            <td>@data.employee.designation</td>
                                            <td>@data.lastWorkingDate?.ToString("dd/MM/yyyy")</td>
                                            <td>@data.resignDate?.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <a class="btn btn-success" onclick="GetResignInfo(@data.employeeId,'@data.employee.employeeCode','@data.employee.nameEnglish','@data.employee.designation','@data.lastWorkingDate','@data.resignDate')" href="javascript:void(0)"><i class="fa fa-cog"></i></a>

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <hr>
            <form asp-area="HR" asp-controller="FinalSettlement" asp-action="IndexNew" method="post" data-parsley-validate="parsley" autocomplete="off">

                <div asp-validation-summary="All" class="text-danger"></div>
                <h5 class="card-title" style="color: black">Employee Basic Information</h5>
                <div class="row">
                    <input type="hidden" id="finalSettlementId" name="finalSettlementId" value=0>
                    <input type="hidden" id="employeeInfoId" name="employeeInfoId">
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <label for="employeeCode" class="col-sm-6 col-form-label">@Model.visualEmpCodeName</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="employeeCode" name="employeeCode" readonly="readonly" data-parsley-required="true">
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="employeeName" class="col-sm-6 col-form-label">Employee Name</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="employeeName" name="employeeName" readonly="readonly" data-parsley-required="true">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="designation" class="col-sm-6 col-form-label">Job Tittle</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="designation" value="" name="designation" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="employmentStatus" class="col-sm-6 col-form-label">Employment Status</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="employmentStatus" value="" name="employmentStatus" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="contactNo" class="col-sm-6 col-form-label">Contact No</label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="contactNo" value="" name="contactNo" readonly>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <label for="joiningDate" class="col-sm-6 col-form-label">Joining Date</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="joiningDate" value="" name="joiningDate" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="confirmationDate" class="col-sm-6 col-form-label">Confirmation Date</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="confirmationDate" value="" name="confirmationDate" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="lastWorkingDay" class="col-sm-6 col-form-label">Last Working Day</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="lastWorkingDay" name="lastWorkingDay" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="resignDate" class="col-sm-6 col-form-label">Resign Date</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="resignDate" name="resignDate" readonly>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <label for="location" class="col-sm-6 col-form-label">Location</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="location" value="" name="location" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="division" class="col-sm-6 col-form-label">Division</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="division" value="" name="division" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="department" class="col-sm-6 col-form-label">Department</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="department" value="" name="department" readonly>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="amount" class="col-sm-6 col-form-label">Notice Periods-Served</label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="noticePeriod_Emt" value="" name="noticePeriod_Emt" readonly>
                            </div>
                        </div>

                    </div>
                </div>
                <hr>
                <h5 class="card-title" style="color: black">Salary Structure Information</h5>
                <div class="row">
                    <div class="col-sm-6">
                        <h6 class="m-0 font-weight-bold text-primary">Addition</h6>
                        <table class="table table-striped table-bordered" id="salaryStructureAdditionTable">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Head Name</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            @*<tfoot>
                        <tr>
                            <td colspan="2" style="text-align:right">Total</td>
                            <td style="text-align:right">@Model.employeesSalaryStructuresList.Where(x => x.salaryHead.salaryHeadType == "Addition").Sum(x => x.amount)</td>
                            <td colspan="2"></td>
                        </tr>
                    </tfoot>*@
                        </table>
                    </div>
                    <div class="col-sm-6">
                        <h6 class="m-0 font-weight-bold text-primary">Deduction</h6>
                        <table class="table table-striped table-bordered" id="salaryStructureDeductionTable">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Head Name</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            @*<tfoot>
                        <tr>
                            <td colspan="2" style="text-align:right">Total</td>
                            <td style="text-align:right">@Model.employeesSalaryStructuresList.Where(x => x.salaryHead.salaryHeadType == "Deduction").Sum(x => x.amount)</td>
                            <td colspan="2"></td>
                        </tr>
                    </tfoot>*@
                        </table>
                    </div>
                </div>
                <hr>
                <h5 class="card-title" style="color: black">Settlement Information</h5>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <label for="seperationStatus" class="col-sm-6 col-form-label">Seperation Status</label>
                            <div class="col-sm-6">
                                <select name="seperationStatus" id="seperationStatus" class="form-control" data-parsley-required="true">
                                    <option value="Resigned">Resigned</option>
                                    <option value="Suspended">Suspended</option>
                                    <option value="Retired">Retired</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="noticePeriod_Served" class="col-sm-6 col-form-label">Notice Period - Not Served</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="noticePeriod_Served" name="noticePeriod_Served">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="lenghtOfService" class="col-sm-6 col-form-label">Length of Service(LOS)</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="lenghtOfService" value="" name="lenghtOfService">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row">
                            <label for="lOSFromConfirmation" class="col-sm-6 col-form-label">LOS From Confirmation(LOC)</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="lOSFromConfirmation" name="lOSFromConfirmation">
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="lofSvsCG" class="col-sm-6 col-form-label">LOS For Gratuity</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="lofSvsCG" name="lofSvsCG">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="salaryDisbUpto" class="col-sm-6 col-form-label">Salary Disbursed Upto</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="salaryDisbUpto" value="" name="salaryDisbUpto">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        
                        <div class="form-group row">
                            <label for="leaveBalance" class="col-sm-6 col-form-label">Annual Leave Balance</label>
                            <div class="col-sm-6">
                                <input type="number" value="0" min="0" style="text-align:right;" class="form-control" id="leaveBalance" name="leaveBalance">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="grossSalary" class="col-sm-6 col-form-label">Gross Salary</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="grossSalary" name="grossSalary" readonly="readonly">
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <h5 class="card-title" style="color: black">Salary Settlement</h5>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row">
                            <label for="salaryPeriodId" class="col-md-4 col-form-label">Settlement Period <span style="color:red;">*</span></label>
                            <div class="col-md-8">
                                <select name="salaryPeriodId" id="salaryPeriodId" class="form-control" data-parsley-required="true">
                                    <option value="">Select Settlement Period</option>
                                    @foreach (var data in Model.salaryPeriods.Where(x => x.salaryType.salaryTypeName == "Settlement" && x.lockLabel != 5))
                                    {
                                        <option value="@data.Id">@data.periodName</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row">
                            <label for="salDue" class="col-sm-6 col-form-label">Working Day After Salary <span style="color:red;">*</span></label>
                            <div class="col-sm-6">
                                <input type="number" class="form-control" id="salDue" name="salDue" data-parsley-required="true">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <h6 class="m-0 font-weight-bold text-primary">Addition</h6>
                        <table class="table table-striped table-bordered table-responsive" id="tblAddition">
                            <thead style="border:1px solid;border-color:grey">
                            </thead>
                            <tbody style="color:black;border:1px solid;border-color:grey"></tbody>
                        </table>
                    </div>
                    <div class="col-sm-6">
                        <h6 class="m-0 font-weight-bold text-primary">Deduction</h6>
                        <table class="table table-striped table-bordered table-responsive" id="tblDeduction">
                            <thead style="border:1px solid;border-color:grey">
                            </thead>
                            <tbody style="color:black;border:1px solid;border-color:grey"></tbody>
                        </table>
                    </div>
                </div>
                <hr />
                <button type="submit" value="Submit" title="Save" class="btn btn-success btn-lg" style="float:right; margin-top:5px;"><i class="fas fa-save"></i></button>
            </form>
        </div>
    </div>
</div>

<br />
<hr />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Final Settlement List</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <table class="table table-striped table-bordered" id="finalsettlementTable">
                    <thead>
                        <tr>
                            <th>@Model.visualEmpCodeName</th>
                            <th>Employee Name</th>
                            <th>Designation</th>
                            <th>Last Working Day</th>
                            <th>Total Amount</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var data in Model.finalSettlements)
                        {
                            <tr>
                                <td>@data.employeeInfo.employeeCode</td>
                                <td>@data.employeeInfo.nameEnglish</td>
                                <td>@data.employeeInfo.designation</td>
                                <td>@data.lastWorkingDay</td>
                                <td>@data.totalAmount</td>
                                <td>
                                    <a class="btn btn-success" onclick="Edit(@data.Id,@data.employeeInfoId,'@data.employeeInfo.employeeCode','@data.employeeInfo.nameEnglish','@data.employeeInfo.designation','@data.lastWorkingDay','@data.totalAmount','@data.seperationStatus','@data.noticePeriod_Emt','@data.noticePeriod_Served','@data.salaryDisbUpto','@data.lenghtOfService',@data.leaveBalance,'@data.gratuity','@data.lofSvsCG','@data.grossSalary','@data.basicSalary','@data.salaryPeriodId','@data.salDue')" href="javascript:void(0)" title="Edit"><i class="fa fa-edit"></i></a>
                                    <a class="btn btn-success" href="/Payroll/FinalSettlement/FinalSettlementPdfAction?employeeInfoId=@data.employeeInfoId&salaryPeriodId=@data.salaryPeriodId" target="_blank" title="Final Settlement Print"><i class="fa fa-print"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        $(document).ready(function () {
            $('#finalsettlementTable').DataTable();
            $('#resignTable').DataTable();
            $("#appDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());

            $("#fBonus1").keyup(function () {
                if ($("#fBonus1").val() != '') {

                    Calculation();
                }
                else {
                    $("#fBonus1").val(0);
                    Calculation();
                }
            });
            $("#fBonus2").keyup(function () {
                if ($("#fBonus2").val() != '') {

                    Calculation();
                }
                else {
                    $("#fBonus2").val(0);
                    Calculation();
                }
            });
            $("#gratuity").keyup(function () {
                if ($("#gratuity").val() != '') {

                    Calculation();
                }
                else {
                    $("#gratuity").val(0);
                    Calculation();
                }
            });

            $("#leaveBalance").keyup(function () {
                if ($("#leaveBalance").val() != '') {
                    $("#leaveEncashment").val(parseFloat($("#leaveBalance").val()) * parseFloat($("#basicSalaryPerDay").val().replace(/,/g, "").replace(/,/g, "").replace(/,/g, "")));
                    Calculation();
                }
                else {
                    $("#leaveBalance").val(0);
                    $("#leaveEncashment").val(parseFloat($("#leaveBalance").val()) * parseFloat($("#basicSalaryPerDay").val().replace(/,/g, "").replace(/,/g, "").replace(/,/g, "")));
                    Calculation();
                }
            });
            $("#dailyAllowance").keyup(function () {
                if ($("#dailyAllowance").val() != '') {
                    Calculation();
                }
                else {
                    $("#dailyAllowance").val(0);
                    Calculation();
                }
            });
            
            $("#oAddition1").keyup(function () {
                if ($("#oAddition1").val() != '') {
                    Calculation();
                }
                else {
                    $("#oAddition1").val(0);
                    Calculation();
                }
            });
            $("#carADue").keyup(function () {
                if ($("#carADue").val() != '') {
                    Calculation();
                }
                else {
                    $("#carADue").val(0);
                    Calculation();
                }
            });
            $("#leaveEncashment").keyup(function () {
                if ($("#leaveEncashment").val() != '') {
                    Calculation();
                }
                else {
                    $("#leaveEncashment").val(0);
                    Calculation();
                }
            });
            $("#mobileAllowance").keyup(function () {
                if ($("#mobileAllowance").val() != '') {
                    Calculation();
                }
                else {
                    $("#mobileAllowance").val(0);
                    Calculation();
                }
            });
            $("#internetAllowance").keyup(function () {
                if ($("#internetAllowance").val() != '') {
                    Calculation();
                }
                else {
                    $("#internetAllowance").val(0);
                    Calculation();
                }
            });

            $("#hardInstall").keyup(function () {
                if ($("#hardInstall").val() != '') {
                    Calculation();
                }
                else {
                    $("#hardInstall").val(0);
                    Calculation();
                }
            });
            $("#mobilePhone").keyup(function () {
                if ($("#mobilePhone").val() != '') {
                    Calculation();
                }
                else {
                    $("#mobilePhone").val(0);
                    Calculation();
                }
            });
            $("#mobileData").keyup(function () {
                if ($("#mobileData").val() != '') {
                    Calculation();
                }
                else {
                    $("#mobileData").val(0);
                    Calculation();
                }
            });
            $("#oDeduction1").keyup(function () {
                if ($("#oDeduction1").val() != '') {
                    Calculation();
                }
                else {
                    $("#oDeduction1").val(0);
                    Calculation();
                }
            });
            $("#oDeduction2").keyup(function () {
                if ($("#oDeduction2").val() != '') {
                    Calculation();
                }
                else {
                    $("#oDeduction2").val(0);
                    Calculation();
                }
            });
            $("#incomeTax").keyup(function () {
                if ($("#incomeTax").val() != '') {
                    Calculation();
                }
                else {
                    $("#incomeTax").val(0);
                    Calculation();
                }
            });
            $("#deductedBonus").keyup(function () {
                if ($("#deductedBonus").val() != '') {
                    Calculation();
                }
                else {
                    $("#deductedBonus").val(0);
                    Calculation();
                }
            });
            $("#deductedAmount").keyup(function () {
                if ($("#deductedAmount").val() != '') {
                    Calculation();
                }
                else {
                    $("#deductedAmount").val(0);
                    Calculation();
                }
            });
            $("#carallowanceDeduction").keyup(function () {
                if ($("#carallowanceDeduction").val() != '') {
                    Calculation();
                }
                else {
                    $("#carallowanceDeduction").val(0);
                    Calculation();
                }
            });
            $("#fixedallowanceDeduction").keyup(function () {
                if ($("#fixedallowanceDeduction").val() != '') {
                    Calculation();
                }
                else {
                    $("#fixedallowanceDeduction").val(0);
                    Calculation();
                }
            });
            $("#mobileallowanceDeduction").keyup(function () {
                if ($("#mobileallowanceDeduction").val() != '') {
                    Calculation();
                }
                else {
                    $("#mobileallowanceDeduction").val(0);
                    Calculation();
                }
            });
            $("#internetallowanceDeduction").keyup(function () {
                if ($("#internetallowanceDeduction").val() != '') {
                    Calculation();
                }
                else {
                    $("#internetallowanceDeduction").val(0);
                    Calculation();
                }
            });
            $("#advSal").keyup(function () {
                if ($("#advSal").val() != '') {
                    Calculation();
                }
                else {
                    $("#advSal").val(0);
                    Calculation();
                }
            });
            $("#salaryadjustment").keyup(function () {
                if ($("#salaryadjustment").val() != '') {
                    Calculation();
                }
                else {
                    $("#salaryadjustment").val(0);
                    Calculation();
                }
            });

            $("#noticePeriodDeducion").keyup(function () {
                if ($("#noticePeriodDeducion").val() != '') {
                    var deductedAmount = (parseFloat($('#noticePeriodDeducion').val()) * parseFloat($('#basicSalaryPerDay').val()));
                    $('#deductedAmount').val(deductedAmount.toFixed(2));
                    Calculation();
                }
                else {
                    $("#noticePeriodDeducion").val(0);
                    var deductedAmount = (parseFloat($('#noticePeriodDeducion').val()) * parseFloat($('#basicSalaryPerDay').val()));
                    $('#deductedAmount').val(deductedAmount.toFixed(2));
                    Calculation();
                }
            });
            $("#oAddition2").keyup(function () {
                if ($("#oAddition2").val() != '') {
                    Calculation();
                }
                else {
                    $("#oAddition2").val(0);
                    Calculation();
                }
            });
            $("#lFAAdjust").keyup(function () {
                if ($("#lFAAdjust").val() != '') {
                    Calculation();
                }
                else {
                    $("#lFAAdjust").val(0);
                    Calculation();
                }
            });
            $("#perfBonus").keyup(function () {
                if ($("#perfBonus").val() != '') {
                    Calculation();
                }
                else {
                    $("#perfBonus").val(0);
                    Calculation();
                }
            });
            $("#porataBonus").keyup(function () {
                if ($("#porataBonus").val() != '') {
                    Calculation();
                }
                else {
                    $("#porataBonus").val(0);
                    Calculation();
                }
            });

            $("#pFAmountInter").keyup(function () {
                if (_isUpdate != true) {
                    if ($("#pFAmountInter").val() != '') {
                        Calculation();
                    }
                    else {
                        $("#pFAmountInter").val(0);
                        Calculation();
                    }
                }
            });
            $("#pFAmount").keyup(function () {
                if ($("#finalSettlementId").val() == 0) {
                    if ($("#pFAmount").val() != '') {
                        Calculation();
                    }
                    else {
                        $("#pFAmount").val(0);
                        Calculation();
                    }
                }
            });
            $("#pFCompanyInter").keyup(function () {
                if ($("#finalSettlementId").val() == 0) {
                    if ($("#pFCompanyInter").val() != '') {
                        Calculation();
                    }
                    else {
                        $("#pFCompanyInter").val(0);
                        Calculation();
                    }
                }
            });
            $("#pFAmountHund").keyup(function () {
                if ($("#finalSettlementId").val() == 0) {
                    if ($("#pFAmountHund").val() != '') {
                        Calculation();
                    }
                    else {
                        $("#pFAmountHund").val(0);
                        Calculation();
                    }
                }
            });

            $("#pFLoan").keyup(function () {
                if ($("#pFLoan").val() != '') {
                    Calculation();
                }
                else {
                    $("#pFLoan").val(0);
                    Calculation();
                }
            });
            $("#pFOthersadjustment").keyup(function () {
                if ($("#pFOthersadjustment").val() != '') {
                    Calculation();
                }
                else {
                    $("#pFOthersadjustment").val(0);
                    Calculation();
                }
            });

            
            $("#salDue").keyup(function () {
                let employeeId = $('#employeeInfoId').val();
                let day = $('#salDue').val();

                Common.Ajax('GET', '/Payroll/FinalSettlement/GetAdditionHead/?employeeInfoId=' + employeeId + "&day=" + day, [], 'json', ajaxGetAdditionHead);

                Common.Ajax('GET', '/Payroll/FinalSettlement/GetDeductionHead/?employeeInfoId=' + employeeId + "&day=" + day, [], 'json', ajaxGetDeductionHead);
            });

        });

        function GetResignInfo(employeeId, employeeCode, nameEnglish, designation, lastWorkingDate, resignDate) {
            $('#finalSettlementId').val(0);
            $('#employeeInfoId').val(employeeId);
            $('#employeeCode').val(employeeCode);
            $('#employeeName').val(nameEnglish);
            $('#designation').val(designation);

            Common.Ajax('GET', '/Payroll/FinalSettlement/GetFinalSettlementDataByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxGetFinalSettlementDataByEmpId);

            Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureAdditionByEmpId/?employeeInfoId=' + employeeId, [], 'json', ajaxVieWEmpSalaryStructureAddition);           
            Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureDeductionByEmpId/?employeeInfoId=' + employeeId, [], 'json', ajaxVieWEmpSalaryStructureDeduction);
            //Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureAdditionByEmpId/?employeeInfoId=' + employeeId, [], 'json', ajaxGetAdditionHead);
            //Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureDeductionByEmpId/?employeeInfoId=' + employeeId, [], 'json', ajaxGetDeductionHead);

            Common.Ajax('GET', '/Payroll/FinalSettlement/GetAdditionHead/?employeeInfoId=' + employeeId + "&day=" + 30, [], 'json', ajaxGetAdditionHead);

            Common.Ajax('GET', '/Payroll/FinalSettlement/GetDeductionHead/?employeeInfoId=' + employeeId + "&day=" + 30, [], 'json', ajaxGetDeductionHead);

            //Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesGrossAmountByEmpId/?employeeInfoId=' + employeeId, [], 'json', ajaxGetEmployeesGrossAmount);
        }

        function ajaxGetDeductionHead(response) {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblDeduction tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblDeduction tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            $("#tblDeduction thead>tr").empty();
            $("#tblDeduction tbody>tr").empty();
            index = $("#tblDeduction tbody>tr").length;
            var dtTable = $("#tblDeduction");
            var tableHead = dtTable.find('thead');
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr>' +
                '<td width="70%">Head Name</td>' +
                '<td width="30%">Amount</td>' +
                '</tr>';
            tableHead.append(trHtml);

            $.each(response, function (key, value) {

                index = $("#tblDeduction tbody>tr").length;
                var dtTable = $("#tblDeduction");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.salaryHeadName + '<input type="hidden" id="headDeductAll' + index + '" name="headDeductAll" class="form-control clsId" value="' + value.salaryHeadName + '"></td> <input type="hidden" id="headIdDeductAll' + index + '" name="headIdDeductAll" class="clsId" value="' + value.salaryHeadId + '"></td>' +
                    '<td> <input type="number" value="' + value.amount + '" id="amountDeductAll' + index + '" name="amountDeductAll" class="form-control clsId" style="width:100%;text-align:right;"/></td>' +
                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblDeduction tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })
        }

        function ajaxGetAdditionHead(response) {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblAddition tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblAddition tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            $("#tblAddition thead>tr").empty();
            $("#tblAddition tbody>tr").empty();
            index = $("#tblAddition tbody>tr").length;
            var dtTable = $("#tblAddition");
            var tableHead = dtTable.find('thead');
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr>' +
                '<td width="70%">Head Name</td>' +
                '<td width="30%">Amount</td>' +
                '</tr>';
            tableHead.append(trHtml);

            $.each(response, function (key, value) {

                index = $("#tblAddition tbody>tr").length;
                var dtTable = $("#tblAddition");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.salaryHeadName + '<input type="hidden" id="headAll' + index + '" name="headAll" class="form-control clsId" value="' + value.salaryHeadName + '"></td> <input type="hidden" id="headIdAll' + index + '" name="headIdAll" class="clsId" value="' + value.salaryHeadId + '"></td>' +
                    '<td> <input type="number" value="' + value.amount + '" id="amountAll' + index + '" name="amountAll" class="form-control clsId" style="width:100%;text-align:right;"/></td>' +
                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblAddition tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })
        }

        function ajaxVieWEmpSalaryStructureAddition(response) {
            $("#salaryStructureAdditionTable tbody>tr").remove();
            var dtTableA = $("#salaryStructureAdditionTable");
            var tableBodyA = dtTableA.find('tbody');
            var tablefootA = dtTableA.find('tfoot');
            tableBodyA.empty();
            tablefootA.empty();
            var i = 1;
            var Total = "Total";
            var TotalAdd = 0;
            $.each(response, function (key, value) {
                var trHtml = '<tr><td>' + i + '</td><td>' + value.salaryHead.salaryHeadName + '</td><td style="text-align:right;">' + value.amount.toFixed(2) + '</td><td>' + value.isActive + '</td></tr>';
                tableBodyA.append(trHtml);
                i++;
                TotalAdd = TotalAdd + value.amount;
            });
            var trHtmlfoot = '<tr><td colspan="2"  style="text-align:right;">' + Total + '</td><td style="text-align:right;">' + TotalAdd.toFixed(2) + '</td> <td><td/></tr>';
            tablefootA.append(trHtmlfoot);
            $('#salaryStructureAdditionTable').DataTable();
        }

        function ajaxVieWEmpSalaryStructureDeduction(response) {
            $("#salaryStructureDeductionTable tbody>tr").remove();
            //$('#salaryStructureDeductionTable').DataTable().empty();
            var dtTableA = $("#salaryStructureDeductionTable");
            var tableBodyA = dtTableA.find('tbody');
            var tablefootA = dtTableA.find('tfoot');
            tableBodyA.empty();
            tablefootA.empty();
            var i = 1;
            var Total = "Total";
            var TotalAdd = 0;
            $.each(response, function (key, value) {
                var trHtml = '<tr><td>' + i + '</td><td>' + value.salaryHead.salaryHeadName + '</td><td style="text-align:right;">' + value.amount.toFixed(2) + '</td><td>' + value.isActive + '</td></tr>';
                tableBodyA.append(trHtml);
                i++;
                TotalAdd = TotalAdd + value.amount;
            });
            var trHtmlfoot = '<tr><td colspan="2"  style="text-align:right;">' + Total + '</td><td style="text-align:right;">' + TotalAdd.toFixed(2) + '</td> <td><td/></tr>';
            tablefootA.append(trHtmlfoot);
            $('#salaryStructureDeductionTable').DataTable();
        }

        function ajaxGetFinalSettlementDataByEmpId(response) {
            $('#lastWorkingDay').val(response.LastWorkingDate);
            $('#resignDate').val(response.ResignDate);
            $('#joiningDate').val(response.JoiningDate);
            $('#confirmationDate').val(response.dateOfPermanent);
            $('#department').val(response.Department);
            $('#contactNo').val(response.mobileNumberOffice);
            $('#grossSalary').val(response.Gross.toFixed(2));
            
            //$('#basicSalary').val(response.BasicSal.toFixed(2));
            //$('#basicSalaryPerDay').val(response.BasicSalPerDay.toFixed(2));
            //$('#gratuity').val(response.Gratuity.toFixed(2));
            $('#salaryDisbUpto').val(response.LastDayofSalPaid);
            $('#lenghtOfService').val(response.LOS);
            $('#lOSFromConfirmation').val(response.LOC);
            $('#lofSvsCG').val(response.LofSvsCG);
            $('#noticePeriod_Served').val(parseFloat(response.NPNotServed) ? parseFloat(response.NPNotServed) : 0);
            //$('#noticePeriodDeducion').val(parseFloat(response.NPNotServed) ? parseFloat(response.NPNotServed) : 0);
            $('#noticePeriod_Emt').val(response.NPServed);
            //$('#advSal').val(response.AdvanceDueOthers.toFixed(2));
            //$('#hardInstall').val(response.AdvanceDueHardwares.toFixed(2));
            $('#employmentStatus').val(response.EmploymentStatus);
            
            //Calculation();

        }
        function Calculation() {
            var deductedAmount = 0;
            var totalBenefit = 0;
            var totalOtherBenefit = 0;
            var totalDeduction = 0;
            var totalAmount = 0;
            var netPFPayable = 0;
            var netPFPayable = 0;

            deductedAmount = (parseFloat($('#noticePeriodDeducion').val()) * parseFloat($('#basicSalaryPerDay').val()));
            $('#deductedAmount').val(deductedAmount.toFixed(2));


            totalBenefit = (parseFloat($('#leaveEncashment').val()) + parseFloat($('#dailyAllowance').val()) + parseFloat($('#mobileAllowance').val()) + parseFloat($('#internetAllowance').val()) + parseFloat($('#salDue').val()) + parseFloat($('#specDue').val()) + parseFloat($('#carADue').val()));
            $('#totalBenefit').val(totalBenefit.toFixed(2));

            totalOtherBenefit = (parseFloat($('#porataBonus').val()) + parseFloat($('#fBonus1').val()) + parseFloat($('#fBonus2').val()) + parseFloat($('#perfBonus').val()) + parseFloat($('#lFAAdjust').val()) + parseFloat($('#gratuity').val()) + parseFloat($('#oAddition1').val()) + parseFloat($('#oAddition2').val()));
            $('#totalOtherBenefit').val(totalOtherBenefit.toFixed(2));


            totalDeduction = (parseFloat($('#deductedAmount').val()) + parseFloat($('#salaryadjustment').val()) + parseFloat($('#deductedBonus').val()) + parseFloat($('#advSal').val()) + parseFloat($('#hardInstall').val()) + parseFloat($('#mobilePhone').val()) + parseFloat($('#mobileData').val()) + parseFloat($('#carallowanceDeduction').val()) + parseFloat($('#fixedallowanceDeduction').val()) + parseFloat($('#mobileallowanceDeduction').val()) + parseFloat($('#internetallowanceDeduction').val()) + parseFloat($('#oDeduction1').val()) + parseFloat($('#oDeduction2').val()) + parseFloat($('#incomeTax').val()));

            $('#totalDeduction').val(totalDeduction.toFixed(2));
            $('#totalDeductionAmount').val(totalDeduction.toFixed(2));

            totalAmount = (parseFloat($('#totalBenefit').val()) + parseFloat($('#totalOtherBenefit').val()) - parseFloat($('#totalDeduction').val()));
            $('#totalAmount').val(totalAmount.toFixed(2));

            netPFPayable = (parseFloat($('#pFAmount').val()) + parseFloat($('#pFAmountHund').val()) + parseFloat($('#pFAmountInter').val()) + parseFloat($('#pFCompanyInter').val()));
            $('#totalPFPayable').val(netPFPayable.toFixed(2));

            netPFPayable = (parseFloat($('#totalPFPayable').val()) - (parseFloat($('#pFLoan').val()) + parseFloat($('#pFOthersadjustment').val())));
            $('#netPFPayable').val(netPFPayable.toFixed(2));

        }
        function Edit(Id, employeeInfoId, employeeCode, nameEnglish, designation, lastWorkingDay, totalAmount, seperationStatus, noticePeriod_Emt, noticePeriod_Served, salaryDisbUpto, lenghtOfService, leaveBalance, gratuity, lofSvsCG, grossSalary, basicSalary, salaryperiodId, salDue) {
            $('#finalSettlementId').val(Id);
            $('#employeeInfoId').val(employeeInfoId);
            $('#employeeCode').val(employeeCode);
            $('#employeeName').val(nameEnglish);
            $('#designation').val(designation);
            $('#lastWorkingDay').val(lastWorkingDay);
            $('#totalAmount').val(totalAmount);
            $('#seperationStatus').val(seperationStatus);
            $('#noticePeriod_Emt').val(noticePeriod_Emt);
            $('#noticePeriod_Served').val(noticePeriod_Served);
            $('#salaryDisbUpto').val(salaryDisbUpto);
            $('#lenghtOfService').val(lenghtOfService);
            $('#leaveBalance').val(leaveBalance);
          
            $('#gratuity').val(gratuity);
            $('#lofSvsCG').val(lofSvsCG);
            
            $('#grossSalary').val(grossSalary);
            $('#basicSalary').val(basicSalary);

            $('#salaryPeriodId').val(salaryperiodId);
            $('#salDue').val(salDue);
            
            Common.Ajax('GET', '/Payroll/FinalSettlement/GetFinalSettlementDataByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxGetFinalSettlementDataEditByEmpId);

            Common.Ajax('GET', '/Payroll/FinalSettlement/GetEmployeesSalaryAdditionByEmpId/?periodId=' + salaryperiodId + "&employeeInfoId=" + employeeInfoId, [], 'json', ajaxGetEmployeesSalaryAdditionByEmpId);
            Common.Ajax('GET', '/Payroll/FinalSettlement/GetEmployeesSalaryDeductionByEmpId/?periodId=' + salaryperiodId + "&employeeInfoId=" + employeeInfoId, [], 'json', ajaxGetEmployeesSalaryDeductionByEmpId);

            Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureAdditionByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxVieWEmpSalaryStructureAddition);
            Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureDeductionByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxVieWEmpSalaryStructureDeduction);
        }

        function ajaxGetFinalSettlementDataEditByEmpId(response) {
            $('#resignDate').val(response.ResignDate);
            $('#joiningDate').val(response.JoiningDate);
            $('#confirmationDate').val(response.dateOfPermanent);
            $('#department').val(response.Department);
            $('#grossSalaryPerDay').val(response.GrossSalaryPerDay.toFixed(2));
            $('#basicSalaryPerDay').val(response.BasicSalPerDay.toFixed(2));
            $('#employmentStatus').val(response.EmploymentStatus);                
        }

        function ajaxGetEmployeesSalaryDeductionByEmpId(response) {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblDeduction tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblDeduction tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            $("#tblDeduction thead>tr").empty();
            $("#tblDeduction tbody>tr").empty();
            index = $("#tblDeduction tbody>tr").length;
            var dtTable = $("#tblDeduction");
            var tableHead = dtTable.find('thead');
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr>' +
                '<td width="70%">Head Name</td>' +
                '<td width="30%">Amount</td>' +
                '</tr>';
            tableHead.append(trHtml);

            $.each(response, function (key, value) {

                index = $("#tblDeduction tbody>tr").length;
                var dtTable = $("#tblDeduction");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.salaryHead.salaryHeadName + '<input type="hidden" id="headDeductAll' + index + '" name="headDeductAll" class="form-control clsId" value="' + value.salaryHead.salaryHeadName + '"></td> <input type="hidden" id="headIdDeductAll' + index + '" name="headIdDeductAll" class="clsId" value="' + value.salaryHeadId + '"></td>' +
                    '<td> <input type="number" value="' + value.amount + '" id="amountDeductAll' + index + '" name="amountDeductAll" class="form-control clsId" style="width:100%;text-align:right;"/></td>' +
                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblDeduction tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })
        }

        function ajaxGetEmployeesSalaryAdditionByEmpId(response) {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblAddition tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblAddition tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsitemId").val();
            }

            $("#tblAddition thead>tr").empty();
            $("#tblAddition tbody>tr").empty();
            index = $("#tblAddition tbody>tr").length;
            var dtTable = $("#tblAddition");
            var tableHead = dtTable.find('thead');
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr>' +
                '<td width="70%">Head Name</td>' +
                '<td width="30%">Amount</td>' +
                '</tr>';
            tableHead.append(trHtml);

            $.each(response, function (key, value) {

                index = $("#tblAddition tbody>tr").length;
                var dtTable = $("#tblAddition");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.salaryHead.salaryHeadName + '<input type="hidden" id="headAll' + index + '" name="headAll" class="form-control clsId" value="' + value.salaryHead.salaryHeadName + '"></td> <input type="hidden" id="headIdAll' + index + '" name="headIdAll" class="clsId" value="' + value.salaryHeadId + '"></td>' +
                    '<td> <input type="number" value="' + value.amount + '" id="amountAll' + index + '" name="amountAll" class="form-control clsId" style="width:100%;text-align:right;"/></td>' +
                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblAddition tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })
        }

    </script>
}
