@model EmployeesSalaryStructureViewModel
@{
	ViewData["Title"] = "Employees Salary Structure";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		ul.ui-autocomplete {
			z-index: 99999999;
		}

		.type_Loan.PF:nth-of-type(2n+1) {
			background-color: lightgray !important;
		}

		.type_Loan.Staff {
			background-color: lightgray !important;
		}

		.type_Benevolent {
			background-color: lightpink !important;
		}

		.type_Revenue {
			background-color: lightgreen !important;
		}

		.type_Basic, .type_Basic1 {
			background-color: lightskyblue !important;
		}

		thead tr th {
			font-weight: bold !important;
		}

		tfoot {
			background: lightseagreen;
		}

			tfoot tr td {
				font-weight: bold !important;
			}
	</style>

}
<div class="card" style="width: 100%;">
	<div class="card-body">
		<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
			<h5 class="card-title" style="color: black">Employees Salary Structure</h5>
			<a class='btn btn-info' data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=10&perentId=6005'><i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>
		</div>
		<hr>
		<div class="container">
			<form asp-area="HR" asp-controller="SalaryStructure" asp-action="Index" id="FormId" method="post" data-parsley-validate="parsley">
				<div asp-validation-summary="All" class="text-danger"></div>

				<div class="row" style="background-color:#F9F7E0;height: 90px;border-radius: 6px;">
					<input type="hidden" id="editId" name="editId" value=0>
					<input type="hidden" id="employeeInfoId" name="employeeInfoId">
					<div class="col-sm-4" style="padding-top: 28px;">
						<div class="form-group row">
							<label for="employeeInfoId" class="col-sm-4 col-form-label">Emp Name <span style="color:red;">*</span></label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="employeeName" name="employeeName" placeholder="Employee Name" data-parsley-required="true" @*data-parsley-trigger="keyup" *@>
							</div>
						</div>
						@*<div class="form-group row">
								<label for="Designation" class="col-sm-4 col-form-label">Designation </label>
								<div class="col-sm-8">
									<input type="text" class="form-control" id="Designation" name="Designation" placeholder="Designation" readonly="readonly">
								</div>
							</div>
							<div class="form-group row">
								<label for="department" class="col-sm-4 col-form-label">Department</label>
								<div class="col-sm-8">
									<input type="text" class="form-control" id="department" name="department" placeholder="Department" readonly>
								</div>
							</div>*@
					</div>
					<div class="col-sm-4" style="padding-top: 28px;">


						<div class="form-group row">
							<label for="Designation" class="col-sm-4 col-form-label">Designation </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="Designation" name="Designation" placeholder="Designation" readonly="readonly">
							</div>
						</div>


					</div>
					<div class="col-sm-4" style="padding-top: 28px;">

						<div class="form-group row">
							<label for="dateOfJoining" class="col-sm-4 col-form-label">Joining Date</label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="dateOfJoining" name="dateOfJoining" placeholder="Joining Date" readonly>
							</div>
						</div>
					</div>



					@*<div class="col-sm-8">
							<div class="form-group row" style="margin-top: 13px; background-color:#dafee4cc; border-radius: 20px; height: 149px; margin-right: 5px;">
								<div class="col-sm-6" style="padding-top: 15px;">
									<div class="form-group row">
										<label class="col-sm-4 col-form-label" style="padding-left: 9px;">Salary Grade</label>
										<div class="col-sm-8">
											<input type="text" class="form-control" id="salaryGradeIdT" autocomplete="off" placeholder="Salary Grade" readonly="readonly">

										</div>
									</div>
									<div class="form-group row">
										<label for="type" class="col-sm-4 col-form-label">Type</label>
										<div class="col-sm-8">
											<input type="text" class="form-control" id="typeT" autocomplete="off" placeholder="Salary Type" readonly="readonly">


										</div>

									</div>
									<div class="form-group row">
										<label class="col-sm-4 col-form-label">Salary Slab</label>
										<div class="col-sm-8">
											<input type="text" class="form-control" id="salarySlabT" autocomplete="off" placeholder="Salary Slab" readonly="readonly">

										</div>
									</div>

								</div>
								<div class="col-sm-6" style="padding-top: 15px;">
									<div class="form-group row">
										<label class="col-sm-4 col-form-label" style=" padding: 0;"> Amount</label>
										<div class="col-sm-8">
											<input type="number" class="form-control" id="amountT" value="" placeholder="Gross Amount" readonly="readonly">
										</div>
									</div>
									<div class="form-group row">
										<label class="col-sm-4 col-form-label" style="padding-left: 1px;">Effective Date </label>
										<div class="col-sm-8">
											<input type="text" class="form-control" id="effectiveDateT" placeholder="Effective Date" readonly="readonly">
										</div>
									</div>
								</div>
							</div>

						</div>*@

				</div>
				<div class="row" style="background-color:#F9F7E0;height: 90px;border-radius: 6px;">
					<div class="col-sm-4">
						<div class="form-group row">
							<label for="sbu" class="col-sm-4 col-form-label">SBU </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="sbu" name="sbu" placeholder="SBU" readonly="readonly">
							</div>
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group row">
							<label for="sbu" class="col-sm-4 col-form-label">Posting </label>
							<div class="col-sm-8">
								<input type="text" class="form-control" id="Posting" name="Posting" placeholder="Posting" readonly="readonly">
							</div>
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group row">
							<label for="serviceStatus" class="col-sm-4 col-form-label">Service Status </label>
							<div class="col-sm-8">
								<select class="form-control" id="serviceStatus" name="serviceStatus">
									<option value="">Select</option>
									<option value="2">General</option>
									<option value="4">PRL</option>
									<option value="5">Retirement</option>
								</select>
							</div>
						</div>
					</div>
				</div>
				<hr>
				<h6 class="text-primary">Salary Structure</h6>

				<div class="row" style="background-color: #f6f3d0a8; padding-bottom: 5px; margin-left: -10px;border-radius: 6px;">
					<input type="hidden" id="editId" name="editId" value=0>
					<input type="hidden" id="employeeInfoId" name="employeeInfoId">
					<div class="col-sm-6" style="padding-top: 24px;">
						<div class="form-group row">
							<label for="salaryGradeId" class="col-sm-3 col-form-label">Salary Grade <span style="color:red;">*</span></label>
							<div class="col-sm-9">
								<input type="hidden" id="salaryGradeId" value="" name="salaryGradeId">
								<input type="text" class="form-control" id="salaryGradeName" value="" placeholder="Salary Grade" data-parsley-required="true" readonly>
							</div>
						</div>
						<div class="form-group row" style="display:none">
							<label for="Gtype" class="col-sm-3 col-form-label">Type</label>
							<div class="col-sm-9">
								<input type="text" class="form-control" id="Gtype" placeholder="Salary Type" readonly="readonly">
							</div>
						</div>
						<div class="form-group row">
							<label for="salarySlab" class="col-sm-3 col-form-label">Salary Slab</label>
							<div class="col-sm-9">
								<input type="hidden" id="salarySlab" value="" name="salarySlab">
								<input type="text" class="form-control" id="salarySlabName" value="" placeholder="Salary Slab" data-parsley-required="false" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="pfType" class="col-sm-3 col-form-label">PF Type<span style="color:red;">*</span></label>
							<div class="col-sm-9">
								<select class="form-control" id="pfType" name="pfType" value="@Model.pfType" data-parsley-required="true" readonly>
									<option value="" selected>Select PF Type</option>
									<option value="CPF">CPF</option>
									<option value="GPF">GPF</option>
								</select>
							</div>
						</div>
					</div>
					<div class="col-sm-6" style="padding-top: 24px;">
						<div class="form-group row">
							<label for="amount" class="col-sm-3 col-form-label">Amount</label>
							<div class="col-sm-9">
								<input type="number" class="form-control" id="amount" value="" name="amount" placeholder="Amount" data-parsley-required="false" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="effectiveDate" class="col-sm-3 col-form-label">Effective Date <span style="color:red;">*</span> </label>
							<div class="col-sm-9">
								<input type="text" class="form-control" id="effectiveDate" value="@DateTime.Now.Date.ToString("dd-MMM-yyyy")" name="effectiveDate" placeholder="Effective Date" autocomplete="off" readonly="readonly">
							</div>
						</div>
						<div class="form-group row">
							<label for="pfPercentage" class="col-sm-3 col-form-label">PF Percentage</label>
							<div class="col-sm-9">
								<input type="number" class="form-control" id="pfPercentage" name="pfPercentage" value="@Model.pfPercentage" data-parsley-required="false">
							</div>
						</div>
					</div>

					<div class="col-md-6">
						<div class="form-group row">
							<label for="dueHBALoan" class="col-sm-3 col-form-label">Due Loan</label>
							<div class="col-sm-9">
								<input type="text" class="form-control" id="dueHBALoan" value="" placeholder="Due Loan" readonly>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group row">
							<div class="col-sm-5">
								<select class="form-control" id="deductionType">
									<option value="">Deduction From</option>
									<option value="house" selected>House Rent</option>
									<option value="lakh">Amount Per Lakh</option>
								</select>
							</div>
							<div class="col-sm-7">
								<input type="text" class="form-control" id="amntPerLakh" value="" placeholder="Amount Per Lakh">
							</div>
						</div>
					</div>
				</div>
				<hr>
				<button type="button" id="submit" value="Submit" title="Save" class="btn btn-success" style="float:right; margin-top:5px; "><i class="fas fa-save"> Save</i></button>

				<button type="button" value="View" title="View Structure" id="BtnProcess" class="btn btn-facebook" style="float:right; margin-top:5px; margin-right: 13px; background-color:lightskyblue"><i class="fas fa-street-view"> View</i></button>
				@*<a title="Tax Calculate" class="btn btn-outline-secondary" onclick="opentaxdetails()" style="float:left; margin-top:5px;color:black">Tax Calculation</a>*@
			</form>
		</div>
	</div>
</div>

<br />
<hr />
<div class="row clearfix" id="ProcessAftereSave">
	<div class="col-12">
		<div class="card mb-4">
			<!-- Card Header - Dropdown -->
			<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
				<h5 class="m-0 font-weight-bold text-primary" style="padding-bottom: 13px;">Employees Salary Structure List</h5>
			</div>

			<!-- Card Body -->
			<div class="card-body" style="background-color:#f6f3d0a8;">
				<div class="row col-md-12">
					<div class="col-6">
						<h6 class="m-0 font-weight-bold text-primary" style="padding-bottom: 13px;">Addition</h6>
						<table class="table table-striped table-bordered" id="salaryStructureAdditionTable" style="background-color: #dafee4cc;">
							<thead>
								<tr>
									<th>SL</th>
									<th>Head Name</th>
									<th>Amount</th>
									<th>Status</th>
									<th>Action</th>
								</tr>
							</thead>
							<tbody></tbody>
							<tfoot>
								<tr>
									<td colspan="2" style="text-align:right">Total</td>
									<td style="text-align:right" id="totalAddition"></td>
									<td colspan="2"></td>
								</tr>
							</tfoot>
						</table>
					</div>
					<div class="col-6">
						<h6 class="m-0 font-weight-bold text-primary" style="padding-bottom: 13px;">Deduction</h6>
						<table class="table table-striped table-bordered" id="salaryStructureDeductionTable" style="background-color: #dafee4cc;">
							<thead>
								<tr>
									<th>SL</th>
									<th>Head Name</th>
									<th>Amount</th>
									<th>Status</th>
									<th>Action</th>
								</tr>
							</thead>
							<tbody></tbody>
							<tfoot>
								<tr>
									<td colspan="2" style="text-align:right">Total</td>
									<td style="text-align:right" id="totalDeduction"></td>
									<td colspan="2"></td>
								</tr>
							</tfoot>
						</table>
						<label for="grossamount" class="col-sm-5 col-form-label">Net Amount</label>

						<div class="col-sm-7">
							@{
								decimal gross = 0;
								decimal additions = Model.employeesSalaryStructuresList.Where(x => x.salaryHead.salaryHeadType == "Addition" && x.isActive == "Active").Sum(x => x.amount);
								decimal deductions = Model.employeesSalaryStructuresList.Where(x => x.salaryHead.salaryHeadType == "Deduction" && x.isActive == "Active").Sum(x => x.amount);
								gross = additions - deductions;
								decimal PrevAmount = additions + deductions;
								
							}
							<input type="number" class="form-control" id="grossamount" style="text-align:right; background: lightgoldenrodyellow; font-weight: bold; text-align: left;" value="@gross" name="grossamount" data-parsley-required="true" readonly>
						</div>
					</div>
				</div>


			</div>
		</div>
	</div>
</div>



<!-- View Service Reminders Modal-->
<div class="modal fade" id="viewEmpSalaryStructureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Edit Salary Structure</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-md-12">
						<form id="frmEditSalaryStructure" autocomplete="off">
							<div class="form-group row">
								<input type="hidden" id="editsalarystructureId" name="editsalarystructureId" />
								<label for="headName" class="col-sm-3 col-form-label">Head Name</label>
								<input type="hidden" value="0" id="rownumber" />
								<div class="col-sm-9">
									<input type="text" class="form-control" id="headName" value="" name="headName" data-parsley-required="true" readonly>
								</div>
							</div>
							<div class="form-group row">
								<label for="headamount" class="col-sm-3 col-form-label">Amount <span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<input type="number" class="form-control" id="headamount" value="" name="headamount" data-parsley-required="true">
								</div>
							</div>
							<div class="form-group row">
								<label for="salarystructureStatus" class="col-sm-3 col-form-label">Status<span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<select name="salarystructureStatus" id="salarystructureStatus" class="form-control" data-parsley-required="true">
										<option value="Active">Active</option>
										<option value="InActive">InActive</option>
									</select>
								</div>
							</div>
							<div class="form-group row">
								<label for="salaryStructureValidity" class="col-sm-3 col-form-label">Expire Date<span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<input type="text" class="form-control datePicker" readonly name="salaryStructureValidity" id="salaryStructureValidity" value="" />
								</div>
							</div>
						</form>

					</div>
				</div>
			</div>
			<div class="modal-footer">
				<a href="javascript:void(0)" style="color:deepskyblue" data-dismiss="modal">Close</a>&nbsp;
				<a href="javascript:void(0)" id="postBtn" onclick="saveSalary()" style="background-color:#024972;" class="btn-primary btn-sm pull-right; display: none;">Save</a>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="viewEmpSalaryStructureModalDeduction" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Edit Salary Structure</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-md-12">
						<form id="frmEditSalaryStructureDeduction" autocomplete="off">
							<div class="form-group row">
								<input type="hidden" id="editsalarystructureDedId" name="editsalarystructureDedId" />
								<label for="DeducHeadName" class="col-sm-3 col-form-label">Head Name</label>
								<input type="hidden" value="0" id="rownumberDeduction" />
								<div class="col-sm-9">
									<input type="text" class="form-control" id="DeducHeadName" value="" name="DeducHeadName" data-parsley-required="true" readonly>
								</div>
							</div>
							<div class="form-group row">
								<label for="headamountDed" class="col-sm-3 col-form-label">Amount <span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<input type="number" class="form-control" id="headamountDed" value="" name="headamountDed" data-parsley-required="true">
								</div>
							</div>
							<div class="form-group row">
								<label for="salarystructureStatusDed" class="col-sm-3 col-form-label">Status<span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<select name="salarystructureStatus" id="salarystructureStatusDed" class="form-control" data-parsley-required="true">
										<option value="Active">Active</option>
										<option value="InActive">InActive</option>
									</select>
								</div>
							</div>

							<div class="form-group row">
								<label for="salaryStructureValidityDed" class="col-sm-3 col-form-label">Expire Date<span style="color:red;">*</span></label>
								<div class="col-sm-9">
									<input type="text" class="form-control datePicker" readonly name="salaryStructureValidity" id="salaryStructureValidityDed" value="@DateTime.Now.AddYears(30)" />
								</div>
							</div>
						</form>

					</div>
				</div>
			</div>
			<div class="modal-footer">
				<a href="javascript:void(0)" style="color:deepskyblue" data-dismiss="modal">Close</a>&nbsp;
				<a href="javascript:void(0)" id="postBtn" onclick="saveSalaryDeduction()" style="background-color:#024972;" class="btn-primary btn-sm pull-right; display: none;">Save</a>
			</div>
		</div>
	</div>
</div>


@section Scripts{
	<script>
		var bankCont = 0;
		$(document).ready(function () {
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetsalaryGrade', [], 'json', ajaxGetsalaryGrade);

            $(".datePicker").datepicker({ dateFormat: "dd-MM-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2050", defaultDate: '01/01/2050'}).datepicker();
			$("#effectiveDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2050" }).datepicker();
			$("#salaryGradeId").change(function () {
				$("#Gtype").val("");
				var gradetype = $("#salaryGradeId option:selected").attr("Gradetype");
				if (typeof (gradetype) != "undefined") {
					$("#Gtype").val(gradetype);
					Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabBysalaryGradeId/?salaryGradeId=' + $("#salaryGradeId").val(), [], 'json', GetSalarySlab);

				}

			});

			
			$("#salaryGradeIdT").change(function () {
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabBysalaryGradeId/?salaryGradeId=' + $("#salaryGradeId").val(), [], 'json', GetSalarySlab);
			});

			$("#salarySlab").change(function () {
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabById/?Id=' + $("#salarySlab").val(), [], 'json', GetSalarySlabAmount);
			});
			$("#salarySlabT").change(function () {
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabById/?Id=' + $("#salarySlab").val(), [], 'json', GetSalarySlabAmount);
			});

			$('#amntPerLakh').on('keyup', function () {
				if ($(this).val() == '') {
					var hLoan = parseFloat(0);
				}
				else {
					var hLoan = (parseFloat($('#dueHBALoan').val()) / parseFloat(100000)) * parseFloat($(this).val());
				}

				if ($('#employeeName').val() != '') {
					if ($('#deductionType').val() == 'lakh') {
						$('.ded_132').text(hLoan.toFixed(2));
						$('.ded_162').text(0);
					}
					else {
						$('.ded_132').text(parseFloat($('.add_134').text()).toFixed(2));
						$('.ded_162').text(0);
					}
				}
			})

			$('#deductionType').on('change', function () {
				if ($('#amntPerLakh').val() == '') {
					var hLoan = parseFloat(0);
				}
				else {
					var hLoan = (parseFloat($('#dueHBALoan').val()) / parseFloat(100000)) * parseFloat($('#amntPerLakh').val());
				}

				if ($('#employeeName').val() != '') {
					if ($(this).val() == 'lakh') {
						$('#amntPerLakh').show();

						$('.ded_132').text(hLoan.toFixed(2));
						$('.ded_162').text(0);
					}
					else {
						$('#amntPerLakh').hide();
						$('.ded_132').text(parseFloat($('.add_134').text()).toFixed(2));
						$('.ded_162').text(0);
					}
				}
			})

			$('#pfType').on('change', function () {
				if ($(this).val() == 'GPF') {
					$('#pfPercentage').val(25);
					$('#pfPercentage').prop('readonly', false);
				}
				if ($(this).val() == 'CPF') {
					$('#pfPercentage').val(10);
					$('#pfPercentage').prop('readonly', true);
				}
			})

			Common.Ajax('GET', '/global/api/GetAllActiveEmployee', [], 'json', ajaxGetEmployees);

			let employeeInfoId = parseInt(@ViewBag.employeeInfoId) ? parseInt(@ViewBag.employeeInfoId) : 0;

			if (employeeInfoId == null || employeeInfoId == 0 || employeeInfoId == '') {

			}
			else {
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureAdditionByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxVieWEmpSalaryStructureAddition);
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureDeductionByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxVieWEmpSalaryStructureDeduction);
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesGrossAmountByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxGetEmployeesGrossAmount);
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmpStructureByEmpId/?employeeInfoId=' + employeeInfoId, [], 'json', ajaxGetEmpStructureByEmpIdWithName);
			}

		});


		function opentaxdetails()
		{
			var emplyeeId = $("#employeeInfoId").val();
			if (emplyeeId == "" || emplyeeId == "0")
			{
				alert("Please enter employee name.");
				return;
			}
			window.location.href = "/Payroll/PayrollReport/TaxCalculationReport?employeeInfoId=" + emplyeeId+"&&taxYearId="+@Model.salaryPeriod.taxYearId+"&&periodId="+@Model.salaryPeriod.Id;

		}
		function GetSalarySlab(response) {

			$('#salarySlabT').empty();
			$('#salarySlabT').append('<option value="">Select Slab</option');
			$.each(response, function (id, option) {
			  
				$('#salarySlabT').append('<option value="' + option.Id + '">' + option.slabName + '</option');
			});
		}

		function ajaxGetsalaryGrade(response) {
			$('#salaryGradeId').empty();
			$('#salaryGradeId').append('<option value="">Select Grade</option');

			$.each(response, function (id, option) {
				$('#salaryGradeId').append('<option Gradetype="' + option.type +'" value="' + option.Id + '">' + option.gradeName + '</option');
			});
		}
		function GetSalarySlabAmount(response) {
			$('#amount').empty();
			$('#amount').val(response.slabAmount);
		}


		function ajaxGetEmployees(response) {
			var GeEmployeesList = [];
			$.each(response, function (id, option) {
				var obj = new Object();
				obj.key = option.Id;
				obj.value = option.nameEnglish + "(" + option.employeeCode + ")";
				obj.designation = option?.designationName;
				obj.joiningDate = option.joiningDate;
				obj.serviceStatus = option.serviceStatus;
				obj.employeeCode = option.employeeCode;
				obj.sbu = option.sbu;
				obj.gradeName = option?.gradeName;
				obj.gradeId = option.currentGradeId;
				obj.currentBasic = option.currentBasic;
                obj.Posting = option.Posting;
				GeEmployeesList[GeEmployeesList.length] = obj;
			});
			$('#employeeName').autocomplete({
				source: GeEmployeesList,
				select: function (event, ui) {
					$("#employeeName").val(ui.item.value);
					$("#Designation").val(ui.item.designation);
					$("#sbu").val(ui.item.sbu);
					$("#dateOfJoining").val(formatDate(ui.item.joiningDate));
					$("#employeeInfoId").val(ui.item.key);
					$("#salaryGradeId").val(ui.item.gradeId);
					$("#serviceStatus").val(ui.item.serviceStatus);
					$("#salaryGradeName").val(ui.item.gradeName);
					$("#salarySlabName").val(ui.item.salarySlabId);
					$("#amount").val(ui.item.currentBasic);
                    $("#Posting").val(ui.item.Posting);
					getPfType(ui.item.key)
					GetSalaryStructure();
					getSummationFromSalaryStructureTable();

				}
			});
		  
		}

		function getPfType(empId) {
			$.ajax({
				url: "/Payroll/SalaryStructure/GetPfTypeByEmpId?empId="+empId,
				type: 'GET',
				dataType: 'json',
				success: function (res) {
					if (res != null) {
						if (res.pfType == 'CPF') {
							$('#pfType').val(res.pfType);
							if (res.pfPercentage != null) {
								$('#pfPercentage').val(res.pfPercentage);
							}
							else {
								$('#pfPercentage').val(10);
								$('#pfPercentage').prop('readonly', true);
							}
						}
						else if (res.pfType == 'GPF') {
							$('#pfType').val(res.pfType);
							$('#pfType').val(res.pfType);
							if (res.pfPercentage != null) {
								$('#pfPercentage').val(res.pfPercentage);
							}
							else {
								$('#pfPercentage').val(10);
								$('#pfPercentage').prop('readonly', false);
							}
						}
						else {
							$('#pfType').val('');
							$('#pfPercentage').val(0);
							$('#pfPercentage').prop('readonly', false);
						}

					}
				}
			});
		}

		function ajaxGetSalaryslabByEmpId(response) {
			if (response != null) {
				$('#salarySlab').val(response.Id);
				$('#salarySlabName').val(response.slabName);
			}
		
		}

		function formatDate(date) {
			var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
			date = new Date(date);
			var year = date.getFullYear(),
				month = monthNames[date.getMonth()], // months are zero indexed
				day = date.getDate(),
				hour = date.getHours(),
				minute = date.getMinutes(),
				second = date.getSeconds(),
				hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
				minuteFormatted = minute < 10 ? "0" + minute : minute,
				morning = hour < 12 ? "am" : "HR";

			return day + "-" + month + "-" + year;
		}

		function GetSalaryStructure() {

			var id = $("#employeeInfoId").val();

			Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureAdditionByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxVieWEmpSalaryStructureAddition, false);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesSalaryStructureDeductionByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxVieWEmpSalaryStructureDeduction, false);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmployeesGrossAmountByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxGetEmployeesGrossAmount, false);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetEmpStructureByEmpId/?employeeInfoId=' + $("#employeeInfoId").val(), [], 'json', ajaxGetEmpStructureByEmpId, false);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabByAmount/?amount=' + $("#amount").val(), [], 'json', ajaxGetSalaryslabByEmpId, false);

		}

		function GetLoansByEmpCodeAndType(code, type) {
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetLoansByEmpCodeAndType?code=' + code + '&type=hba', [], 'json', ajaxGetLoansByEmpCodeAndType, false);
		}

		function ajaxGetLoansByEmpCodeAndType(response) {
			$('#dueHBALoan').val(response.staffLoanHBA ?.principalDue);


			if (response.staffLoanHBA ?.DeductionType == 'lakh') {
				$('#amntPerLakh').show();
				$('#deductionType').val(response.staffLoanHBA ?.DeductionType);
				$('#amntPerLakh').val(response.staffLoanHBA ?.DePercentagePerLakh);
			}
			else {
				$('#amntPerLakh').hide();
				$('#deductionType').val('house');
				$('#amntPerLakh').val(response.staffLoanHBA ?.DeductionAmount);
			}
		}

		function ajaxGetEmployeesGrossAmount(response) {
			if (response != null) {
				$('#grossamount').val(parseFloat(response.GrossAmount).toFixed(2));
				$('#amountT').val(response.summation);

			}
		}

		function ajaxGetEmpStructureByEmpId(response) {
			
			$('#salaryGradeIdT').val('');
			$('#typeT').val('');

			if (response != null) {
				$('#effectiveDate').val(formatDate(response.effectiveDate));
				$('#amountN').val(response.salarySlab?.slabAmount);
				$('#salaryGradeIdT').val(response.salarySlab?.salaryGrade?.gradeName);
				$('#typeT').val(response.salarySlab?.salaryGrade?.type);
				Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabBysalaryGradeId/?salaryGradeId=' + response.salarySlab.salaryGradeId, [], 'json', GetSalarySlab, false);
				$('#salarySlabT').val(response.salarySlab?.slabName);
				if (response.effectiveDate == null) {
					$('#effectiveDateT').val('');
				}
				else {
					$('#effectiveDateT').val(getPurchaseDate(response.effectiveDate));
				}
			}

		}

		function ajaxGetEmpStructureByEmpIdWithName(response) {
			$("#employeeName").val(response.employeeInfo?.nameEnglish + "(" + response.employeeInfo?.employeeCode + ")");
			$("#Designation").val(response.employeeInfo?.designation);
			$("#employeeInfoId").val(response?.employeeInfoId);
			$("#department").val(response.employeeInfo?.department?.deptName);

			$('#salaryGradeId').val(response.salarySlab?.salaryGradeId);
			$('#salaryGradeIdT').val(response.salarySlab?.salaryGradeId);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabBysalaryGradeId/?salaryGradeId=' + response.salarySlab.salaryGradeId, [], 'json', GetSalarySlab, false);
			$('#salarySlab').val(response.salarySlabId);
			$('#salarySlabT').val(response.salarySlabId);
			Common.Ajax('GET', '/Payroll/SalaryStructure/GetSalarySlabById/?Id=' + response.salarySlabId, [], 'json', GetSalarySlabAmount);
			if (response.effectiveDate == null) {
				$('#effectiveDate').val('');
				$('#effectiveDateT').val('');
			}
			else {
				$('#effectiveDate').val(getPurchaseDate(response.effectiveDate));
				$('#effectiveDateT').val(getPurchaseDate(response.effectiveDate));
			}

		}

		function ajaxVieWEmpSalaryStructureAddition(response) {
			$("#salaryStructureAdditionTable tbody>tr").remove();

			var dtTableA = $("#salaryStructureAdditionTable");
			var tableBodyA = dtTableA.find('tbody');
			var tablefootA = dtTableA.find('tfoot');
			tableBodyA.empty();
			tablefootA.empty();
			var i = 1;
			var Total = "Total";
			var TotalAdd = 0;
			$.each(response, function (key, value) {
				if (i == 1) {
					bankCont = value.amount.toFixed(2);
				}
				var trHtml = '<tr class="type_' + value.salaryHead.isInvestments + '" id="cust_' + i + '"><td class="rowId">' + i + ' </td><td class="salaryheadName"><input type="hidden" name="headName" class="headname" value="' + value.salaryHead.Id + '"/>' + value.salaryHead.salaryHeadName + '</td><td style="text-align:right;" class="amnt add_' + value.salaryHead.Id + '">   <input type="hidden" name="amount" class="amnt add_" value="' +  value.amount+ '"/>' + value.amount.toFixed(2) + '</td><td style="display: none"><input type="hidden" name="ex" class="ex" value="' + value.expiryDate + '" /></td><td class="sts">' + value.isActive + '</td><td class="attribute"><a onclick="EditTblStructure(' + i + ", '" + value.salaryHead.salaryHeadName + "', '" + value.isActive + "', '" + value.expiryDate + "'," + value.amount + ',' + value.Id + ')" href="javascript:void(0)" title="Edit" class="btn btn-success btn-xs" data-toggle="modal" data-target="#viewEmpSalaryStructureModal" > <i class="fa fa-edit"></i></a ></td></tr>';
				if (value.salaryHead.Id != 144) {
					tableBodyA.append(trHtml);
				}
				i++;
				if (value.salaryHead.Id != 129 && value.salaryHead.Id != 143 && value.salaryHead.Id != 144 && value.salaryHead.Id != 147) {
					TotalAdd = TotalAdd + value.amount;
				}
			});
			var totalAddition = parseInt(TotalAdd) - parseInt(bankCont);
			var trHtmlfoot = '<tr><td colspan="2"  style="text-align:right;">' + Total + '</td><td style="text-align:right;" id="totalAddition">' + TotalAdd.toFixed(2) + '</td> <td><td/></tr>';
			tablefootA.append(trHtmlfoot);

		}
		function ajaxVieWEmpSalaryStructureDeduction(response) {
			$("#salaryStructureDeductionTable tbody>tr").remove();

			var dtTableA = $("#salaryStructureDeductionTable");
			var tableBodyA = dtTableA.find('tbody');
			var tablefootA = dtTableA.find('tfoot');
			tableBodyA.empty();
			tablefootA.empty();
			var i = 1;
			var Total = "Total";
			var TotalDed = 0;
			$.each(response, function (key, value) {
				if (value.salaryHeadId == 132) {
					$('#deductionType').val(value.pfType)
					$('#amntPerLakh').hide()
				}

				var trHtml = '<tr class="type_' + value.salaryHead.isInvestments + '" id="Deduct_' + i + '"><td class="rowId">' + i + ' </td><td class="salaryheadName"><input type="hidden" name="headname" class="headname" value="' + value.salaryHead.Id + '"/>' + value.salaryHead.salaryHeadName + '</td><td style="text-align:right;" class="amntN ded_' + value.salaryHead.Id + '">' + value.amount.toFixed(2) + '</td><td class="stsN">' + value.isActive + '</td><td style="display: none"><input type="hidden" name="exN" class="exN" value="' + value.expiryDate + '" /></td><td class="attribute"><a onclick="EditDeductTblStructure(' + i + ", '" + value.salaryHead.salaryHeadName + "', '" + value.isActive + "'," + value.amount + ',' + value.Id + ')" href="javascript:void(0)" title="Edit" class="btn btn-success btn-xs" data-toggle="modal" data-target="#viewEmpSalaryStructureModalDeduction" > <i class="fa fa-edit"></i></a ></td></tr>';

				tableBodyA.append(trHtml);
				i++;
				if (value.salaryHead.Id != 130 && value.salaryHead.Id != 148 && value.salaryHead.Id != 130) {
					TotalDed = TotalDed + value.amount;
				}
			});
			var trHtmlfoot = '<tr><td colspan="2"  style="text-align:right;">' + Total + '</td><td style="text-align:right;" id="totalDeduction">' + TotalDed.toFixed(2) + '</td> <td><td/></tr>';
			tablefootA.append(trHtmlfoot);

		}


		function EditTblStructure(i, salaryHeadName, isActive, amount, Id, expire) {
			var _amount =  $('#cust_' + i).find('.amnt').text();
			var _status =  $('#cust_' + i).find('.sts').text();
			var _salaryheadName = $('#cust_' + i).find('.salaryheadName').text();
			var _salaryheadId = $('#cust_' + i).find('.headname').val();
			var _expire = $('#cust_' + i).find('.ex').val();

			$('#editsalarystructureId').val(Id);
			$('#headName').val(salaryHeadName);
			$('#salarystructureStatus').val(_status);
			$('#headamount').val(_amount);
			$('#salaryStructureValidity').val(_expire != 'null' ? _expire : '');
			$('#rownumber').val(i);
		}

		function EditDeductTblStructure(i, salaryHeadName, isActive, amount, Id, expire) {
			var _amount = $('#Deduct_' + i).find('.amntN').text();
			var _status = $('#Deduct_' + i).find('.stsN').text();
			var _exN = $('#Deduct_' + i).find('.exN').val();
			var _salaryheadName = $('#Deduct_' + i).find('.salaryheadName').text();
			var _salaryheadId = $('#Deduct_' + i).find('.headname').val();

			$('#editsalarystructureDedId').val(Id);
			$('#DeducHeadName').val(salaryHeadName);
			$('#salarystructureStatusDed').val(_status);
            $('#salaryStructureValidityDed').val(_exN != 'null' ? _exN : '2050-12-01T00:00:00');
			$('#headamountDed').val(_amount);
			$('#rownumberDeduction').val(i);
		}
				
		function getPurchaseDate(pdate) {
			var formattedDate = new Date(pdate);
			var d = formattedDate.getDate();
			var m = formattedDate.getMonth();
			var y = formattedDate.getFullYear();
			var monthNames = [
				"Jan", "Feb", "Mar",
				"Apr", "May", "Jun", "Jul",
				"Aug", "Sep", "Oct",
				"Nov", "Dec"
			];
			var fullDate = d + "-" + monthNames[m] + "-" + y;
			return fullDate;
		}



		$('#submit').click(function () {

			if ($('#employeeInfoId').val() == "") {
				swal("Please Select Employee Name");
				return false;
			}
			if ($('#salaryGradeId').val() == "") {
				swal("Please Select salary Grade");
				return false;
			}

			if ($('#effectiveDate').val() == "") {
				swal("Please Enter Effective Date");
				return false;
			}


			if ($('#pfType').val() == "") {
				swal("Please Enter PF Type");
				return false;
			}

			var data = $('#FormId').serializeArray();
			var salaryHeads = getSalaryHeads();

			if (salaryHeads.length < 1) {
				swal("Employees Salary Structure Not Found!");
				return false;
			}

			var model = new Object();
			model.employeeInfoId = $('#employeeInfoId').val();
			model.salaryGradeId = $('#salaryGradeId').val();
			model.salarySlab = $('#salarySlab').val();
			model.amount = $('#amount').val();
			model.effectiveDate = $('#effectiveDate').val();
			model.pfType = $('#pfType').val();
			model.pfPercentage = $('#pfPercentage').val();
			model.deductionType = $('#deductionType').val();
			model.amntPerLakh = $('#amntPerLakh').val();
			model.salaryStrustureList = getSalaryHeads();
			
			$('#submit').prop('disabled', 'disabled');
			swal({
				title: 'Are you sure?', text: 'Do you want to submit this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
			}).then(function () {
				$.ajax({
					url: '@Url.Action("Index", "SalaryStructure")',
					type: 'POST',
					data: model
				}).done(function (res) {
					console.log(res)
					if (res == "ok") {
						swal('success', 'Saved Successfully!', 'success').then(function () {
							location.reload();
						});
					}

					}).fail(function () {
						swal('warning', 'Failed!', 'warning').then(function () {
							$('#submit').removeAttr('disabled');
						});
					}).then(function result(res) {
						console.log(res);
					})
				});
			})

			$('.swal2-cancel').click(function () {
				alert()
				$('#submit').removeAttr('disabled');
			})


		$('#BtnProcess').click(function () {
			if ($('#employeeInfoId').val() == "") {
				swal("Please Select Employee Name");
				return false;
			}
			if ($('#salaryGradeId').val() == "") {
				swal("Please Select salary Grade");
				return false;
			}
			
			if ($('#pfType').val() == "") {
				swal("Please Enter PF Type");
				return false;
			}
			if ($('#amount').val() == "") {
				swal("Please insert Amount");
				return false;
			}
			var data = $('#FormId').serializeArray();
			$.ajax({
					url: '@Url.Action("GetEmployeesSalaryStructureBeforeProces", "SalaryStructure")',
					type: 'GET',
					data: data
			}).done(function (res) {
					if (res) {
						
						ajaxVieWEmpSalaryStructureAddition(res.AdditonList);
					   ajaxVieWEmpSalaryStructureDeduction(res.DeductionList);

						$('#grossamount').val(parseFloat($('#totalAddition').text()).toFixed(2) - parseFloat($('#totalDeduction').text()).toFixed(2));
					}
					else {
						//swal('success', 'Updated Successfully!', 'success').then(function () {
						//    location.reload();
						//});;
					}
				}).fail(function () {
					//swal('warning', 'Failed!', 'warning');
				})
		})

		function ProcessSalaryHeads() {
			if ($('#employeeInfoId').val() == "") {
				swal("Please Select Employee Name");
				return false;
			}
			if ($('#salaryGradeId').val() == "") {
				swal("Please Select salary Grade");
				return false;
			}
			
			if ($('#pfType').val() == "") {
				swal("Please Enter PF Type");
				return false;
			}

			if ($('#amount').val() == "") {
				swal("Please insert Amount");
				return false;
			}
			var data = $('#FormId').serializeArray();
			$.ajax({
					url: '@Url.Action("GetEmployeesSalaryStructureBeforeProces", "SalaryStructure")',
					type: 'GET',
					data: data
				}).done(function (res) {
					if (res) {
						
						ajaxVieWEmpSalaryStructureAddition(res.AdditonList);

						$("#grossamount").val((parseFloat(res.GrossAmount) - parseInt(bankCont)).toFixed(2));
					}
					else {
						//swal('success', 'Updated Successfully!', 'success').then(function () {
						//    location.reload();
						//});;
					}
				}).fail(function () {
					//swal('warning', 'Failed!', 'warning');
				})
		}


		function saveSalary() {
            var amount = $('#headamount').val();
			$('#amount').val(amount);
			var headName=$('#headName').val();
			if ($('#deductionType').val() == 'house' && headName=='House Rent Allowance') {
				$('.ded_162').text(parseFloat(0));
			}

			var headName = $('#headName').val();
			var pfType = $('#pfType').val();
			var pfPercentage = $('#pfPercentage').val();
			var status = $('#salarystructureStatus').val();
			var row = $('#rownumber').val();
			var empid = $('#employeeInfoId').val();
			var salaryStructureValidity = $('#salaryStructureValidity').val();
			if (headName == 'Basic') {
				
				//Asad Added On 24.08.2023
				var incentiveBonus = Math.round(amount * 0.05) < 1000 ? 1000 : Math.round(amount * 0.05);
				$('.add_167').text(incentiveBonus);
				console.log('incentiveBonus: ' + incentiveBonus);
	
				$.ajax({
					url: '/Payroll/SalaryStructure/CalculateHouseRent?empId=' + empid + '&basic=' + amount,
					type: 'GET',
					dataType: 'json',
					async: false,
					success: function (res) {
						$('.add_134').text(Math.round(res));
						if ($('#deductionType').val() != 'lakh') {
						}
						else {
							if ($('#amntPerLakh').val() == '') {
								var hLoan = parseFloat(0);
							}
							else {
								var hLoan = (parseFloat($('#dueHBALoan').val()) / parseFloat(100000)) * parseFloat($('#amntPerLakh').val());
							}
							$('.ded_132').text( hLoan);
						}
						getSummationFromSalaryStructureTable();

					}
				});

				$.ajax({
					url: '/Payroll/SalaryStructure/CalculatePFSubscription?empId=' + empid + '&basic=' + amount + '&pfType=' + pfType + '&pfPercentage=' + pfPercentage,
					type: 'GET',
					dataType: 'json',
					async: false,
					success: function (res) { 
						$('.ded_149').text(Math.round(res));
						if (pfType == 'CPF') {
							$('.add_147').text( Math.round(res));
						}
						else {
							$('.add_147').text(0);
						}
					}
				});

				if (pfType == 'GPF') {
                    $('.add_143').text( Math.round( parseFloat($('#headamount').val()) * parseFloat(41) / 100) ) 
					$('.add_129').text(0);
					$('.ded_148').text(0);
                    $('.ded_130').text(0);
				}
				if (pfType == 'CPF') {
					$('.add_143').text(0);
					$('.add_129').text( Math.round( parseFloat($('#headamount').val()) * parseFloat($('#pfPercentage').val()) / 100) )
					$('.ded_148').text( Math.round( parseFloat($('#headamount').val()) * parseFloat($('#pfPercentage').val()) / 100) )
                    $('.ded_130').text( Math.round( parseFloat($('#headamount').val()) * parseFloat($('#pfPercentage').val()) / 100) )
				}

			}
			

			if (amount == "") amount = "0.00";
			$('#cust_' + row).find('.amnt').text(amount);
			$('#cust_' + row).find('.sts').text(status);
			$('#cust_' + row).find('.ex').val(salaryStructureValidity);
			$('#viewEmpSalaryStructureModal').modal('toggle');
			getSummationFromSalaryStructureTable();
		};
		function saveSalaryDeduction() {
			var amount = $('#headamountDed').val();
			var deducHeadName = $('#DeducHeadName').val();
			var status = $('#salarystructureStatusDed').val();
			var exN = $('#salaryStructureValidityDed').val();
			var salaryStructureValidity = $('#salaryStructureValidity').val();
			var row = $('#rownumberDeduction').val();

			$('#Deduct_' + row).find('.amntN').text(amount);
			$('#Deduct_' + row).find('.stsN').text(status);
			$('#Deduct_' + row).find('.exN').val(exN);

			$('#viewEmpSalaryStructureModalDeduction').modal('toggle');
			getSummationFromSalaryStructureTable();
			
		};




		function getSummationFromSalaryStructureTable() {
			var addtotalAmount = parseFloat($('.add_119').text() == '' ? 0 : $('.add_119').text()) +
				parseFloat($('.add_134').text() == '' ? 0 : $('.add_134').text()) +
				parseFloat($('.add_152').text() == '' ? 0 : $('.add_152').text()) +
				parseFloat($('.add_136').text() == '' ? 0 : $('.add_136').text()) +
				parseFloat($('.add_124').text() == '' ? 0 : $('.add_124').text()) +
				parseFloat($('.add_155').text() == '' ? 0 : $('.add_155').text()) +
				parseFloat($('.add_142').text() == '' ? 0 : $('.add_142').text()) +
				parseFloat($('.add_133').text() == '' ? 0 : $('.add_133').text()) +
				parseFloat($('.add_137').text() == '' ? 0 : $('.add_137').text()) +
				parseFloat($('.add_158').text() == '' ? 0 : $('.add_158').text()) +
				parseFloat($('.add_126').text() == '' ? 0 : $('.add_126').text()) +
				parseFloat($('.add_128').text() == '' ? 0 : $('.add_128').text()) +
				parseFloat($('.add_159').text() == '' ? 0 : $('.add_159').text()) +
				parseFloat($('.add_122').text() == '' ? 0 : $('.add_122').text()) +
				parseFloat($('.add_160').text() == '' ? 0 : $('.add_160').text()) +
				parseFloat($('.add_147').text() == '' ? 0 : $('.add_147').text()) +
				parseFloat($('.add_129').text() == '' ? 0 : $('.add_129').text()) +
				parseFloat($('.add_167').text() == '' ? 0 : $('.add_167').text()) +
				parseFloat($('.add_163').text() == '' ? 0 : $('.add_163').text()) +
				parseFloat($('.add_143').text() == '' ? 0 : $('.add_143').text());

			var deductiontotalAmount = parseFloat($('.ded_118').text() == '' ? 0 : $('.ded_118').text()) +
				parseFloat($('.ded_120').text() == '' ? 0 : $('.ded_120').text()) +
				parseFloat($('.ded_121').text() == '' ? 0 : $('.ded_121').text()) +
				parseFloat($('.ded_123').text() == '' ? 0 : $('.ded_123').text()) +
				parseFloat($('.ded_127').text() == '' ? 0 : $('.ded_127').text()) +
				parseFloat($('.ded_131').text() == '' ? 0 : $('.ded_131').text()) +
				parseFloat($('.ded_132').text() == '' ? 0 : $('.ded_132').text()) +
				parseFloat($('.ded_162').text() == '' ? 0 : $('.ded_162').text()) +
				parseFloat($('.ded_135').text() == '' ? 0 : $('.ded_135').text()) +
				parseFloat($('.ded_138').text() == '' ? 0 : $('.ded_138').text()) +
				parseFloat($('.ded_139').text() == '' ? 0 : $('.ded_139').text()) +
				parseFloat($('.ded_140').text() == '' ? 0 : $('.ded_140').text()) +
				parseFloat($('.ded_141').text() == '' ? 0 : $('.ded_141').text()) +
				parseFloat($('.ded_145').text() == '' ? 0 : $('.ded_145').text()) +
				parseFloat($('.ded_146').text() == '' ? 0 : $('.ded_146').text()) +
				parseFloat($('.ded_149').text() == '' ? 0 : $('.ded_149').text()) +
				parseFloat($('.ded_164').text() == '' ? 0 : $('.ded_164').text()) +
				parseFloat($('.ded_150').text() == '' ? 0 : $('.ded_150').text()) +
				parseFloat($('.ded_151').text() == '' ? 0 : $('.ded_151').text()) +
				parseFloat($('.ded_153').text() == '' ? 0 : $('.ded_153').text()) +
				parseFloat($('.ded_154').text() == '' ? 0 : $('.ded_154').text()) +
				parseFloat($('.add_143').text() == '' ? 0 : $('.add_143').text()) +
				parseFloat($('.add_147').text() == '' ? 0 : $('.add_147').text()) +
				parseFloat($('.ded_130').text() == '' ? 0 : $('.ded_130').text()) +
				parseFloat($('.ded_161').text() == '' ? 0 : $('.ded_161').text());

			var netAmount = addtotalAmount - deductiontotalAmount;		
			$("#totalAddition").text(addtotalAmount);
			$("#totalDeduction").text(parseFloat(deductiontotalAmount).toFixed(2));
			$('#grossamount').val(parseFloat(netAmount).toFixed(2));
		}



		function getSalaryHeads() {
			var salaryHead = [];
			$('#salaryStructureAdditionTable  tbody > tr').each(function (res) {

				var rowId = $(this).find(".rowId").text();
				var headName = $(this).find(".headname").text();
				var headId = $(this).find(".headname").val();
				var amnt = parseFloat($(this).find(".amnt").text());
				var ex = $(this).find(".ex").val() != 'null' ? $(this).find(".ex").val() : null;
				var sts = $(this).find(".sts").text();

				salaryHead.push({
					headId: headId,
					headName: headName,
					amount: amnt,
					status: sts,
					ex: ex
				})
			});

			$('#salaryStructureDeductionTable  tbody > tr').each(function (res) {
				var data = $(this).html();
				var rowId = $(this).find(".rowId").text();
				var headName = $(this).find(".headname").text();
				var headId = $(this).find(".headname").val();
				var amnt = parseFloat($(this).find(".amntN").text());
				var ex = $(this).find(".exN").val() != 'null' ? $(this).find(".exN").val() : null;
				var sts = $(this).find(".stsN").text();
				salaryHead.push({
					headId: headId,
					headName: headName,
					amount: amnt,
					status: sts,
					ex: ex
				})
			});
			return salaryHead;
		}

	</script>
}