@model StaffLoanVm
@{
    ViewData["Title"] = "Loan Recovery";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style{
    <style>
        ul.ui-autocomplete {
            z-index: 99999999;
        }

        #word, #warn {
            font-weight: bold;
            text-transform: capitalize;
            font-size: 12px;
        }
    </style>
}

<div class="card" style="width: 100%;">
    <div class="card-header row outBox" style="background-color: #EAF6FA;padding: 0; color: black;">
        <div class="col-md-4" style="display: flex; justify-content: flex-start; align-items: center; ">

            <h5 class="card-title" style="color: black; margin: 8px;">Voucher Entry</h5>

        </div>
        <div class="col-md-8">

            <div style="float: right; margin: 16px;">
                <a class='btn btn-info mr-4' style="margin-right:6px;" data-toggle='tooltip' title='Go Back' href='/Home/GridMenuPage?moduleId=1017&perentId=6229'><i class="fas fa-angle-double-left"> <span style="">Back</span></i></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="container">
            <form id="loanForm" asp-area="HR" asp-controller="StaffLoan" asp-action="LoanRecovery" method="post" data-parsley-validate="parsley">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="row">
                    <input type="hidden" id="staffLoanLogId" name="staffLoanLogId" value="0">
                    <input type="hidden" id="employeeInfoId" name="employeeInfoId">
                    <input type="hidden" id="empCode" name="empCode">
					
					@*<input type="hidden" id="staffLoanId" name="staffLoanId">
					<input type="hidden" id="trxNo" name="trxNo">
					<input type="hidden" id="trxType" name="trxType">*@
					

                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label for="employeeInfoId" class="col-sm-2 col-form-label">Employee's Name <span style="color:red;">*</span></label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" id="employeeName" name="employeeName" data-parsley-required="true" data-parsley-trigger="keyup" autocomplete="off">
                            </div>
                            <label for="loanType" class="col-sm-2 col-form-label">Loan Type <span style="color:red;">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control eloanType" id="loanType" name="staffLoanId">
                                    <option value="">Select Loan Type</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label for="loanNo" class="col-sm-2 col-form-label">Loan Account</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" id="loanAc" name="loanAc" readonly autocomplete="off">
                            </div>
                            <label for="amount" class="col-sm-2 col-form-label">Amount <span style="color:red;">*</span></label>
                            <div class="col-sm-4">
                                <input type="text" required class="form-control" id="amount" name="amount" autocomplete="off">
                                <input type="hidden" id="recoverPrincipal">
                                <input type="hidden" id="recoverInterest">
                                <input type="hidden" id="recoverCharge">
								<input type="hidden" id="PreviousAmount" name="PreviousAmount">
                                <small id="word"></small>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">
                            <label for="loanDate" class="col-sm-2 col-form-label">Transaction Date <span style="color:red;">*</span></label>
                            <div class="col-sm-4">
                                <input type="text" required class="form-control datePicker" id="loanDate" name="loanDate" readonly autocomplete="off">
                            </div>
                            
                            <label for="firstInstallDate" class="col-sm-2 col-form-label">Last Transaction Date</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control datePicker" id="firstInstallDate" name="firstInstallDate" readonly autocomplete="off">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="form-group row">

                            <label for="trxNo" class="col-sm-2 col-form-label">Transaction No.</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" value="" id="trxNo" name="trxNo" autocomplete="off">
                            </div>

                            <label for="trxType" class="col-sm-2 col-form-label">Transaction Type <span style="color:red;">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control" id="trxType" name="trxType">
                                    <option value="" selected>Choose Transaction Type</option>
                                    <option value="Disbursement">Disbursement(Dr)</option>
                                    <option value="Interest">Interest(Dr)</option>
                                    <option value="Litigation">Litigation Charge(Dr)</option>
                                    <option value="RecoveryBoth">Recovery</option>
                                    <option value="Waiver">Waiver(Cr)</option>                                    
                                    <option value="PRefund">Principal Refund(Dr)</option>
                                    <option value="IRefund">Interest Refund(Dr)</option>
                                    <option value="IntReverse">Reverse(Dr)</option>
                                    <option value="IntReverseCr">Reverse(Cr)</option>
                                    <option value="LegalADoc">Legal And Documentation Charge(Dr)</option>
                                    <option value="PriorerAdj">Priorer Adjustment</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row">

                            <label for="remarks" class="col-sm-2 col-form-label">Narration <span style="color:red;">*</span></label>
                            <div class="col-sm-10">
                                <input type="text" maxlength="150" class="form-control" id="remarks" name="remarks" autocomplete="off">
                                <span id="warn">(0/150)</span>
                            </div>
                        </div>
                    </div>
                </div>
                <hr>

                <div class="row">
                    <div class="col-sm-12" style="padding: 23px; background: lightcyan;">
                        <div class="form-group row">
                            <label for="Disbursed" class="col-sm-1 col-form-label">Disbursed:</label>
                            <div class="col-sm-2">
                                <input type="text" class="form-control" id="Disbursed" readonly autocomplete="off">
                            </div>
                            <label for="Principal" class="col-sm-1 col-form-label">Principal:</label>
                            <div class="col-sm-2">
                                <input type="text" class="form-control" id="Principal" name="principal" readonly autocomplete="off">
                            </div>
                            <label for="Interest" class="col-sm-1 col-form-label">Interest:</label>
                            <div class="col-sm-2">
                                <input type="text" class="form-control" id="Interest" name="interest" readonly autocomplete="off">
                            </div>
                            <label for="InterestCharge" class="col-sm-1 col-form-label">Charge:</label>
                            <div class="col-sm-2">
                                <input type="text" class="form-control" id="InterestCharge" name="InterestCharge" readonly autocomplete="off">
                            </div>
                        </div>
                    </div>
                </div>

				<button type="button" id="update" value="Submit" class="btn btn-success" style="float:right; margin-top:5px;display:none;"><i class="fas fa-save"></i> Update</button>
                <button type="submit" id="submitbtn" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;display:none;"><i class="fas fa-save"></i></button>
                <button type="button" id="submit" value="Submit" class="btn btn-success" style="float:right; margin-top:5px;"><i class="fas fa-save"></i> Save</button>
            </form>
        </div>
    </div>


</div>
<br />

<div class="row clearfix d-none">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">List of Staff Loan</h6>
            </div>

            <div class="col-sm-12 mt-4">
                <div class="form-group row ml-3">

                    <label for="fromDate" class="col-sm-2 col-form-label">From Date</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="fromDate" readonly placeholder="Select date">
                    </div>

                    <label for="endDate" class="col-sm-2 col-form-label">To Date</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="toDate" readonly placeholder="Select date">
                    </div>
                    <div class="col-2">
                        <a href="javascript:void(0)" class="btn btn-success btn-md" onclick="SearchVoucherEntry()">Search</a>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <table class="table table-striped table-bordered" id="loanTable">
                    <thead>
                        <tr>
                            <th width="5%">SL#</th>
                            <th>Employee Id</th>
                            <th>Employee Name</th>
                            <th>Loan Type</th>
                            <th>Disbursed</th>
                            <th>Principal</th>
                            <th>Interest</th>
                            <th>Charge</th>
                            <th>Total</th>
                            <th>Loan Date</th>
                            <th>Action</th>
                    </thead>
                    <tbody>
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<br />

<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">List of Voucher Entry</h6>
            </div>
            <div class="card-body">
                <table class="table table-striped table-bordered" id="voucherTable">
                    <thead>
                        <tr>
                            <th width="3%">SL#</th>
                            <th>Emp. Id</th>
                            <th>Employee Name</th>
                            <th>Loan Type</th>
							<th>Effective Date</th>
                            @*<th>Disbursed</th>
                            <th>Principal</th>
                            <th>Interest</th>
							<th>Charge</th>*@
							<th>Debit</th>
                            <th>Credit</th>
                            <th>Trx No</th>
                            <th>Trx Type</th>
                            <th>Action</th>
                    </thead>
                    <tbody>
                        @{
                                int i = 0;
                            }
                            @foreach (var item in Model.staffLoanLogs.Where(x=>x.type != null).OrderByDescending(x=>x.effectiveDate))
                            {
                                i++;
                                <tr>
                                    <td>@i</td>
                                    <td>@item.staffLoan?.empCode</td>
                                    <td>@item.staffLoan?.empName</td>
                                    
									<td>@item.staffLoan?.loanType</td>

								@*<td>@item.effectiveDate == null ? '' : formatDate(item.effectiveDate)</td>*@
									<td>@string.Format("{0:dd/mm/yyyy}", item?.effectiveDate) </td>
                                    @*<td style="text-align: right;">@item.staffLoan?.totalDisbursement</td>
                                    <td style="text-align: right;">@item.staffLoan?.principalAmount</td>
                                    <td style="text-align: right;">@item.staffLoan?.interestAmount</td>
									<td style="text-align: right;">@item.staffLoan?.chargeAmount</td>*@
									<td style="text-align: right;">@item.debit</td>
                                    <td style="text-align: right;">@item.credit</td>
                                    <td style="text-align: right;">@item.trxNo</td>
                                    <td style="text-align: right;">@item.type</td>
                                    <td>
                                        <a href="#" class="btn btn-success" onclick="Edit(@item.Id,@item.staffLoanId, @item.staffLoan?.employeeInfoId, '@item.staffLoan?.empCode', '@item.staffLoan?.empName', '@item.staffLoan?.loanType', '@item.staffLoan?.totalDisbursement', '@item.staffLoan?.principalAmount', '@item.staffLoan?.interestAmount', '@item.staffLoan?.chargeAmount', '@item.staffLoan?.totalAmount', '@item.staffLoan?.LoanNo','@item.staffLoan?.NewLoanNo', '@item?.effectiveDate','@item.trxNo','@item.remarks','@item.type','@item.credit','@item.principal','@item.interest')"><i class="fas fa-pen"></i></a>
                                    </td>
                                </tr>
                            }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="popupModal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<div class="col-md-4" style="display: flex; justify-content: flex-start; align-items: center;">
					<h5 class="card-title" style="color: black; margin: 8px; text-transform: uppercase;">Edit Voucher</h5>
				</div>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<br />
			</div>
			<div class="card-body">

				<div class="container">

					<form asp-area="HR" asp-controller="HR" asp-action="Update" method="post" data-parsley-validate="parsley">
						<div asp-validation-summary="All" class="text-danger"></div>

						<div class="form-group row">
							
							<label for="code" class="col-sm-3 col-form-label">Emp. Code</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="code" value="code" readonly>
							</div>

							<label for="name" class="col-sm-3 col-form-label">Emp. Name</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="name" value="name" readonly>
							</div>

						</div>
						<div class="form-group row">
							
							<label for="ltype" class="col-sm-3 col-form-label">Loan Type</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="ltype" value="ltype" readonly>
							</div>
							<label for="txType" class="col-sm-3 col-form-label">Trx Type</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="txType" value="txType" readonly>
							</div>
							
						</div>
						<div class="form-group row">

							<label for="lNo" class="col-sm-3 col-form-label">Loan No</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="lNo" value="lNo" readonly>
							</div>
							<label for="effDate" class="col-sm-3 col-form-label">Effect Date</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="effDate" value="effDate" readonly>
							</div>							
							
						</div>
						<div class="form-group row">
							<label for="disAmount" class="col-sm-3 col-form-label">Dis. Amount</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="disAmount" value="disAmount" readonly>
							</div>
							<label for="txNo" class="col-sm-3 col-form-label">Trx No</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="txNo" value="txNo" readonly>
							</div>
						</div>

						<hr />

						<div class="form-group row">
							<label for="principalRecovery" class="col-sm-3 col-form-label">Principal Recovery</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="principalRecovery" value="principalRecovery" readonly>
							</div>
							<label for="interestRecovery" class="col-sm-3 col-form-label">Interest Recovery</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="interestRecovery" value="interestRecovery" readonly>
							</div>
						</div>
						<div class="form-group row">
							<label for="interestChargeRecovery" class="col-sm-3 col-form-label">Interest Charge Recovery</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="interestChargeRecovery" value="interestChargeRecovery" readonly>
							</div>
							<label for="totalRecovery" class="col-sm-3 col-form-label">Total Recovery</label>
							<div class="col-sm-3">
								<input type="text" class="form-control" id="totalRecovery" value="totalRecovery" readonly>
							</div>
						</div>


						
					<hr />

					@*<table class="table table-striped table-bordered" id="voucherTableByTrx">*@
					<table class="table table-bordered table-hover" id="voucherTableByTrx" style="display: none;">
                    <thead>
                        <tr>
                            <th style="text-align: right;">Principal</th>
                            <th style="text-align: right;">Interest</th>
							<th style="text-align: right;">Charge</th>
							<th style="text-align: right;">Debit</th>
                            <th style="text-align: right;">Credit</th>
                           @* <th>Action</th>*@
                    </thead>
                    <tbody>
                        
                    </tbody>
					<tfoot>
                        
                    </tfoot>
                </table>
									
						@*<hr>*@
						@*<button type="submit" id="submitbtn" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;display:none;"><i class="fas fa-save"></i></button>*@
						<button type="button" id="btnSetLoan" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;"><i class="fas fa-link"></i></button>
					</form>
				</div>
			</div>
			<br />
		</div>
	</div>
</div>



@section Scripts{
    <script>
		function GetSchedule(id) {
			Common.Ajax('GET', '/global/api/GetAllScheduleByPFloanId/' + id, [], 'json', AjaxGetStatus);
		}

		function AjaxGetStatus(response) {
			$("#statusTable").DataTable().destroy();
			//console.log(response);
			var dtTable = $("#statusTable");
			var tableBody = dtTable.find('tbody');
			tableBody.empty();
			$.each(response, function (key, value) {

				var trHtml = '<tr>' +
					'<td>' + value.noOfInstallment + '</td>' +
					'<td>' + value.periodName + '</td>' +
					'<td>' + value.advanceAmount + '</td>' +
					'<td>' + value.restAmount + '</td>' +
					'<td>' + value.installmentAmount + '</td>' +
					'<td>' + value.status + '</td>' +
					'</tr>';

				tableBody.append(trHtml);
			})
			$("#statusTable").DataTable();
		}

		function Delete(Id) {
			Common.Ajax('GET', '/Payroll/StaffLoan/DeleteStaffLoan?id=' + Id, [], 'json', ajaxDeleteStaffLoan, false);
		}

		function ajaxDeleteStaffLoan(response) {
			if (response == '1') {
				swal('success', 'Deleted Successfully', 'success').then(function () {
					location.reload();
				});
			}
			else {
				swal('warning', 'Cannot Be Deleted!', 'warning');
			}
		}

		function ajaxGenerateLoanTransactionNo(res) {
			//console.log(res);
			$('#trxNo').val(res.TrxNum);
		}
		function ajaxRecovaryAmount(res) {
			//console.log(res)
			$('#recoverPrincipal').val(res.Principal);
			$('#recoverInterest').val(res.Interest);
            $('#recoverCharge').val(res.Charge);
            $("#amount").prop("readonly", false);
        }
        function ajaxRecovaryBothAmount(res) {
            //$('#Disbursed').val(res?.Principal + res?.Interest + res?.Charge);
			$('#Principal').val(res?.Principal);
			$('#recoverPrincipal').val(res?.Principal);
			$('#recoverInterest').val(res?.Interest);
			$('#Interest').val(res?.Interest);
            $('#recoverCharge').val(res?.Charge);
            $('#InterestCharge').val(res?.Charge); 
		}
        $(document).ready(function () {

            $('#fromDate').datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2015:@DateTime.Now.Year" }).datepicker();
            $('#toDate').datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2015:@DateTime.Now.Year" }).datepicker();
						
			$(".datePicker").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
            Common.Ajax('GET', '/global/api/GetAllEmployeeInfosForVoucherEntry', [], 'json', ajaxGetEmployees);
			

			$('#trxType').on('change', function () {
				var type = $(this).val();
				var loan = $('#loanType').val();
                var trxType = $('#trxType').val();
                $("#amount").prop("readonly", false);
				Common.Ajax('GET', '/Payroll/StaffLoan/GenerateLoanTransactionNo?type=' + type + '&loanId=' + loan, [], 'json', ajaxGenerateLoanTransactionNo, false);
				if (trxType == 'Recovery') {
					Common.Ajax('GET', '/Payroll/StaffLoan/CheckRecovaryAmount?staffLoanId=' + loan, [], 'json', ajaxRecovaryAmount, false);
                }
                if (trxType == 'RecoveryBoth') {
                    Common.Ajax('GET', '/Payroll/StaffLoan/CheckRecovaryAmount?staffLoanId=' + loan, [], 'json', ajaxRecovaryBothAmount, false);
                } else {
                    $("#amount").prop("readonly", false);
                }
			})

			$('.changable').on('change', function () {
				var principal = parseFloat($('#principal').val());
				var interest = parseFloat($('#interest').val());
				var charge = parseFloat($('#charge').val());
				if (principal == '' || principal == null) {
					principal = parseFloat(0);
				}
				if (interest == '' || interest == null) {
					interest = parseFloat(0);
				}
				if (charge == '' || charge == null) {
					charge = parseFloat(0);
				}
				var total = principal + interest + charge;

				$('#totalAmount').val(total);
			})

			$('#loanType').on('change', function () {
				var loanId = $('#loanType :selected').val();
				var trxType = $('#trxType :selected').val();
				
				Common.Ajax('GET', '/Payroll/StaffLoan/GetLoanNoByLoanId?loanId=' + loanId, [], 'json', ajaxGetLoanNoByLoanId, false);
				Common.Ajax('GET', '/Payroll/StaffLoan/CheckRecovaryAmount?staffLoanId=' + loanId, [], 'json', ajaxRecovaryBothAmount, false);
			})
						
			$('#amount').on('keyup', function () {
				var txt = inWords($(this).val());
				$('#word').text(txt != 'overflow' ? txt : '');
			})
			$('#remarks').on('keyup', function () {
				var chars = $(this).val().length;
				$('#warn').text('(' + chars + '/150) Maximum 150 character allowed!');
				if (parseInt(chars) >= 150) {
					$('#warn').addClass('text-danger');
				}
				else {
					$('#warn').removeClass('text-danger');
				}
			});


            $('#voucherTable').DataTable({
				dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
					"<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
				buttons: [
					{
						extend: 'excelHtml5',
						text: '<i class="fa fa-file-excel"></i> Excel',
						titleAttr: 'Excel',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						title: 'ERP',
						messageTop: 'Status List',
						class: 'btn btn-info'
					},
					{
						extend: 'csvHtml5',
						text: '<i class="fa fa-file-excel"></i> CSV',
						titleAttr: 'CSV',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						title: 'ERP',
						messageTop: 'Status List'
					},
					{
						extend: 'print',
						text: '<i class="fa fa-print"></i> Print',
						titleAttr: 'Print',
						title: 'ERP',
						messageTop: 'Status List',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						customize: function (doc) {
							$(doc.document.body).find('h1').css('font-size', '20pt');
							$(doc.document.body).find('h1').css('font-family', "'Times New Roman', Times, serif");
							$(doc.document.body).find('h1').css('text-align', 'center');
						}
					}
				]
			}
            );
            $('#loanTable').DataTable({
				dom: "<'row'<'col-sm-12 col-md-2'l><'col-sm-12 col-md-3'B><'col-sm-12 col-md-7'f>>" +
					"<'row'<'col-sm-12't>>" + "<'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6'pr>>",
				buttons: [
					{
						extend: 'excelHtml5',
						text: '<i class="fa fa-file-excel"></i> Excel',
						titleAttr: 'Excel',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						title: 'ERP',
						messageTop: 'Status List',
						class: 'btn btn-info'
					},
					{
						extend: 'csvHtml5',
						text: '<i class="fa fa-file-excel"></i> CSV',
						titleAttr: 'CSV',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						title: 'ERP',
						messageTop: 'Status List'
					},
					{
						extend: 'print',
						text: '<i class="fa fa-print"></i> Print',
						titleAttr: 'Print',
						title: 'ERP',
						messageTop: 'Status List',
						exportOptions: {
							columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
						},
						customize: function (doc) {
							$(doc.document.body).find('h1').css('font-size', '20pt');
							$(doc.document.body).find('h1').css('font-family', "'Times New Roman', Times, serif");
							$(doc.document.body).find('h1').css('text-align', 'center');
						}
					}
				]
			}
            ); 
            $("#submit").click(function () {
				//Asad added on 19.08.2023
				$(":disabled", $('#loanForm')).removeAttr("disabled");

				var empName = $('#employeeName').val();
				var loanType = $('#loanType').val();
				var amount = $('#amount').val();
				var loanDate = $('#loanDate').val();
				var remarks = $('#remarks').val();
				var trxType = $('#trxType').val();
				var principal = $('#recoverPrincipal').val();
				var Interest = $('#recoverInterest').val();
				var Charge = $('#recoverCharge').val();
				var total = parseFloat(Interest) + parseFloat(principal) + parseFloat(Charge);
				if (empName == '') {
					swal({
						title: 'Warning', text: 'Please Select Employee!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (loanType == 0 || loanType == '') {
					swal({
						title: 'Warning', text: 'Please Select Loan Type!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (amount == '') {
					swal({
						title: 'Warning', text: 'Please Input Minimum Amount!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (loanDate == '') {
					swal({
						title: 'Warning', text: 'Please Select Date!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (remarks == '') {
					swal({
						title: 'Warning', text: 'Please Input Narration!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (trxType == '') {
					swal({
						title: 'Warning', text: 'Please Select Transaction Type!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (trxType == 'Recovery' && parseFloat(total) < parseFloat(amount)) {
					swal({
						title: 'Warning', text: 'Selected amount exceeds loan amount!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
					}).then(function (res) {
						if (res == true) {
							var data = $('#loanForm').serialize();
							$.ajax({
								url: '/Payroll/StaffLoan/LoanRecovery',
								type: 'POST',
								data: data
							})
								.done(function (resp) {//message
									
									if (resp.Status == "NOK") {
										swal('Warning', resp.Message, 'warning').then(function () {
										});
									}
									else{
										swal('Success', 'Saved Successfully!', 'success').then(function () {
										location.reload();
										});
									}
								})
								.fail(function () {
									alert("Unable to Save. Please Try Again");
								});
						};
					})
				}
                else {
                    //$(this).text("Submitting...").prop("disabled", true);
					swal({
						title: 'Are you sure?', text: 'Do you want to submit this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
					}).then(function () {
						var data = $('#loanForm').serialize();

						$.ajax({
							url: '/Payroll/StaffLoan/LoanRecovery',
							type: 'POST',
							data: data
						})
							.done(function (resp) {
								if (resp.Status == "NOK") {
									swal('Warning', resp.Message, 'warning').then(function () {
									});
								}
								else {
									swal('Success', 'Saved Successfully!', 'success').then(function () {
										location.reload();
									});
								}
							})
							.fail(function () {
								alert("Unable to Save. Please Try Again");
							});
					});
				}
			});


			$('#btnSetLoan').on('click', function () {
				var staffLoanlogId = $('#staffLoanLogId').val();
				Common.Ajax('GET', '/Payroll/StaffLoan/GetStaffLoanLogById?id=' + staffLoanlogId, [], 'json', ajaxSetLoan, false);
			});



			//Asad added on 24.06.2023
			$("#update").click(function () {

				var empName = $('#employeeName').val();
				var loanType = $('#loanType').val();
				var amount = $('#amount').val();
				var loanDate = $('#loanDate').val();
				var remarks = $('#remarks').val();
				var trxType = $('#trxType').val();
				var principal = $('#recoverPrincipal').val();
				var Interest = $('#recoverInterest').val();
				var Charge = $('#recoverCharge').val();
				var total = parseFloat(Interest) + parseFloat(principal) + parseFloat(Charge);
				if (empName == '') {
					swal({
						title: 'Warning', text: 'Please Select Employee!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (loanType == 0 || loanType == '') {
					swal({
						title: 'Warning', text: 'Please Select Loan Type!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (amount == '') {
					swal({
						title: 'Warning', text: 'Please Input Minimum Amount!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (loanDate == '') {
					swal({
						title: 'Warning', text: 'Please Select Date!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (remarks == '') {
					swal({
						title: 'Warning', text: 'Please Input Narration!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (trxType == '') {
					swal({
						title: 'Warning', text: 'Please Select Transaction Type!', type: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Ok!'
					})
					return false;
				}
				else if (trxType == 'Recovery' && parseFloat(total) < parseFloat(amount)) {
					swal({
						title: 'Warning', text: 'Selected amount exceeds loan amount!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
					})
					return false;
				}
				else {
					//$(this).text("Submitting...").prop("disabled", true);
					swal({
						title: 'Are you sure?', text: 'Do you want to update this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
					}).then(function () {
						var data = $('#loanForm').serialize();

						$.ajax({
							url: '/Payroll/StaffLoan/UpdateLoanRecovery',
							type: 'POST',
							data: data
						})
							.done(function () {
								swal('Success', 'Updated Successfully!', 'success').then(function () {
									location.reload();
								});
							})
							.fail(function () {
								alert("Unable to Update. Please Try Again");
							});
					});
				}
			});

			$("#installmentAmount").keyup(function () {
				GetInstallment();
			});

			$("#noOfInstallment").keyup(function () {
				GetMonthly();
			});

		});

		var a = ['', 'one ', 'two ', 'three ', 'four ', 'five ', 'six ', 'seven ', 'eight ', 'nine ', 'ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];
		var b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];

		function inWords(num) {
			if ((num = num.toString()).length > 9) return 'overflow';
			n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
			if (!n) return; var str = '';
			str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';
			str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';
			str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';
			str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';
			str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) : '';
			return str;
		}

        function ajaxGetLoanNoByLoanId(res) {
            //alert('first')
            console.log(res)
			$('#loanAc').val(res?.loanNo);
			$('#disburseDate').val(formatDateMonthName(res?.disburseDate));
			$('#firstInstallDate').val(formatDateMonthName(res?.lastInstallmentDate));
			$('#Disbursed').val(res?.totalDisbursement);
			$('#Principal').val(res?.Principal);
            $('#Interest').val(res?.Interest);
            $('#InterestCharge').val(res?.Charge);
            
		}

		function GenerateLoanNo() {
			swal({
				title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
			}).then(function () {
				var empCode = $('#empCode').val();
				var loantype = $('#loanType').val();

				if (empCode != '' && loantype != '') {
					GetStaffLoanNo(empCode, loantype);
				}
				else {
					swal('Warning!', 'Choose both Employee and Loan Type', 'warning')
				}
			});
		}

		
		function formatDateMonthName(date) {
			var monthName = "";
			date = new Date(date);
			var year = date.getFullYear(),
				month = date.getMonth() + 1, // months are zero indexed
				day = date.getDate(),
				hour = date.getHours(),
				minute = date.getMinutes(),
				second = date.getSeconds(),
				hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
				minuteFormatted = minute < 10 ? "0" + minute : minute,
				morning = hour < 12 ? "am" : "HR";
			if (month == 1) {
				monthName = "Jan";
			}
			else if (month == 2) {
				monthName = "Feb";
			}
			else if (month == 3) {
				monthName = "Mar";
			}
			else if (month == 4) {
				monthName = "Apr";
			}
			else if (month == 5) {
				monthName = "May";
			}
			else if (month == 6) {
				monthName = "Jun";
			}
			else if (month == 7) {
				monthName = "Jul";
			}
			else if (month == 8) {
				monthName = "Aug";
			}
			else if (month == 9) {
				monthName = "Sep";
			}
			else if (month == 10) {
				monthName = "Oct";
			}
			else if (month == 11) {
				monthName = "Nov";
			}
			else {
				monthName = "Dec";
			}
			return day + "-" + monthName + "-" + year;
		}
		function formatDate(date) {
			date = new Date(date);
			var year = date.getFullYear(),
				month = date.getMonth() + 1, // months are zero indexed
				day = date.getDate(),
				hour = date.getHours(),
				minute = date.getMinutes(),
				second = date.getSeconds(),
				hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
				minuteFormatted = minute < 10 ? "0" + minute : minute,
				morning = hour < 12 ? "am" : "HR";

			return day + "/" + + month + "/" + year;
		}

		function GetStaffLoanNo(empCode, loanType) {
			Common.Ajax('GET', '/Payroll/StaffLoan/GetStaffLoanNo?empCode=' + empCode + '&loanType=' + loanType, [], 'json', ajaxGetLoanNo, false);
		}
		function ajaxGetLoanNo(response) {
			//console.log(response);
			$('#loanAc').val(response);
		}
		function ajaxGetsalaryGrade(response) {
			$('#salaryGradeId').empty();
			$('#salaryGradeId').append('<option value="">Select Grade</option');

			$.each(response, function (id, option) {
				$('#salaryGradeId').append('<option Gradetype="' + option.type + '" value="' + option.Id + '">' + option.gradeName + '</option');

			});
		}

		function ajaxGetEmployees(response) {
			var GeEmployeesList = [];

			$.each(response, function (id, option) {
				//console.log(option)
				var obj = new Object();
				obj.key = option.employeeId;
				obj.value = option.empName + "(" + option.employeeCode + ")";
				obj.lastDesignation = option.designation;
				obj.employeeCode = option.employeeCode;
				obj.gradeName = option.currentGradeId;
				obj.currentBasic = option.currentBasic;
				GeEmployeesList[GeEmployeesList.length] = obj;
			});
			$('#employeeName').autocomplete({ 
				source: GeEmployeesList,
				select: function (event, ui) {
					$("#employeeName").val(ui.item.value);
					$("#designationId").val(ui.item.lastDesignation);
					$("#employeeInfoId").val(ui.item.key);
					$("#empCode").val(ui.item.employeeCode);
					$("#salaryGradeId").val(ui.item.gradeName);

					//Start: Added for cancelling Edited parameter by Asad
					$('#staffLoanLogId').val('');
					$('#staffLoanId').val('');
					$('#employeeInfoId').val(0);										
					$('#loanType').val('0');
					$('.eloanType').val('');
					$('#loanNo').val('');
					$('#loanAc').val('');
					$('#Principal').val('');
					$('#Interest').val('');
					$('#Disbursed').val('');

					$('#charge').val('');
					$('#totalAmount').val('');
					$('#loanDate').val('');
					$('#trxNo').val('');
					$('#remarks').val('');
					$('#trxType').val('');
					$('#amount').val('');
					$('#recoverPrincipal').val('');
					$('#recoverInterest').val('');
					
					$("#trxNo").removeAttr('readonly');
					$("#loanType").removeAttr('disabled');
					$("#trxType").removeAttr('disabled');
					//End
					
					Common.Ajax('GET', '/Payroll/StaffLoan/GetAvailableLoans?empcode=' + ui.item.employeeCode, [], 'json', ajaxGetAvailableLoans, false);
					
				}
			});
			
		}

		function ajaxFunctionCode(res) {
			//console.log(res);
			$("#approver").val(res.UserId);
		}

		function ajaxGetAvailableLoans(res) {

			var option = "";
			option += `<option value="0">Choose Loan</option>`
			$.each(res, function (i, item) {
				option += `<option value="${item.Id}">${item.loanType} (${item.NewLoanNo})</option>`
			})

			$('#loanType').empty();
			$('#loanType').append(option);
		}

		function ClearForm() {
			$('#staffLoanId').val(0);
			$('#employeeInfoId').val(0);
			$('#empCode').val('');
			$('#employeeName').val('');
			$('#loanType').val('');
			$('#loanNo').val('');
			$('#loanAc').val('');
			$('#principal').val(0);
			$('#interest').val(0);
			$('#totalDisbursement').val(0);
			$('#charge').val(0);
			$('#totalAmount').val(0);
			$('#loanDate').val('');
		}

		//function Edit(Id, empId, empCode, empName, loanType, disburse, principal, interest, charge, total, loanNo, newLoanNo, loanDate) {
        function Edit(Id,staffLoanId, empId, empCode, empName, loanType, disburse, principal, interest, charge, total, loanNo, newLoanNo, loanDate, trxNo, remarks, trxType, amount,rPrincipal,rInterest) {


			var json = {
				"Id": Id,
				"staffLoanId": staffLoanId,
				"empId": empId,
				"empCode": empCode,
				"empName": empName,
				"loanType": loanType,
				//"staffLoanId": staffLoanId,
				"loanNo": loanNo,
				"newLoanNo": newLoanNo,
				"principal": principal,
				"interest": interest,
				"charge": charge,
				"disburse": disburse,
				//"charge": charge,
				"total": total,
				"loanDate": loanDate,
				"trxNo": trxNo,
				"remarks": remarks,
				"trxType": trxType,
				"amount": amount,
				"rPrincipal": rPrincipal,
				"rInterest": rInterest
			}
			//alert(JSON.stringify(json));


			//Old
			//if (newLoanNo == null || newLoanNo == '' || newLoanNo == 'null') {
			//	newLoanNo = '';
			//}
			//if (disburse == null || disburse == '' || disburse == 'null') {
			//	disburse = 0;
   //         }
   //         Common.Ajax('GET', '/Payroll/StaffLoan/GetAvailableLoans?empcode=' + empCode, [], 'json', ajaxGetAvailableLoans, false);

   //         $('#staffLoanLogId').val(Id);
   //         $('#staffLoanId').val(staffLoanId);
			//$('#employeeInfoId').val(empId);
			//$('#empCode').val(empCode);
			//$('#employeeName').val(empName); 
   //         $('#loanType').val(loanType);
   //         $('.eloanType').val(staffLoanId);
   //         $('#loanNo').val(loanNo);
			//$('#loanAc').val(newLoanNo);
   //         $('#Principal').val(principal);
   //         $('#Interest').val(interest);
			//$('#InterestCharge').val(charge);		
   //         $('#Disbursed').val(disburse);
			//$('#charge').val(charge);
			//$('#totalAmount').val(total);
   //         $('#loanDate').val(formatDate(loanDate));
   //         $('#trxNo').val(trxNo);
   //         $('#remarks').val(remarks);
   //         $('#trxType').val(trxType);
   //         $('#amount').val(amount);
   //         $('#recoverPrincipal').val(rPrincipal);
   //         $('#recoverInterest').val(rInterest);

			$('#staffLoanLogId').val(Id);
			$("#popupModal").modal('show');
			getVoucherByTrxNo(staffLoanId, empCode, empName, loanType, newLoanNo, loanDate, total, trxNo, trxType);

		}

	//Asad Added on 18.08.2023
	function getVoucherByTrxNo(staffLoanId, empCode, empName, loanType, loanNo, loanDate, total, trxNo, trxType) {
		
		Common.Ajax('GET', '/Payroll/StaffLoan/CheckRecovaryAmount?staffLoanId=' + staffLoanId, [], 'json', ajaxSetRecovaryToPopup, false);

		$("#code").val(empCode);
		$("#name").val(empName);
		$("#ltype").val(loanType);
		$("#effDate").val(loanDate);
		$("#lNo").val(loanNo);
		$("#disAmount").val(total); //Need solution from sabrina
		$("#txNo").val(trxNo);
		$("#txType").val(trxType);
		Common.Ajax('GET', '/Payroll/StaffLoan/GetStaffLoanLogByTrxNo?trxNo=' + trxNo, [], 'json', ajaxPopulateVoucher, false);
	}

	function ajaxSetRecovaryToPopup(res){
			
			var principal = 0;
			var interest = 0;
			var interestCharge = 0;
			var total = 0;

			principal = res?.Principal == null ? 0 : res?.Principal;
			interest = res?.Interest == null ? 0 : res?.Interest;
			interestCharge = res?.Charge == null ? 0 : res?.Charge;
			total = res?.staffLoan?.total == null ? 0 : res?.staffLoan?.total;
			

			$('#disAmount').val(total);
			$('#principalRecovery').val(principal);
			$('#interestRecovery').val(interest);
 
            $('#interestChargeRecovery').val(interestCharge); 
			$('#totalRecovery').val(principal + interest + interestCharge); 
	}

	//Asad Added on 18.08.2023	
	function ajaxPopulateVoucher(response) {

			var trHtml = '';
			var totalDebt = 0;
			var totalCred = 0;
			$.each(response, function (key, value) {
				
				var prin = value.principal == null ? '' : value.principal;
				var inter = value.interest == null ? '' : value.interest;
				var charg = value.charge == null ? '' : value.charge;
				var debt = value.debit == null ? '' : value.debit;
				var cred = value.credit == null ? '' : value.credit;
				
				totalDebt = totalDebt + debt;
				totalCred = totalCred + cred;

				var row = '<tr>' +
					'<td style="text-align: right;">' + prin + '</td>' +
					'<td style="text-align: right;">' + inter + '</td>' +
					'<td style="text-align: right;">' + charg + '</td>' +
					'<td style="text-align: right;">' + debt + '</td>' +
					'<td style="text-align: right;">' + cred + '</td>' +
					'</tr>';
				trHtml = trHtml + row;
			});

			var footer = '<tr>' +
				'<td colspan="3" style="text-align: right;">Total</td>' +
						 '<td style="text-align: right; background-color: lightblue;">' + totalDebt + '</td>' +
						 '<td style="text-align: right; background-color: lightblue;">' + totalCred + '</td>' +
						 '</tr>';

			$('#voucherTableByTrx tbody').empty();
			$('#voucherTableByTrx tfoot').empty();
			$('#voucherTableByTrx tbody').append(trHtml);
			$('#voucherTableByTrx tfoot').append(footer);
			$('#voucherTableByTrx').show();

		}

		function ajaxSetLoan(response){
										
			var newLoanNo = response.staffLoan?.NewLoanNo;
			var disburse = response.staffLoan?.total;
			
			var empCode = response.staffLoan?.empCode;
			if (newLoanNo == null || newLoanNo == '' || newLoanNo == 'null') {
				newLoanNo = '';
			}
			if (disburse == null || disburse == '' || disburse == 'null') {
				disburse = 0;
            }
            Common.Ajax('GET', '/Payroll/StaffLoan/GetAvailableLoans?empcode=' + empCode, [], 'json', ajaxGetAvailableLoans, false);

						
			//1
			
			var Id = response.Id;
			var staffLoanId = response.staffLoanId;
			var empId = response.staffLoan?.employeeInfoId;
			//2
			var empCode = response.staffLoan?.empCode;
			var empName = response.staffLoan?.empName;
			var loanType = response.staffLoan?.loanType == null ? "" : response.staffLoan?.loanType;
			
			//3
			var loanNo = response.staffLoan?.LoanNo == null ? "" : response.staffLoan?.LoanNo;
			//4
			var principal = response.staffLoan?.principalAmount == null ? 0 : response.staffLoan?.principalAmount;
			var interest = response.staffLoan?.interestAmount == null ? 0 : response.staffLoan?.interestAmount;
			var charge = response.staffLoan?.chargeAmount == null ? 0 : response.staffLoan?.chargeAmount;
			//5
			var total = response.staffLoan?.totalAmount == null ? 0 : response.staffLoan?.totalAmount;
			
			var loanDate = response.effectiveDate == null ? "" : format(response.effectiveDate);
			var trxNo = response.trxNo == null ? "" : response.trxNo;
			var remarks = response.remarks == null ? "" : response.remarks;

			//6
			var trxType = response.type;
			var amount = response.credit == null ? 0 : response.credit;
			var rPrincipal = response.principal == null ? 0 : response.principal;
			var rInterest = response.interest == null ? 0 : response.interest;
			

			var json = {
				"Id": Id,
				"staffLoanId": staffLoanId,
				"empId": empId,
				"empCode": empCode,
				"empName": empName,
				"loanType": loanType,
				//"staffLoanId": staffLoanId,
				"loanNo": loanNo,
				"newLoanNo": newLoanNo,
				"principal": principal,
				"interest": interest,
				"charge": charge,
				"disburse": disburse,
				//"charge": charge,
				"total": total,
				"loanDate": loanDate,
				"trxNo": trxNo,
				"remarks": remarks,
				"trxType": trxType,
				"amount": amount,
				"rPrincipal": rPrincipal,
				"rInterest": rInterest
			}
			//alert(JSON.stringify(json));

			$('#staffLoanLogId').val(Id);
            $('#staffLoanId').val(staffLoanId);
			$('#employeeInfoId').val(empId);
			$('#empCode').val(empCode);
			$('#employeeName').val(empName); 
            $('#loanType').val(loanType);
            $('.eloanType').val(staffLoanId);
            $('#loanNo').val(loanNo);
			$('#loanAc').val(newLoanNo);

			Common.Ajax('GET', '/Payroll/StaffLoan/CheckRecovaryAmount?staffLoanId=' + staffLoanId, [], 'json', ajaxRecovaryBothAmount, false);

			//Asad Commented for Adding New Code
            //$('#Principal').val(principal);
            //$('#Interest').val(interest);
			//$('#InterestCharge').val(charge);		
            $('#Disbursed').val(total);
			$('#charge').val(charge);
			$('#totalAmount').val(total);
            $('#loanDate').val(loanDate);
            $('#trxNo').val(trxNo);
            $('#remarks').val(remarks);
            $('#trxType').val(trxType);
			//Asad Commented on 19.08.2023
            //$('#amount').val(amount);
            $('#recoverPrincipal').val(rPrincipal);
            $('#recoverInterest').val(rInterest);

			$("#trxNo").attr('readonly','readonly');
			$("#loanType").attr('disabled','disabled');
			$("#trxType").attr('disabled', 'disabled');

			$("#popupModal").modal('hide');

		}

		function GetInstallment() {
			var totalAmount = $("#advanceAmount").val();
			var monthlyAmount = $("#installmentAmount").val();
			if ($("#advanceAmount").val() == '' || $("#installmentAmount").val() == '') {
				totalAmount = 0;
				monthlyAmount = 0;
			}
			$("#noOfInstallment").val(parseFloat(totalAmount / monthlyAmount).toFixed(0));
		}

		function GetMonthly() {
			var totalAmount = $("#advanceAmount").val();
			var noOfInstal = $("#noOfInstallment").val();
			if ($("#advanceAmount").val() == '' || $("#noOfInstallment").val() == '') {
				totalAmount = 0;
				noOfInstal = 0;
			}
			$("#installmentAmount").val(parseFloat(totalAmount / noOfInstal).toFixed(2));
        }


        function SearchVoucherEntry() {


            var fromDate = $('#fromDate').val();
            var toDate = $('#toDate').val();

            Common.Ajax('GET', '/Payroll/StaffLoan/GetAllStaffLoansByDate?fromDate=' + fromDate + '&toDate=' + toDate, [], 'json', ajaxGetAllVoucherEntry, true);

        }



        function ajaxGetAllVoucherEntry(res) {
            console.log("Check")
            console.log(res)
            $('#loanTable').DataTable().destroy();
            var option = '';
            var n = 1;
            $.each(res, function (i, item) {
                    option += `<tr  style="cursor: pointer;">
								   <td>${n}</td>
								   <td>${item.staffLoan.employeeInfo ?.employeeCode == null ? '' : item.staffLoan.employeeInfo ?.employeeCode}</td>
								   <td>${item.staffLoan.employeeInfo ?.nameEnglish == null ? '' : item.staffLoan.employeeInfo ?.nameEnglish}</td>
								   <td>${item.staffLoan ?.loanType == null ? '' : item.staffLoan ?.loanType}</td>
								   <td>${item.staffLoan ?.totalDisbursement == null ? '' : item.staffLoan ?.totalDisbursement}</td>
								   <td>${item.staffLoan ?.principalAmount == null ? '' : item.staffLoan ?.principalAmount}</td>
								   <td>${item.staffLoan ?.interestAmount}</td>
								   <td>${item.debit == null ? item.credit : item.debit}</td>
								   <td>${item.staffLoan ?.totalAmount != null ? item.staffLoan ?.totalAmount : ''}</td>
								   <td>${item.staffLoan ?.loanDate == null ? '' : formatDate(item.staffLoan ?.loanDate)}</td>

								   <td style="width:15%">
												<a href="#" class="btn btn-success" onclick="Edit(${item.Id},${item.staffLoanId}, ${item.staffLoan?.employeeInfoId}, '${item.staffLoan.employeeInfo?.employeeCode}', '${item.staffLoan.employeeInfo?.nameEnglish}', '${item.staffLoan?.loanType}', '${item.staffLoan?.totalDisbursement}', '${item.staffLoan?.principalAmount}', '${item.staffLoan?.interestAmount}', '${item.staffLoan?.chargeAmount}', '${item.staffLoan?.totalAmount}', '$item.staffLoan?.LoanNo', '${item.staffLoan?.NewLoanNo}', '${formatDate(item?.effectiveDate)}', '${item.trxNo}', '${item.remarks}', '${item.type}', ${item.debit == null ? item.credit : item.debit})"><i class="fas fa-edit"></i></a>
										<a href="javascript:void(0)" class="btn btn-danger" onclick="Delete(${item.Id})"><i class="fas fa-trash"></i></a>
								   </td>
                               </tr>`
                n++;

            })
            $('#loanTable tbody').empty();
            $('#loanTable tbody').append(option);
            GenerateDataTable1();
            
        }
        
        function GenerateDataTable1() {
            $('#loanTable').DataTable({
        
                scrollCollapse: true,
                paging: true,
                "pageLength": 50,
                lengthMenu: [
                    [50, 100, 125, -1],
                    [50, 100, 125, 'All'],
                ],
                dom: 'Blfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel"></i>',
                        titleAttr: 'Excel',
                        className: 'btn-sm btn-success mr-1 '
                    },
                ]
            });
        }

		function format(date){
			var day = new Date(date);				
			const m = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
			var formattedDate = day.getDate() + '-' + m[day.getMonth()] + '-' + day.getFullYear();
			return formattedDate;
		}

    </script>
}