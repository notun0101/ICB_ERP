@model SalesCollectionViewModel
@{
    ViewData["Title"] = "Sale Invoice Bill";
    Layout = "~/Areas/Purchase/Views/shared/_PurchaseLayout.cshtml";
}

<div class="card p-0 m-0">
    <div class="row">
        <div class="col-sm-10">
            <h5 class="card-title pull-left col-md-12" style="color: black;margin-left:0px;padding-left:0px;">Sales Bill Issue</h5>
        </div>
        <div class="col-md-2 pull-right" style="padding-top:2px">
            <button type="button" class="btn btn-default btn-sm pull-right" style="width:100px;background-color:#024972;color:white;float:right;" onclick="location.href='@Url.Action("SaleInvoiceBillList", "SalesCollection")'">Back To List</button>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <form asp-method="post" asp-area="OtherSales" asp-controller="SalesCollection" asp-action="SaleInvoiceBill" id="FormId" aria- data-parsley-validate="parsley" autocomplete="off">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" id="purchaseOrderMasterId" name="purchaseOrderMasterId" value="0" />
            <div class="card">
                <div class="card-header" style="padding:6px 0px 0px 3px;">
                    <label style="padding:0px 0px 0px 0px;font-size:16px;font-weight:600" class="col-sm-10 pull-left">Bill Information</label>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 p-0">
                            <div class="form-group row">
                                <label for="purchaseNo" class="col-sm-4 col-form-label text-left">Bill No</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control input-group-sm" name="poNo" id="poNo" readonly value="@ViewBag.issueNo" />
                                    <input type="hidden" id="purchaseOrderMasterId" name="purchaseOrderMasterId" value="0" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="supplierName" class="col-sm-4 col-form-label text-left">Customer Name<span style="float:right;color:red;">*</span></label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="customerId" name="customerId" required>
                                        <option value="">Select One</option>
                                        @foreach (var data in Model.customerWithDues)
                                        {
                                            <option value="@data.relSupplierCustomerResourse.Id">@data.relSupplierCustomerResourse.Leads.leadName (@data.relSupplierCustomerResourse.Leads.leadNumber)</option>
                                        }
                                    </select>
                                </div>
                            </div>

                        </div>
                        <div class="col-sm-6">

                            <div class="form-group row">
                                <label for="purchaseDate" class="col-sm-4 col-form-label text-left">Bill Date</label>
                                <div class="col-sm-8 input-group">
                                    <input name="poDate" id="poDate" class="form-control input-group-sm" readonly />
                                    <div class="input-group-prepend">
                                        <label for="poDate" class="fas fa-calendar-alt form-control input-group-sm input-group-text bg-white"></label>
                                    </div>
                                </div>

                            </div>
                            <div class="form-group row">
                                <label for="paymentDate" class="col-sm-4 col-form-label text-left">Invoice Number</label>
                                <div class="col-sm-8 input-group">
                                    <select class="form-control" id="invoiceId" name="invoiceId" required>
                                        <option value="">Select One</option>
                                    </select>
                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
            <div style="height:5px;"></div>
            <div class="card">
                <div class="card-header" style="padding:6px 0px 0px 3px;">
                    <label style="padding:0px 0px 0px 0px;font-size:16px;font-weight:600" class="col-sm-10 pull-left">Purchase Details</label>
                </div>
                <div class="card-body">
                    <br />
                    <div class="row">

                        <input type="hidden" id="detailsId" name="detailsId" value="0" />
                        <input type="hidden" id="IsEdit" name="IsEdit" value="0" />
                        <div class="col-12">
                            <table class="table table-bordered table-striped" id="tblitemDetails" data-parsley-required="true">
                                <thead style="width:100%;background-color:lightgray;">
                                    <tr>
                                        <th style="width:17%">Item</th>
                                        <th style="width:20%">Item Specification</th>
                                        <th style="width:8%">Unit</th>
                                        <th style="width:15%;text-align:right;">Quantity</th>
                                        <th style="width:15%;text-align:right;">Price</th>
                                        <th style="width:17%;text-align:right;">Sub Total</th>
                                        @*<th style="width:8%">Action</th>*@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>

                    <div class="form-group row">
                        <div class="col-sm-7">&nbsp;</div>
                        <label for="grossTotal" class="col-sm-2 col-form-label" style="text-align:right;">Gross Total </label>
                        <div class="col-sm-2" style="padding-right: 0px;">
                            <input type="text" class="form-control" name="totalAmount" id="totalAmount" style="text-align:right;" readonly>
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-7">&nbsp;</div>
                        <label for="grossDiscount" class="col-sm-2 col-form-label" style="text-align:right;">Tax(%) </label>
                        <div class="col-sm-2" style="padding-right: 0px;">
                            <input type="number" class="form-control" name="taxPercent" id="taxPercent" style="text-align:right;" min="0" readonly>
                            <input type="hidden" name="taxAmount" id="taxAmount">
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-7">&nbsp;</div>
                        <label for="grossVAT" class="col-sm-2 col-form-label" style="text-align:right;">VAT(%) </label>
                        <div class="col-sm-2" style="padding-right: 0px;">
                            <input type="number" class="form-control" name="vatPercent" id="vatPercent" style="text-align:right;" min="0" readonly>
                            <input type="hidden" name="vatAmount" id="vatAmount">
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-7">&nbsp;</div>
                        <label for="netTotal" class="col-sm-2 col-form-label" style="text-align:right;">Net Total </label>
                        <div class="col-sm-2" style="padding-right: 0px;">
                            <input type="text" class="form-control" name="netTotal" id="netTotal" value="0" style="text-align:right;" readonly>
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                    </div>

                    <br />
                    <br />
                    <h5>Bill History : </h5>
                    <div class="row">
                        <div class="col-sm-6">
                            <table class="table table-bordered" id="billHistory">
                                <thead>
                                    <tr>
                                        <th>Bill No</th>
                                        <th>Bill Date</th>
                                        <th>Amount</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <br />
                    <br />
                    <div class="form-group row">
                        <label for="netTotal" class="col-sm-2 col-form-label">Bill Amount </label>
                        <div class="col-sm-4" style="padding-right: 0px;">
                            <input type="text" class="form-control" name="BillTotal" id="BillTotal" value="0" style="text-align:right;" required>
                            <input type="hidden" class="form-control" value="0" name="totalreceive" id="totalreceive" style="text-align:right;" required>
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                        <div class="col-sm-5">&nbsp;</div>
                    </div>

                    <div class="form-group row">
                        <label for="netTotal" class="col-sm-2 col-form-label"> Due </label>
                        <div class="col-sm-4" style="padding-right: 0px;">
                            <input type="text" class="form-control" name="DueDate" id="DueDate" style="text-align:right;" readonly>
                        </div>
                        <div class="col-sm-1">&nbsp;</div>
                        <div class="col-sm-5">&nbsp;</div>
                    </div>

                </div>
            </div>

            <div style="height:5px;"></div>

            <div class="row">
                <div class="col-md-9">

                </div>
                <div class="col-md-3" style="text-align:right">
                    <input type="button" onclick="RefreshAll()" id="btnRefesh" value="Refresh" class="btn btn-outline-secondary btn-sm" style="width:90px;" />&nbsp;&nbsp;
                    <input type="button" id="submit" value="Save" class="btn btn-info btn-sm" style="width:90px;" />
                </div>

            </div>

        </form>
    </div>


</div>



@section ScriptsV{
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script type="text/javascript">
         $('#submit').click(function () {
		console.log($('#FormId').serializeArray());
		var data = $('#FormId').serializeArray();

		console.log(data[0].value)
		swal({
			title: 'Are you sure?', text: 'Do you want to submit this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, submit it!'
		}).then(function () {
			$.ajax({
				url: '@Url.Action("SaleInvoiceBill", "SalesCollection")',
				type: 'POST',
				data: data
			}).done(function () {
                if (data[0].value == 0) {
                    swal('success', 'Saved Successfully!', 'success').then(function () {
                        location.reload();
                    });
                }
                else {
                    swal('success', 'Updated Successfully!', 'success').then(function () {
                        location.reload();
                    });;
                }
			}).fail(function () {
				swal('warning', 'Failed!', 'warning');
			})
		});
	})

        function getPurchaseDate(pdate) {
            var formattedDate = new Date(pdate);
            var d = formattedDate.getDate();
            var m = formattedDate.getMonth();
            //m += 1;  // JavaScript months are 0-11
            var y = formattedDate.getFullYear();

            var monthNames = [
                "Jan", "Feb", "Mar",
                "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct",
                "Nov", "Dec"
            ];

            var fullDate = d + "-" + monthNames[m] + "-" + y;
            return fullDate;
        }

        function getCurrentDate() {
            $("#poDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
        }

        function ajaxDueInvoice(response) {
            var options = '<option value="">Select</option>';
            $.each(response, function (i, item) {
                options += '<option value="' + item.salesInvoiceMaster.Id + '">' + item.salesInvoiceMaster.invoiceNumber + '</option>';
            });
            $('#invoiceId').empty();
            $('#invoiceId').append(options);
        }

        $(document).ready(function () {

            $("#poDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());
            $("#paymentDate").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "2010:2030" }).datepicker("setDate", new Date());


            $("#poDate").change(function () {
                getPoNo();
            });
            Common.Ajax('GET', '/global/api/GetAllSupplier', [], 'json', ajaxAllSupplier);
            Common.Ajax('GET', '/global/api/GetAllItemForRequisition', [], 'json', ajaxGetAllItem);
            $("#taxPercent").keyup(function () {
                CalculateVatTax();
            });
            $("#vatPercent").keyup(function () {
                CalculateVatTax();
            });
            $('#Qty').keyup(function () {
                checkvalidQty();
            })
            $('#price').keyup(function () {
                checkvalidRate();
            })
            $('#taxPercent').keyup(function () {
                checkvalidVatTax();
            })
            $('#vatPercent').keyup(function () {
                checkvalidVatTax();
            })

            $('#BillTotal').keyup(function () {
                totalDue();
            })

            $('#invoiceId').change(function () {
                var id = $('#invoiceId').val();
                Common.Ajax('GET', '/global/api/getAllOSalesInvoiceDetailByMasterId/' + id, [], 'json', ajaxGetPurchaseOrderDetailByPOId);
                Common.Ajax('GET', '/global/api/GetSalesCollectionBillInfoByInvoiceId/' + id, [], 'json', ajaxGetBillReceiveInformationByInvoiceId);
            })

            $("#customerId").change(function () {
                var id = $('#customerId').val();
                //alert(id);
                $('#relSupplierCustomerResourseId').val(id);
                Common.Ajax('GET', '/global/api/GetDueSalesInvoiceWithoutStore/' + id, [], 'json', ajaxDueInvoice, false);
            })

             @*if (@masterId>0) {
                 Common.Ajax('GET', '/Purchase/PurchaseOrder/GetPurchaseOrderMasterById/?purchaseId=' + @ViewBag.masterId, [], 'json', ajaxGetPurchaseOrderMasterById);
                 Common.Ajax('GET', '/Purchase/PurchaseOrder/GetPurchaseOrderDetailByPOId/?purchaseId=' + @ViewBag.masterId, [], 'json', ajaxGetPurchaseOrderDetailByPOId);
            }*@

            $("#btnSave").click(function (e) {
                let rowCount = $("#tblitemDetails tbody>tr").length;
                if ($("#supplierName").val() == "") {
                    swal('Warning', 'Supplier Name can not be null', 'warning');
                    return false;
                }
                if ($("#relSupplierCustomerResourseId").val() == "0") {
                    $("#supplierName").val('');
                    //alert("Please Enter valid Supplier Name.!!!");
                    swal('Warning', 'Please Enter valid Supplier Name.!!!', 'warning');
                    return false;
                }
                if (rowCount<1) {
                    //alert("Please Add Item from Purchase Details!!!");
                    swal('Warning', 'Please Add Item from Purchase Details!!!', 'warning');
                    return false;
                }
                e.preventDefault();

                var form = $("#frmPurchaseOrder");
                swal({
                    title: 'Are you sure?', text: 'Do you want to save this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, save it!'
                }).then(function () {
                    $.ajax({
                        url: '/Purchase/PurchaseOrder/Index',
                        data: form.serialize(),
                        type: 'POST',
                        success: function (records) {
                            swal('', 'Saved Successfully!', 'success')
                            window.location.href = "/Purchase/PurchaseOrder/PurchaseDetail/" + records;
                        }
                    });
                    //swal('', 'Saved Successfully!', 'success')
                });

               // return false;

            });

            $(".numeric").keydown(function (e) {
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    (e.keyCode >= 35 && e.keyCode <= 40)) {
                    return;
                }
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });


        });
        function totalDue() {
            var total = parseFloat($('#netTotal').val());
            var amount = parseFloat($('#BillTotal').val());
            var paid = parseFloat($("#totalreceive").val());


            var due = total - amount - paid;
            $('#DueDate').val(due);
        }
        function addCommas(x) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }
        function ajaxGetAllItem(response) {
            var GetInStockItemList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.itemName;
                obj.unitName = option.unit.unitName;
                GetInStockItemList[GetInStockItemList.length] = obj;
            });
            $('#itemName').autocomplete({
                source: GetInStockItemList,
                select: function (event, ui) {
                    $("#itemsId").val(ui.item.key);
                    $("#itemIdspec").val(ui.item.key);
                    $("#itemNamespec").val(ui.item.value);
                    $("#unit").val(ui.item.unitName);
                    $("#itemSpecificationId").val('');
                    $("#itemSpecificationName").val('');
                    Common.Ajax('GET', '/global/api/ItemSpec/' + ui.item.key, [], 'json', ajaxGetItemSpacification);
                    //Common.Ajax('GET', '/MasterData/Item/GetAllSpecificationDetailByitemId/?itemId=' + $("#itemsId").val(), [], 'json', ajaxGetAllSpecificationDetailByitemId);
                }
            });
        }

        function AdditemDetailsSpec() {
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblitemDetailsSpec tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblitemDetailsSpec tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsspecificationCategoryId").val();
            }

            if ($("#itemspecification").val() == "") {
                swal('Warning', 'Plaese Enter Specification Name.', 'warning');
                return false
            }

            if ($("#specCategory").val() == "") {
                //alert("Plaese Enter Specification Category.");
                swal('Warning', 'Plaese Enter Specification Category.', 'warning');
                return false
            }
            if ($("#catValue").val() == "") {
                swal('Warning', 'Plaese Enter Category Value.', 'warning');
                //alert("Plaese Enter Category Value.");
                return false
            }



            let id = parseInt($("#detailsIdSpec").val()) ? parseInt($("#detailsIdSpec").val()) : 0;
            var itemSpecificationName = $("#itemspecification").val();
            var itemSpecificationNameShow = $("#itemspecification").val();
            var specificationCategoryId = $("#specCategory").val();
            var specificationCategoryName = $("#specCategory option:selected").text();
            var catValue = $("#catValue").val();

            var RowCount = $("#tblitemDetailsSpec tbody>tr").length;
            var editOption = parseInt($('#IsEditSpec').val()) ? parseInt($('#IsEditSpec').val()) : 0;

            for (i = 0; i <= RowCount; i++) {
                var _itemSpecificationName = $("#itemSpecificationNameVD" + i).val();
                var _specificationCategoryId = $("#specificationCategoryId" + i).val();
                if (_itemSpecificationName == itemSpecificationName && _specificationCategoryId == specificationCategoryId && editOption == 0) {
                    alert('You have already added this Specification Category!');
                    return false
                }
                if (_itemSpecificationName == itemSpecificationName) {
                    itemSpecificationNameShow = "";
                }
            }

            var dtTable = $("#tblitemDetailsSpec");
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr id=' + index + '>' +
                '<td>' + itemSpecificationNameShow + '<input type="hidden" id="itemSpecificationName' + index + '" name="itemSpecificationName" class="clsitemSpecificationName" value="' + itemSpecificationNameShow + '"/><input type="hidden" id="itemSpecificationNameVD' + index + '" name="itemSpecificationNameVD" class="clsitemSpecificationNameVD" value="' + itemSpecificationName + '"/></td>' +
                '<td>' + specificationCategoryName + '<input type="hidden" name="id"class="clsId" value="' + id + '"><input type="hidden" id="specificationCategoryId' + index + '" name="specificationCategoryId" class="clsspecificationCategoryId" value="' + specificationCategoryId + '"/></td>' +
                '<td>' + catValue + '<input type="hidden" id="CategoryValue' + index + '" name="CategoryValue" class="clsCategoryValue" value="' + catValue + '"/></td>' +
                '<td><a href="javascript:void(0)"style="background-color:red;border-color:red" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-xs" onclick="DeleteSpec(' + index + ')"><i class="fa fa-trash"></i></a>&nbsp;&nbsp;' +
                '<a onclick="EditTblSpec(' + index + "," + specificationCategoryId + ", '" + itemSpecificationName + "',  '" + catValue + "'," + id + ')" href="javascript:void(0)" title="Edit" class="btn btn-success btn-xs" > <i class="fa fa-edit"></i></a >' +


                '</tr>';
            if (ifExistIndex == null || ifExistIndex == "null") {
                tableBody.append(trHtml);
            }
            else {
                var rowUpdate = $("#tblitemDetailsSpec tbody >tr:eq(" + ifExistIndex + ")");
                rowUpdate.replaceWith(trHtml);
                window.localStorage.setItem("holdIndex", null);
                ifExistIndex = null;
            }

            RefreshSpec();
        }
        function EditTblSpec(index, specificationCategoryId, itemSpecificationName, catValue, Id) {
            var rightIndex = index;
            $("#IsEditSpec").val(1);
            $('#detailsIdSpec').val(Id);
            $('#itemspecification').val(itemSpecificationName);
            $('#specCategory').val(specificationCategoryId);
            $('#catValue').val(catValue);

            window.localStorage.setItem('holdIndex', null);
            if (rightIndex != null) {
                window.localStorage.setItem('holdIndex', rightIndex);
            }
        }

        function RefreshSpec() {
            $('#detailsIdSpec').val('');
            $("#IsEditSpec").val(0);

            $('#specCategory').val('');
            $('#catValue').val('');
            window.localStorage.setItem("holdIndex", null);
            ifExistIndex = null;
        }

        function DeleteSpec(index) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {
                $("#tblitemDetailsSpec #" + index).remove();
                swal('', 'Deleted Successfully!', 'success');
            });

        }


        function ajaxGetAllSpecificationDetailByitemId(response) {
            console.log(response);
            var ifExistIndex = window.localStorage.getItem("holdIndex");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblitemDetailsSpec tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblitemDetailsSpec tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsspecificationCategoryId").val();
            }
            $("#tblitemDetailsSpec tbody>tr").empty();
            $.each(response, function (key, value) {
                var itemSpecificationName = value.specificationName;
                var itemSpecificationNameShow = value.specificationName;
                var RowCount = $("#tblitemDetailsSpec tbody>tr").length;
                for (i = 0; i <= RowCount; i++) {
                    var _itemSpecificationName = $("#itemSpecificationNameVD" + i).val();

                    if (_itemSpecificationName == itemSpecificationName) {
                        itemSpecificationNameShow = "";
                    }
                }

                index = $("#tblitemDetailsSpec tbody>tr").length;
                var dtTable = $("#tblitemDetailsSpec");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + itemSpecificationNameShow + '<input type="hidden" id="itemSpecificationName' + index + '" name="itemSpecificationName" class="clsitemSpecificationName" value="' + itemSpecificationNameShow + '"/><input type="hidden" id="itemSpecificationNameVD' + index + '" name="itemSpecificationNameVD" class="clsitemSpecificationNameVD" value="' + itemSpecificationName + '"/></td>' +
                    '<td>' + value.specificationCategoryName + '<input type="hidden" name="id"class="clsId" value="' + value.Id + '"><input type="hidden" id="specificationCategoryId' + index + '" name="specificationCategoryId" class="clsspecificationCategoryId" value="' + value.specificationCategoryId + '"/></td>' +
                    '<td>' + value.value + '<input type="hidden" id="CategoryValue' + index + '" name="CategoryValue" class="clsCategoryValue" value="' + value.value + '"/></td>' +
                    '<td><a href="javascript:void(0)"style="background-color:red;border-color:red" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-xs" onclick="DeleteSpec(' + index + ')"><i class="fa fa-trash"></i></a>&nbsp;&nbsp;' +
                    '<a onclick="EditTblSpec(' + index + "," + value.specificationCategoryId + ", '" + value.specificationName + "',  '" + value.value + "'," + value.Id + ')" href="javascript:void(0)" title="Edit" class="btn btn-success btn-xs" > <i class="fa fa-edit"></i></a >' +


                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblitemDetailsSpec tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex", null);
                    ifExistIndex = null;
                }
            })

            index = index + 1;
        }
        $("#btnSaveItemSpec").click(function (e) {
            let rowCount = $("#tblitemDetailsSpec tbody>tr").length;
            if (rowCount < 1) {
                swal('Warning', 'Invalid attempt!!!', 'warning');
                //alert("Invalid attempt!!!");
                return false;
            }
            e.preventDefault();

            var form = $("#frmaddItemSpecification");
            $.ajax({
                url: '/Purchase/PurchaseOrder/SaveItemSpecification',
                data: form.serialize(),
                type: 'POST',
                success: function (records) {
                    swal({
                        title: '', text: 'Save Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                    }).then(function () {

                        $('#addItemSpecificationModal').modal('hide');
                       Common.Ajax('GET', '/global/api/ItemSpec/' + records, [], 'json', ajaxGetItemSpacification);
                       // Common.Ajax('GET', '/global/api/ItemSpecDetail/' + records, [], 'json', ajaxGetItemSpacification);

                    });

                }
            });
        });

        function ajaxGetItemSpacification(response) {

            var GetInStockItemSpacificationList = [];
            $.each(response, function (id, option) {
                console.log(option);
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.specificationName;
                GetInStockItemSpacificationList[GetInStockItemSpacificationList.length] = obj;
            });
            $('#itemSpecificationName').autocomplete({
                source: GetInStockItemSpacificationList,
                select: function (event, ui) {
                    $("#itemSpecificationId").val(ui.item.key);

                }
            });
        }

        function ajaxAllSupplier(response) {
            var GetInStockItemSpacificationList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.organizationName;
                GetInStockItemSpacificationList[GetInStockItemSpacificationList.length] = obj;
            });
            $('#supplierName').autocomplete({
                source: GetInStockItemSpacificationList,
                select: function (event, ui) {
                    $("#relSupplierCustomerResourseId").val(ui.item.key);
                }
            });
        }

        function RefreshAll() {
            window.location.href = "/Purchase/PurchaseOrder/Index?id=" + 0;

        }


        function AdditemDetails() {

            var ifExistIndex = window.localStorage.getItem("holdIndex1");

            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblitemDetails tbody>tr").length;
            }
            else
            {
                index = ifExistIndex;
                tdRID = $("#tblitemDetails tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsId").val();
            }

            if ($("#itemName").val() == "") {
                swal('Warning', 'Plaese Enter Valid Item Name.', 'warning');
                //alert("Plaese Enter Valid Item Name.");
                return false
            }
            if ($("#itemSpecificationName").val() == "") {
                swal('Warning', 'Plaese Enter Valid Item Specification.', 'warning');
                //alert("Plaese Enter Valid Item Specification.");
                return false
            }
            if ($("#itemSpecificationId").val() == "" || $("#itemSpecificationId").val() == "0") {
                swal('Warning', 'Plaese Enter Valid Item Specification.', 'warning');
                //alert("Plaese Enter Valid Item Specification.");
                return false
            }

            if ($("#Qty").val() == "") {
                swal('Warning', 'Plaese Enter Valid Quantity.', 'warning');
                //alert("Plaese Enter Valid Quantity.");
                return false
            }
            if ($("#price").val() == "") {
                swal('Warning', 'Plaese Enter Valid Price.', 'warning');
                //alert("Plaese Enter Valid Price.");
                return false
            }

            let id = parseInt($("#detailsId").val()) ? parseInt($("#detailsId").val()) : 0;
            var itemName = $("#itemName").val();
            var itemsId = $("#itemsId").val();
            var itemSpecification = $("#itemSpecificationName").val();
            var specid = $("#itemSpecificationId").val();
            var price = parseFloat($("#price").val());
            var quantity = parseFloat($("#Qty").val());
            var unit = $("#unit").val();


            var totalAmount = (price * quantity);

            var RowCount = $("#tblitemDetails tbody>tr").length;
            var editOption = parseInt($('#IsEdit').val()) ? parseInt($('#IsEdit').val()) : 0;

            for (i = 0; i < RowCount; i++) {
                var _itemSpecification = $("#itemSpecification" + i).val();

                if (_itemSpecification == specid && editOption == 0) {
                    swal('Warning', 'You have already added this Item Specification!', 'warning');
                    //alert('You have already added this Item Specification!');
                    return false
                }
            }

            var dtTable = $("#tblitemDetails");
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr id=' + index + '>' +
                '<td>' + itemName + '<input type="hidden" name="id"class="clsId" value="' + id + '"><input type="hidden" id="itemId' + index + '" name="itemId" class="clsitemId" value="' + itemsId + '"/></td>' +
                '<td>' + itemSpecification + '<input type="hidden" id="itemSpecification' + index + '" name="itemSpecification" class="clsitemSpecification" value="' + specid + '"/></td>' +
                '<td>' + unit + '</td>' +
                '<td style="text-align:right;">' + quantity + '<input type="hidden" id="quantity' + index + '" name="quantity" class="clsquantity" value="' + quantity + '"/></td>' +
                '<td style="text-align:right;">' + price + '<input type="hidden" id="rate' + index + '" name="rate" class="clsrate" value="' + price + '"/></td>' +
                '<td style="text-align:right;">' + totalAmount + '<input type="hidden" id="itemtotalAmount' + index + '" name="itemtotalAmount" class="clstotalAmount" value="' + totalAmount + '"/></td>' +
                '<td><a href="javascript:void(0)"style="background-color:red;border-color:red" data-toggle="tooltip" title="Delete" class="btn btn-danger btn-xs" onclick="Delete(' + index + ')"><i class="fa fa-trash"></i></a>&nbsp;&nbsp;' +
                '<a onclick="EditTbl(' + index + "," + itemsId + ", " + quantity + ", `" + itemName + "`,  `" + itemSpecification + "`,'" + unit + "', " + price + ", " + id + "," + specid + ')" href="javascript:void(0)" title="Edit" class="btn btn-success btn-xs" > <i class="fa fa-edit"></i></a >' +


                '</tr>';

            if (ifExistIndex == null || ifExistIndex == "null") {
                tableBody.append(trHtml);
            }
            else {
                var rowUpdate = $("#tblitemDetails tbody >tr:eq(" + ifExistIndex + ")");
                rowUpdate.replaceWith(trHtml);
                window.localStorage.setItem("holdIndex", null);
                ifExistIndex = null;
            }
            fnGrandTotal();
            Refresh();
        }
        function EditTbl(index, itemsId, quantity, itemName, itemSpecification, unit, price, Id,specId) {
            var rightIndex = index;
            $("#IsEdit").val(1);
            $('#detailsId').val(Id);
            $('#itemSpecificationId').val(specId);
            $('#Qty').val(quantity);
            $('#price').val(price);
            $('#itemName').val(itemName);
            $('#itemsId').val(itemsId);
            $('#itemSpecificationName').val(itemSpecification);

            $('#unit').val(unit);

            $('#itemNamespec').val(itemName);
            $('#itemIdspec').val(itemsId);
            Common.Ajax('GET', '/MasterData/Item/GetAllSpecificationDetailByitemId/?itemId=' + $("#itemsId").val(), [], 'json', ajaxGetAllSpecificationDetailByitemId);


            window.localStorage.setItem('holdIndex1', null);
            if (rightIndex != null) {
                window.localStorage.setItem('holdIndex1', rightIndex);
            }



        }

        function Refresh() {
            $('#detailsId').val('');
            $("#IsEdit").val(0);

            $('#Qty').val('');
            $('#price').val('');
            $('#itemName').val('');
            $('#itemsId').val('');
            $('#itemSpecificationName').val('');
            $('#itemSpecificationId').val('');
            $('#unit').val('');

            window.localStorage.setItem("holdIndex1", null);
            ifExistIndex = null;
        }

        function Delete(index) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {
                $("#tblitemDetails #" + index).remove();
                swal('', 'Deleted Successfully!', 'success');
                fnGrandTotal();
            });

        }
        function ajaxGetPurchaseOrderMasterById(response) {

            $("#purchaseOrderMasterId").val(response.Id);
            $("#supplierName").val(response.relSupplierCustomerResourse.organization.organizationName);
            $("#relSupplierCustomerResourseId").val(response.relSupplierCustomerResourseId);
            $("#poDate").val(getPurchaseDate(response.poDate.toString("dd-MMM-yyyy")));
            $("#paymentDate").val(getPurchaseDate(response.paymentDate.toString("dd-MMM-yyyy")));
            $("#taxPercent").val(response.taxPercent);
            $("#vatPercent").val(response.vatPercent);
            $("#totalAmount").val(response.totalAmount.toFixed(2));
            $("#taxAmount").val(response.taxAmount);
            $("#vatAmount").val(response.vatAmount);
            $("#netTotal").val(response.netTotal.toFixed(2));

        }

        function ajaxGetPurchaseOrderDetailByPOId(response) {
            //console.log(response);
            var ifExistIndex = window.localStorage.getItem("holdIndex1");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#tblitemDetails tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#tblitemDetails tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsId").val();
            }
            $("#tblitemDetails tbody>tr").empty();

            var itemtotalAmount = 0;
            $.each(response, function (key, value) {
                itemtotalAmount = value.quantity * value.rate;
                //alert(itemtotalAmount);
                index = $("#tblitemDetails tbody>tr").length;
                var dtTable = $("#tblitemDetails");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.itemSpecication.Item.itemName + '<input type="hidden" name="id"class="clsId" value="' + value.Id + '"><input type="hidden" id="itemId' + index + '" name="itemId" class="clsitemId" value="' + value.itemSpecication.Item.Id + '"/></td>' +
                    '<td>' + value.itemSpecication.specificationName + '<input type="hidden" id="itemSpecification' + index + '" name="itemSpecification" class="clsitemSpecification" value="' + value.itemSpecication.Id + '"/></td>' +
                    '<td>' + value.itemSpecication.Item.unit.unitName + '</td>' +
                    '<td style="text-align:right;">' + value.quantity + '<input type="hidden" id="quantity' + index + '" name="quantity" class="clsquantity" value="' + value.quantity + '"/></td>' +
                    '<td style="text-align:right;">' + value.rate + '<input type="hidden" id="rate' + index + '" name="rate" class="clsrate" value="' + value.rate + '"/></td>' +
                    '<td style="text-align:right;">' + itemtotalAmount + '<input type="hidden" id="itemtotalAmount' + index + '" name="itemtotalAmount" class="clstotalAmount" value="' + itemtotalAmount + '"/></td>' +

                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {

                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#tblitemDetails tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex1", null);
                    ifExistIndex = null;
                }
            })

            index = index + 1;
            fnGrandTotal();
        }

        function ajaxGetBillReceiveInformationByInvoiceId(response) {
            var ifExistIndex = window.localStorage.getItem("holdIndex1");
            var index = "0";
            if (ifExistIndex == "null" || ifExistIndex == null) {
                index = $("#billHistory tbody>tr").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $("#billHistory tbody >tr:eq(" + ifExistIndex + ") td:eq(0) .clsId").val();
            }
            $("#billHistory tbody>tr").empty();

            var itemtotalAmount = 0;
            $.each(response, function (key, value) {
                var status = "Not Paid";
                if (value.ispaid == 1) {
                    status = "Paid";
                }
                var totalreceive = parseFloat($("#totalreceive").val());
                totalreceive = totalreceive + value.Amount;
                $("#totalreceive").val(totalreceive);
                index = $("#billHistory tbody>tr").length;
                var dtTable = $("#billHistory");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + value.billPaymentNo + '</td>' +
                    '<td>' + getPurchaseDate(value.billPaymentDate)+ '</td>' +
                    '<td>' + value.Amount + '</td>' +
                    '<td>' + status + '</td>' +

                    '</tr>';

                if (ifExistIndex == null || ifExistIndex == "null") {

                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $("#billHistory tbody >tr:eq(" + ifExistIndex + ")");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem("holdIndex1", null);
                    ifExistIndex = null;
                }
            })

            index = index + 1;
            fnGrandTotal();
            //totalDue();
        }


        function fnGrandTotal() {
            var tax = 0;
            var vat = 0;
            var totalAmount = 0;
            var netTotal = 0;

            $(".clstotalAmount").each(function () {
                totalAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
            });

            if ($("#taxPercent").val() != "") {
                var taxPercentage = $("#taxPercent").val();
                tax = totalAmount  * taxPercentage / 100;

            }
            if ($("#vatPercent").val() != "") {
                var vatPercentage = $("#vatPercent").val();
                vat = totalAmount * vatPercentage / 100;

            }

            netTotal = parseFloat(totalAmount) + parseFloat(vat) + parseFloat(tax);

            $("#taxAmount").val(tax.toFixed(2));
            $("#vatAmount").val(vat.toFixed(2));
            $("#totalAmount").val(totalAmount.toFixed(2));
            $("#netTotal").val(netTotal.toFixed(2));
            totalDue();

        }
        function CalculateVatTax() {
            var tax = 0;
            var vat = 0;
            var totalAmount = 0;
            var netTotal = 0;
            totalAmount = $("#totalAmount").val();

            if ($("#vatPercent").val() != "" && $("#totalAmount").val() != "") {
                var vatPercentage = $("#vatPercent").val();
                vat = totalAmount * vatPercentage / 100;
            }
            if ($("#taxPercent").val() != "" && $("#totalAmount").val() != "") {
                var taxPercentage = $("#taxPercent").val();
                tax = totalAmount * taxPercentage / 100;
            }

            netTotal = parseFloat(totalAmount) + parseFloat(vat) + parseFloat(tax);
            $("#taxAmount").val(tax.toFixed(2));
            $("#vatAmount").val(vat.toFixed(2));
            $("#netTotal").val(netTotal.toFixed(2));
        }
        function checkvalidQty() {
            let Qty = $('#Qty').val();
            let QtyLen = $('#Qty').val().length;

            if (Qty < 0) {
                swal('Warning', 'Please insert Valid Quantity', 'warning');
                //alert("Please insert Valid Quantity");
                $('#Qty').val('');
                return false;
            }
            if (QtyLen > 8) {
                swal('Warning', 'Please insert Max 8 digit', 'warning');
                //alert("Please insert Max 8 digit");
                $('#Qty').val('');
                return false;
            }

        }
        function checkvalidRate() {
            let Rate = $('#price').val();
            let RateLen = $('#price').val().length;
            if (Rate < 0) {
                swal('Warning', 'Please insert Valid Price', 'warning');
                //alert("Please insert Valid Price");
                $('#price').val('');
                return false;
            }
            if (RateLen > 8) {
                swal('Warning', 'Please insert Max 8 digit', 'warning');
                //alert("Please insert Max 8 digit");
                $('#price').val('');
                return false;
            }
        }
        function checkvalidVatTax() {
            let TaxLen = $('#taxPercent').val().length;
            let VatLen = $('#vatPercent').val().length;

            if (TaxLen > 2) {
                swal('Warning', 'Please insert Max 2 digit', 'warning');
                //alert("Please insert Max 2 digit");
                $('#taxPercent').val('');
                return false;
            }
            if (VatLen > 2) {
                swal('Warning', 'Please insert Max 2 digit', 'warning');
                //alert("Please insert Max 2 digit");
                $('#vatPercent').val('');
                return false;
            }
        }
        function getPoNo() {

            let poDate = $('#poDate').val();
            Common.Ajax('GET', '/api/global/getPoNo/' + poDate, [], 'json', setAutoNumber);
        }

        function setAutoNumber(response) {
            $('#poNo').val(response);
        }

    </script>
}

@section StyleV{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>

        input[readonly] {
            background-color: transparent;
        }
    </style>
}


