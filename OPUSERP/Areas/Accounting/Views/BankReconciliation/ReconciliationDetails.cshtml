@model BankReconciliationModel
@{
    ViewData["Title"] = "Bank Reconciliation List";
    Layout = "~/Areas/Accounting/Views/Shared/_VoucherLayout.cshtml";
    int masterId = Convert.ToInt32(ViewBag.masterId);
}

<Style>
    .bankReconciliationDiv {
        height: 400px;
        overflow: auto;
        background: #fff;
    }

    .bankReconciliationPrevDiv {
        height: 400px;
        overflow: auto;
        background: #fff;
    }
</Style>

@{
    decimal? Sumdebit = 0;
    decimal? Sumcredit = 0;
    decimal? OpeningBalance = 0;

    decimal? Tdebit = 0;
    decimal? Tcredit = 0;
    decimal? TBalance = 0;
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header" style="padding:6px 0px 0px 3px;">
                    <label style="padding:0px 0px 0px 0px;font-size:18px;font-weight:800;text-align:center" class="col-sm-10 pull-left">Reconcile an account</label>
                    <label style="padding:0px 0px 0px 0px;font-size:15px;font-weight:600;text-align:center" class="col-sm-10 pull-left">Open your statement and we'll get started.</label>
                </div>
                <form id="BankReconciliationForm" method="post" enctype="multipart/form-data" data-parsley-validate="parsley">
                    <div asp-validation-summary="All" class="text-danger"></div>

                    <div class="card-body">

                        <div class="row col-md-12">
                            <div class="col-md-6" hidden>
                                <div class="form-group row" id="LedgerProject">
                                    <label for="ledgerId" class="col-sm-3 col-form-label">Project</label>
                                    <div class="col-sm-9">
                                        <select type="text" class="form-control" name="projectId" id="projectId"></select>
                                    </div>
                                </div>

                                <input type="text" class="form-control input-group-sm" value="@Model.bankReconcileMaster?.Id" name="bankReconciliationId" id="bankReconciliationId" hidden />
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="ReconRef" class="col-sm-4 col-form-label text-left">Recon Ref:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-group-sm" value="@Model.bankReconcileMaster?.ReconRef" name="ReconRef" id="ReconRef" readonly />
                                        <input type="text" class="form-control input-group-sm" value="@Model.bankReconcileMaster?.sbuId" name="sbuId" id="sbuId" hidden />
                                        <input type="text" class="form-control input-group-sm" value="@Model.bankReconcileMaster?.Id" name="reconMasterId" id="reconMasterId" hidden />
                                        <input type="text" class="form-control input-group-sm" value="@Model.bankReconcileMaster?.ledgerId" name="ledgerId" id="ledgerId" hidden />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row col-md-12">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="txtPaymentAccount" class="col-sm-4 col-form-label text-left"> Account</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-group-sm" name="txtPaymentAccount" id="txtPaymentAccount" value="@Model.bankReconcileMaster?.ledger?.accountName" readonly />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="closingDate" class="col-sm-4 col-form-label text-left"> Closing Date </label>
                                    <div class="col-sm-8">
                                        <input type="text" name="closingDate" id="closingDate" style="text-align:right" class="fas fa-calendar-alt form-control input-group-sm input-group-text" value="@Model.bankReconcileMaster?.closingDate?.ToString("dd-MMM-yyyy")" readonly />
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row col-md-12">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="bankStatementClosingBalance" class="col-sm-4 col-form-label text-left">Bank Statement Balance</label>
                                    <div class="col-sm-8">
                                        <input type="number" class="form-control input-group-sm" name="bankStatementClosingBalance" id="bankStatementClosingBalance" value="@Model.bankReconcileMaster?.bankStatementClosingBalance" readonly />

                                    </div>
                                </div>


                            </div>
                            <div class="col-md-6">


                                <div class="form-group row">
                                    <label for="bankStatementClosingBalanceDifference" class="col-sm-4 col-form-label text-left"> Bank Book Balance (Software)</label>
                                    <div class="col-sm-8">
                                        <input type="text" name="bankStatementClosingBalance" id="bankStatementClosingBalance" class="form-control input-group-sm read text-right" value="@Model.bankReconcileMaster?.closingBalance" readonly />

                                    </div>
                                </div>


                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="ReconFrom" class="col-sm-4 col-form-label text-left"> Recon. From </label>
                                    <div class="col-sm-8">
                                        <input type="text" name="ReconFrom" id="ReconFrom" style="text-align:center" class="fas fa-calendar-alt form-control input-group-sm input-group-text" value="@Model.bankReconcileMaster?.reconFromDate?.ToString("dd-MMM-yyyy")" readonly />
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label for="ReconTo" class="col-sm-4 col-form-label text-left"> Recon. To </label>
                                    <div class="col-sm-8">
                                        <input type="text" name="ReconTo" id="ReconTo" style="text-align:center" class="fas fa-calendar-alt form-control input-group-sm input-group-text" value="@Model.bankReconcileMaster?.reconToDate?.ToString("dd-MMM-yyyy")" readonly />
                                    </div>
                                </div>

                                <div class="form-group row" style="float:right">
                                    <div class="col-md-2">
                                        <a style="float:right" class="btn btn-warning" target="_blank" href="/Accounting/AccountingReport/BankReconciliationViewpdf?id=@Model.bankReconcileMaster?.Id" title=" Print">Print</a>&nbsp;
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                    @if (Model.ledgerBookViewModel?.ledgerBookPreviousUnRecons.Count() > 0)
                    {

                      

                    <div class="card-body">
                        <div class="card-header" style="padding:6px 0px 0px 3px;">
                            <label style="padding:0px 0px 0px 0px;font-size:18px;font-weight:800;text-align:left" class="col-sm-10 pull-left">Previous Un-Reconciled Statements</label>
                            <label for="ledgerId" class="col-sm-12 col-form-label">Total: <span> @Model.ledgerBookViewModel?.ledgerBookPreviousUnRecons.Count()</span></label>
                        </div>
                        @*<div class="row col-md-12">
                            <div class="col-md-2">
                                <div class="form-group row" id="">
                                    <label for="ledgerId" class="col-sm-12 col-form-label">Total: <span> @Model.ledgerBookViewModel?.ledgerBookCurrentUnRecons.Count()</span></label>
                                </div>
                            </div>
                        </div>*@

                        <div class="row col-md-12">
                            <div class="card-body bankReconciliationPrevDiv" style="padding:0px;">
                                <table class="table table-striped table-bordered" id="BankReconciliationPrevList">



                                    <thead>
                                        <tr>
                                            <th style="width:5%">Sl</th>
                                            <th style="width:7%">
                                                <input type="checkbox" class="form-control input-group-sm" id="selectAllPrev" />
                                            </th>
                                            <th style="width:5%">Voucher Date</th>
                                            <th style="width:5%">Txn Type</th>
                                            <th style="width:5%">Cheque No</th>
                                            <th style="width:15%">Voucher No</th>
                                            <th style="width:5%">Account</th>
                                            <th style="width:15%">Party/Sub-Ledger</th>

                                            <th style="width:5%">Deposit</th>
                                            <th style="width:5%">Payment</th>

                                            <th style="width:30%">Recon Date</th>
                                            @*<th style="width:5%">Is Check</th>*@
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{


                                            decimal? balance = 0;
                                            Sumdebit = 0;
                                            Sumcredit = 0;
                                            int sl = 1;
                                            @foreach (var data in Model.ledgerBookViewModel?.ledgerBookPreviousUnRecons.Where(x => x.accountName != "Opening Balance"))
                                            {
                                                decimal? debit = data.debit;
                                                decimal? credit = data.credit;

                                                balance = balance + debit - credit;

                                                Sumdebit = Sumdebit + data.debit;
                                                Sumcredit = Sumcredit + data.credit;
                                                var account = @data.accountName + " (" + @data.accountName + ")";
                                                <tr>
                                                    <th>@sl</th>
                                                    <th>
                                                        <input type="checkbox" class="form-control input-group-sm MemberCheckListPrev" name="isChecked" value="off" onchange="changePrevValueCheckbox(this,@sl)" />
                                                        <input type="text" class="isCheckPrev" name="isCheck" id="isCheckPrev_@sl" style="text-align:center" value="0" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherDate
                                                        <input type="text" name="voucherIds" class="form-control input-group-sm read text-left" value="@data.VoucherDetailId" hidden />
                                                        <input type="text" name="voucherMasterIds" class="form-control input-group-sm read text-left" value="@data.VoucherId" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherType
                                                        <input type="text" name="voucherType" class="form-control input-group-sm read text-left" value="@data.voucherType" hidden />
                                                    </th>
                                                    <th>
                                                        @data.chequeNo
                                                        <input type="text" name="chequeNo" class="form-control input-group-sm read text-left" value="@data.chequeNo" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherNo
                                                        <input type="text" name="voucherNo" class="form-control input-group-sm read text-left" value="@data.voucherNo" hidden />
                                                    </th>
                                                    <th>@data.subledgerName</th>
                                                    @if (data.voucherDetails.Count() > 0)
                                                    {
                                                        <th>

                                                            @foreach (var item in data.voucherDetails)
                                                            {
                                                                <ul>
                                                                    <li>@item.accountName --- @item.amount?.ToString("0,0.00")</li>
                                                                </ul>
                                                            }
                                                        </th>
                                                    }
                                                    else
                                                    {
                                                        <th></th>
                                                    }


                                                    <th>
                                                        @data.debit
                                                        <input type="text" name="diposit" style="text-align:center" value="@data.debit" hidden />
                                                    </th>
                                                    <th>
                                                        @data.credit
                                                        <input type="text" name="payment" style="text-align:center" value="@data.credit" hidden />
                                                    </th>
                                                    <th>
                                                        <input type="text" name="reconDate" style="text-align:center;width:100px;" class="reconDatePicker fas fa-calendar-alt form-control input-group-sm input-group-text" value="" readonly />
                                                    </th>

                                                </tr>

                                                sl++;
                                            }
                                        }
                                    </tbody>

                                </table>
                            </div>
                        </div>
                    </div>

                    }

                    <div class="card-body">
                        <div class="card-header" style="padding:6px 0px 0px 3px;">
                            <label style="padding:0px 0px 0px 0px;font-size:18px;font-weight:800;text-align:left" class="col-sm-10 pull-left">Un-Reconcile Statements</label>
                        </div>
                        <div class="row col-md-12">
                            <div class="col-md-2">
                                <div class="form-group row" id="">
                                    <label for="ledgerId" class="col-sm-12 col-form-label">Total: <span> @Model.ledgerBookViewModel?.ledgerBookCurrentUnRecons.Count()</span></label>
                                </div>
                            </div>

                            <div class="col-md-8">
                                <div class="row form-group has-search">
                                    @*<span class="fa fa-search form-control-feedback"></span>*@
                                    <input type="text" id="myInput" class="form-control" placeholder="Search">
                                </div>
                            </div>




                        </div>


                        <div class="row col-md-12">
                            <div class="card-body bankReconciliationDiv" style="padding:0px;">
                                <table class="table table-striped table-bordered" id="BankReconciliationList">
                                    <thead>
                                        <tr>
                                            <th style="width:5%">Sl</th>
                                            <th style="width:20%">
                                                <input style="margin: 8px;" type="checkbox" class="form-control input-group-sm" id="selectAll" value="off" />
                                            </th>
                                            <th style="width:5%">Voucher Date</th>
                                            <th style="width:5%">Txn Type</th>
                                            <th style="width:5%">Cheque No</th>
                                            <th style="width:15%">Voucher No</th>
                                            <th style="width:5%">Account</th>
                                            <th style="width:15%">Party/Sub-Ledger</th>

                                            <th style="width:5%">Deposit</th>
                                            <th style="width:5%">Payment</th>

                                            <th style="width:30%">Recon Date</th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @if (Model.ledgerBookViewModel?.ledgerBookCurrentUnRecons.Count() > 0)
                                        {
                                            decimal? balance = 0;
                                            Sumdebit = 0;
                                            Sumcredit = 0;
                                            int sl = 1;
                                            @foreach (var data in Model.ledgerBookViewModel?.ledgerBookCurrentUnRecons.Where(x => x.accountName != "Opening Balance"))
                                            {
                                                decimal? debit = data.debit;
                                                decimal? credit = data.credit;

                                                balance = balance + debit - credit;

                                                Sumdebit = Sumdebit + data.debit;
                                                Sumcredit = Sumcredit + data.credit;
                                                var account = @data.accountName + " (" + @data.accountName + ")";
                                                <tr>
                                                    <th>@sl</th>
                                                    <th>
                                                        <input type="checkbox" class="form-control input-group-sm MemberCheckList" name="isChecked" value="off" onchange="changeValueCheckbox(this,@sl)" />
                                                        <input type="text" name="isCheck" id="isCheck_@sl" style="text-align:center" value="0" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherDate
                                                        <input type="text" name="voucherIds" class="form-control input-group-sm read text-left" value="@data.VoucherDetailId" hidden />
                                                        <input type="text" name="voucherMasterIds" class="form-control input-group-sm read text-left" value="@data.VoucherId" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherType
                                                        <input type="text" name="voucherType" class="form-control input-group-sm read text-left" value="@data.voucherType" hidden />
                                                    </th>
                                                    <th>
                                                        @data.chequeNo
                                                        <input type="text" name="chequeNo" class="form-control input-group-sm read text-left" value="@data.chequeNo" hidden />
                                                    </th>
                                                    <th>
                                                        @data.voucherNo
                                                        <input type="text" name="voucherNo" class="form-control input-group-sm read text-left" value="@data.voucherNo" hidden />
                                                    </th>
                                                    <th>@data.subledgerName</th>
                                                    @if (data.voucherDetails.Count() > 0)
                                                    {
                                                        <th>

                                                            @foreach (var item in data.voucherDetails)
                                                            {
                                                                <ul>
                                                                    <li>@item.accountName --- @item.amount?.ToString("0,0.00")</li>
                                                                </ul>
                                                            }
                                                        </th>
                                                    }
                                                    else
                                                    {
                                                        <th></th>
                                                    }


                                                    <th>
                                                        @data.debit
                                                        <input type="text" name="diposit" style="text-align:center" value="@data.debit" hidden />
                                                    </th>
                                                    <th>
                                                        @data.credit
                                                        <input type="text" name="payment" style="text-align:center" value="@data.credit" hidden />
                                                    </th>
                                                    <th>
                                                        <input type="text" name="reconDate" style="text-align:center;width:100px;" class="reconDatePicker fas fa-calendar-alt form-control input-group-sm input-group-text" value="" readonly />
                                                    </th>

                                                </tr>

                                                sl++;
                                            }

                                        }

                                        @*<tr>
                                <th width="10%">Voucher Date</th>
                                <th width="7%">Txn Type</th>
                                <th width="8%">Cheque No</th>
                                <th width="15%">Voucher No</th>
                                <th width="15%">Account</th>
                                <th width="8%">Party/Sub-Ledger</th>

                                <th width="8%">Payment</th>
                                <th width="8%">Deposit</th>
                                <th width="10%"><input type="text" name="reconDatePicker" style="text-align:center" class="reconDatePicker fas fa-calendar-alt form-control input-group-sm input-group-text" value="" readonly /></th>
                                <th width="10%">
                                    <input type="checkbox" class="form-control input-group-sm" name="isChecked" />
                                </th>
                            </tr>*@


                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-9">

                            </div>
                            <div class="col-md-3" style="text-align:right">
                                <input type="button" onclick="RefreshAll()" id="btnRefesh" value="Refresh" class="btn btn-outline-secondary btn-sm" style="width:90px;" />&nbsp;&nbsp;
                                <input type="submit" id="btnSave" value="Save" class="btn btn-info btn-sm" style="width:90px;" />
                            </div>

                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
    <br />
}



@section ScriptsV{
    <script type="text/javascript">
        
        $(document).ready(function () {
            //$("#BankReconciliationList").DataTable();
            //var oTable = $("#BankReconciliationList").DataTable();
            //$('.reconDatePicker').datepicker("option", "onSelect", function (dateString) {
            //    oTable.fnDraw();

            //}).datepicker({ dateFormat: "dd-m-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "1900:2100" });

            $(".reconDatePicker").datepicker({ dateFormat: "dd-M-yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "1900:2100" }).datepicker(); /*"setDate", new Date()*/

            //let sbuId = parseInt($('#sbuId').val()) ? parseInt($('#sbuId').val()) : 0;
            // Common.Ajax('GET', '/global/api/GetProject/' + sbuId, [], 'json', GetProject, false);
            //loadReconLedger();

            $("#btnSave").click(function (e) {

                var items = [];
                //$("#BankReconciliationList tbody").find('tr').each(function () {
                //    var data1 = $(this).find('input[name="voucherIds"]').val();
                //    console.log(data1);
                //});


                //return false;
               let rowCount = $("#BankReconciliationForm tbody>tr").length;

                if (rowCount < 1) {
                    alert("Please Add Reconcil Items!!!");
                    return false;
                }
                e.preventDefault();

                var form = $("#BankReconciliationForm");

                $.ajax({
                    url: '/Accounting/BankReconciliation/SaveReconcilData',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        if (records.Success) {
                            swal({
                                title: '', text: 'Save Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                            }).then(function () {
                                window.location.href = "/Accounting/BankReconciliation/ReconciliationDetails?id=" + records.id;
                            });
                        } else {
                            swal('Warning', 'Invalid Attempt', 'warning');
                        }

                    }
                });
            });
        });
        
        function GetProject(response) {
            $('#projectId').empty();
            var options = '';
            $.each(response, function (i, item) {
                options += '<option selected value="' + item.Id + '">' + item.projectName + '</option>';
            });
            $('#projectId').append(options);
        }

        function loadReconLedger() {
            let ledgerId = $('#ledgerId').val();
            let subLedgerId = 0;
            let fromDate = $('#ReconFrom').val();
            let toDate = $('#ReconTo').val();
            let sbuId = parseInt($('#sbuId').val()) ? parseInt($('#sbuId').val()) : 0;
            let projectId = parseInt($('#projectId').val()) ? parseInt($('#projectId').val()) : 0;

            if (ledgerId == '' || ledgerId == 0) {
                swal('Warning', 'Please Select Ledger', 'warning');
                return false;
            } else if (fromDate == '') {
                swal('Warning', 'Select From Date', 'warning');
                return false;
            } else if (toDate == '') {
                swal('Warning', 'Select To Date', 'warning');
                return false;
            }
            var url = "/global/api/GetBankReconcilData/" + ledgerId + "/" + subLedgerId + "/" + fromDate + "/" + toDate + "/" + sbuId + "/" + projectId
            Common.Ajax('GET', url, [], 'json', GetLedgers);
            //   GetLedgerBookReportEx(ledgerId, subLedgerId, fromDate, toDate, sbuId, projectId);
        }

        //function GetLedgers(response) {
        //    console.log(response);
        //    if (response != null) {
        //        //$("#BankReconciliationList tbody>tr").empty();
        //        $.each(response, function (key, value) {
        //            var RowCount = $("#tblitemDetailsSpec tbody>tr").length;
        //            //index = $("#BankReconciliationList tbody>tr").length;
        //            var dtTable = $("#BankReconciliationList");
        //            var tableBody = dtTable.find('tbody');
        //            var value = '<tr><th width="5%">' + value.Sl
        //                + '</th><th width="10%">' + value.voucherDate
        //                + '<input type="text" name="voucherIds" id="voucherId" class="form-control input-group-sm read text-left" value="' + value.VoucherId
        //                + '" hidden /></th><th width="7%">' + value.voucherType
        //                + '</th><th width="8%"></th><th width="15%">' + value.voucherNo
        //                + '</th><th width="8%">' + value.accountName
        //                + '<input type="text" name="accountCode" id="accountCode" class="form-control input-group-sm read text-left" value="' + value.accountCode
        //                + '" hidden /></th><th width="8%">' + value.subledgerName + '</th><th width="8%">' + value.credit
        //                + '<input type="text" name="payment" style="text-align:center"  value="' + value.credit + '" hidden /></th><th width="10%">' + value.debit
        //                + '<input type="text" name="diposit" style="text-align:center"  value="' + value.debit
        //                + '" hidden /></th><th width="10%"><input type="text" name="reconDate" style="text-align:center" class="reconDatePicker fas fa-calendar-alt form-control input-group-sm input-group-text" value="" readonly />\
        //                                                             </th><th width="10%"><input type="checkbox" class="form-control input-group-sm" name="isChecked" value="off" onclick="changeValueCheckbox(this'+ ',' + value.Sl + ')" /><input type="text" name="isCheck" id="isCheck' + value.Sl + '" style="text-align:center"  value="0" hidden /></th></tr > ';

        //            tableBody.append(value);
        //        })

        //        $('#BankReconciliationList').find(".reconDatePicker").datepicker({
        //            dateFormat: "dd-M-yy",
        //            showAnim: "scale",
        //            changeMonth: true,
        //            changeYear: true,
        //            yearRange: "1900:2100"  /*"setDate", new Date()*/
        //        });
        //    }
        //}

    

        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#BankReconciliationForm tbody>tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        //$('#selectAll').click(function () {
        //    $(".MemberCheckList").trigger("click");

        //});

        $('#selectAll').change(function () {
            ($(this).is(":checked") ? $('.MemberCheckList').prop("checked", true).trigger("change") : $('.MemberCheckList').prop("checked", false).trigger("change"))
        });
        //$('#selectAllPrev').click(function () {
        //    $(".MemberCheckListPrev").trigger("click");
        //});

        $('#selectAllPrev').change(function () {
            ($(this).is(":checked") ? $('.MemberCheckListPrev').prop("checked", true).trigger("change") : $('.MemberCheckListPrev').prop("checked", false).trigger("change"));
        });

        function changeValueCheckbox(element, sl) {
            if (element.checked) {
                element.value = 'on';
                $("#isCheck_" + sl).val('1');
            } else {
                element.value = 'off';
                $("#isCheck_" + sl).val('0');
            }
        }

        function changePrevValueCheckbox(element, sl) {
            if (element.checked) {
                element.value = 'on';
                $("#isCheckPrev_" + sl).val('1');
            } else {
                element.value = 'off';
                $("#isCheckPrev_" + sl).val('0');
            }
        }
    </script>
}
