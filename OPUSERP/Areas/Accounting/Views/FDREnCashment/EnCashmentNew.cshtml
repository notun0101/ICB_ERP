@model FDREnCashmentViewModel
@{
    ViewData["Title"] = "EnCashment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">FDR & Govt.Securities Create</h6>
                <a href="/Accounting/FDREnCashment/Index" class="btn btn-facebook btn-sm pull-right">Back To List</a>
            </div>
            <div class="card-body">
                @*<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">FDR & Govt.Securities</h6>
                        <a href="/Accounting/FDREnCashment/Index" style="background-color:#024972;" class="btn btn-facebook btn-sm pull-right">Back To List</a>
                    </div>*@
                <div class="container">
                    <form id="frmInvestment" aria- data-parsley-validate="parsley" autocomplete="off" enctype="multipart/form-data">
                        <div asp-validation-summary="All" class="text-danger"></div>                       
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group row">

                                    <label for="AccountName" class="col-sm-4 col-form-label">Investment No</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" id="accountName" name="accountName" value="@Model.getFDRInformationForEncashmentViewModels.FirstOrDefault().accountName" readonly>
                                        <input type="hidden" id="ID" name="ID" />
                                        <input type="hidden" id="Amount" name="Amount" />
                                        <input type="hidden" id="FDRID" name="FDRID" />
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="EncashDate" class="col-sm-4 col-form-label">Encash Date</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control dpdatepicker" id="EncashDate" name="EncashDate" onchange="EncashAmountCal()">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="MaturityStatus" class="col-sm-4 col-form-label">Maturity Status</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" id="MaturityStatus" name="MaturityStatus" readonly="readonly">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="leaveTypeId" class="col-sm-4 col-form-label">Principal Bank<span style="color:red">*</span></label>
                                    <div class="col-sm-8">
                                        <select id="BankName" class="form-control" name="principleBankId">
                                            <option value="">Please select</option>
                                            @foreach (var data in Model.banks)
                                            {
                                                <option value="@data.Id">@data?.bankName</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="PrincipalLedger" class="col-sm-4 col-form-label">Principal Bank A/C<span style="color:red">*</span></label>
                                    <div class="col-sm-8">
                                        <input type="text" id="principleBankAccountNumber" name="principleBankAccountNumber" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group row" hidden>
                                    <label for="leaveTypeId" class="col-sm-4 col-form-label">Interest Bank</label>
                                    <div class="col-sm-8">
                                        <select id="BankName" class="form-control" name="interestBankBankId">
                                            <option value="">Please select</option>
                                            @foreach (var data in Model.banks)
                                            {
                                                <option value="@data.Id">@data?.bankName</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group row" hidden>
                                    <label for="InterestLedger" class="col-sm-4 col-form-label">Interest Bank A/C</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" id="interestBankAccountNumber" name="interestBankAccountNumber">
                                    </div>
                                </div>

                                <div class="form-group row" id="divSupportFile" hidden>
                                    <label for="InterestLedger" class="col-sm-4 col-form-label">Upload the supporting<span style="color:red">*</span></label>
                                    <div class="col-sm-8">
                                        <input type="file" title="Supporting file" id="imagePath" name="imagePath" class="img-thumbnail float-left" />
                                    </div>
                                </div>

                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label for="PrincipalAmount" class="col-sm-6 col-form-label">Principal Amount</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="PrincipalAmount" name="PrincipalAmount" value="@Model.getFDRInformationForEncashmentViewModels.FirstOrDefault().amount" readonly="readonly">

                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="ProvisionAmount" class="col-sm-6 col-form-label">Provision Amount</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="ProvisionAmount" name="ProvisionAmount" value="@Model.getFDRInformationForEncashmentViewModels.FirstOrDefault().totalInterest" readonly="readonly">

                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="ReceiveAmount" class="col-sm-6 col-form-label">Total Interest Receive <span style="color:red">*</span></label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control money amtcal" id="ReceiveAmount" name="ReceiveAmount" onkeyup="EncashAmountCal()">
                                        @*<input type="text" class="form-control money amtcal" id="ReceiveAmount" name="ReceiveAmount">*@
                                    </div>
                                </div>
                                <div class="form-group row" id="PMP">
                                    <label for="PrematurePercent" class="col-sm-6 col-form-label">Pre-Matured Percentage(%)<span style="color:red">*</span></label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="PrematurePercent" name="PrematurePercent" readonly="readonly">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="DiffAmount" class="col-sm-6 col-form-label">Difference Amount</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="DiffAmount" name="DiffAmount" readonly="readonly">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="PercentDiff" class="col-sm-6 col-form-label">Difference Percentage(%)</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="PercentDiff" name="PercentDiff" readonly="readonly">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="ExciseDuty" class="col-sm-6 col-form-label">Bank Charge/Excise Duty (if any)</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="ExciseDuty" name="ExciseDuty">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="AdvanceTax" class="col-sm-6 col-form-label">Advance Income Tax</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="AdvanceTax" name="AdvanceTax">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="PercentDiff" class="col-sm-6 col-form-label">Net Bank Receive</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="TotalAmount" name="TotalAmount" readonly="readonly">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-6">
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <span class="col-sm-6"></span>
                                    <div class="col-sm-6">
                                        <button id="btnProcess" class="btn-success">Process</button>&nbsp;&nbsp;
                                        <button id="btnRefresh" onclick="Refresh()" class="btn-default">Refresh</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

        @section Scripts{
            <script>
        var formdata = new FormData();
        $(document).ready(function () {

            $(".dpdatepicker").datepicker({ dateFormat: "dd M yy", showAnim: "scale", changeMonth: true, changeYear: true, yearRange: "1950:2050" }).datepicker("setDate", new Date());

            Common.Ajax('GET', '/Accounting/FDRRenewal/GetLedgerForFdr', [], 'json', ajaxGetLedger);

            $('#FDRID').val(@Model?.getFDRInformationForEncashmentViewModels?.FirstOrDefault().fDRID);

            $("#btnProcess").click(function (e) {
                //var PD = parseFloat($('#PercentDiff').val()) ? parseFloat($('#PercentDiff').val()) : 0;
                var receveamt = parseFloat($('#ReceiveAmount').val()) ? parseFloat($('#ReceiveAmount').val()) : 0;
                //if ((PD > 5 || PD < -5) && $('#MaturityStatus').val() == 'Matured') {
                //    swal('Attension!', 'Difference must be between 5% to -5%');
                //    return false;
                //}
                //else
                if (receveamt <= 0) {
                    swal('Attension!', 'Please entered valid received amount');
                    return false;
                }
                //else if ($('#MaturityStatus').val() == 'Pre-Matured' && ($('#PrematurePercent').val() == '' || $('#PrematurePercent').val() <= 0)) {
                //    swal('Attension!', 'Please entered Pre-Matured Percent');
                //    return false;
                //}
                else if ($('#UploadSupport').val() == '' && $('#MaturityStatus').val() == 'Pre-Matured') {
                    swal('Attension!', 'Please Select Supporting File', 'warning');
                    return false;
                } else if ($('#accountName').val() == '') {
                    swal('Attension!', 'Please Enter Account Name', 'warning');
                    return false;
                } else if ($('#principleBankId').val() == '') {
                    swal('Attension!', 'Please Enter Principle Bank Name', 'warning');
                    return false;
                } else if ($('#principleBankAccountNumber').val() == '') {
                    swal('Attension!', 'Please Enter Principle Bank Account Number', 'warning');
                    return false;
                }
                e.preventDefault();

                var form = $("#frmInvestment");
                 swal({
            title: 'Are you sure?', text: 'save this!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, save it!'
        }).then(function () {
            $.ajax({
                    url: '/Accounting/FDREnCashment/ProcessFDREncashment',
                    data: form.serialize(),
                    type: 'POST',
                success: function (data) {
                    swal({
                        title: '', text: 'Save Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                    }).then(function () {
                        window.location.href = "/Accounting/FDREnCashment/Index";
                    });


                },
                error: function () {
                    alert("Fail to save");
                }
            });
        });

     });

            if(@Model?.getFDRInformationForEncashmentViewModels?.FirstOrDefault().isEncashment>0){

            }else{
                InterestCalculator('@Model?.getFDRInformationForEncashmentViewModels?.FirstOrDefault().formulaType',@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount,@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().rate,'@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().openDate','@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate')

            }
            $('#PrematurePercent').keyup(function(){
                PrematReceiveAMTCalculator('@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().formulaType',@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount,$(this).val(),'@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().openDate','@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate')
                SumCal();
                EncashAmountCal()
            })


            $("#ReceiveAmount").keyup().number(true,2);
            $("#Amount").val(@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount).number(true,2);
            $("#TotalInterest").val(@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().totalInterest).number(true, 2);


            $('.amtcal').keyup(function () {
                var sum = 0;
                var net=0;
                $(".amtcal").each(function () {
                    sum += +parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
                });
                $(".amtLescal").each(function () {
                    net += +parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
                });

                if($('#EncashDate').val()!=$('#MaturityDate').val()){
                    var recamt=parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
                    var provissionamt=parseFloat($('#ProvisionAmount').val().replace(/,/g,'')) ? parseFloat($('#ProvisionAmount').val().replace(/,/g,'')) : 0;
                    var fdrAmt=parseFloat($('#Amount').val()) ? parseFloat($('#Amount').val()) : 0;
                    var preminterest=((recamt-provissionamt)/fdrAmt)*100;
                    $('#PrematurePercent').val(preminterest).number(true,2);
                }else{
                    $('#PrematurePercent').val(0);
                }
                var bankcharge = parseFloat($('#ExciseDuty').val()) ? parseFloat($('#ExciseDuty').val()) : 0;

                $("#TotalAmount").val(sum - net).number(true, 2);
            });
            $('#ExciseDuty').keyup().number(true,2);
            $('.amtLescal').keyup(function () {
                var sum = 0;
                var net=0;
                $(".amtcal").each(function () {
                    sum += +parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
                });
                $(".amtLescal").each(function () {
                    net += +parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
                });

                var bankcharge = parseFloat($('#ExciseDuty').val()) ? parseFloat($('#ExciseDuty').val()) : 0;
                $("#TotalAmount").val(sum - net).number(true, 2);
            });

            $("#EncashDate").change(function () {
                var encashDate = $(this).val()
                var isValidDate = EncashDateValidation(encashDate);
                if (isValidDate) {
                    InterestCalculator('@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().formulaType',@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount,@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().rate, '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().openDate', '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
                } else {
                    swal("Attention!", "Invalid Encashment Date", "warning");
                    $('#EncashDate').val(formatDate(new Date()));
                    InterestCalculator('@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().formulaType',@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount,@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().rate, '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().openDate', '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
                }
            });
            $(".money").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl/cmd+A
                    (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+C
                    (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+X
                    (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $('#ExciseDuty').keyup(function () {
                var PrinAmount = parseFloat($('#PrincipalAmount').val()) ? parseFloat($('#PrincipalAmount').val()) : 0;
                var ProvisionAmount = parseFloat($('#ProvisionAmount').val()) ? parseFloat($('#ProvisionAmount').val()) : 0;
                var ReceiveAmount = parseFloat($('#ReceiveAmount').val()) ? parseFloat($('#ReceiveAmount').val()) : 0;
                var AdvanceTax = parseFloat($('#AdvanceTax').val()) ? parseFloat($('#AdvanceTax').val()) : 0;
                var ExciseDuty = parseFloat($('#ExciseDuty').val()) ? parseFloat($('#ExciseDuty').val()) : 0;

                $("#DiffAmount").val(ReceiveAmount.toFixed(2) - ProvisionAmount.toFixed(2));
                $("#TotalAmount").val((PrinAmount + ReceiveAmount) - (ExciseDuty + AdvanceTax)).number(true, 2);
            });

            $('#ReceiveAmount').keyup(function () {
                var PrinAmount = parseFloat($('#PrincipalAmount').val()) ? parseFloat($('#PrincipalAmount').val()) : 0;
                var ProvisionAmount = parseFloat($('#ProvisionAmount').val()) ? parseFloat($('#ProvisionAmount').val()) : 0;
                var ReceiveAmount = parseFloat($('#ReceiveAmount').val()) ? parseFloat($('#ReceiveAmount').val()) : 0;
                var AdvanceTax = parseFloat($('#AdvanceTax').val()) ? parseFloat($('#AdvanceTax').val()) : 0;
                var ExciseDuty = parseFloat($('#ExciseDuty').val()) ? parseFloat($('#ExciseDuty').val()) : 0;

                $("#DiffAmount").val(ReceiveAmount.toFixed(2) - ProvisionAmount.toFixed(2));
                $("#TotalAmount").val((PrinAmount + ReceiveAmount) - (ExciseDuty + AdvanceTax)).number(true, 2);
            });

            $('#AdvanceTax').keyup(function () {
                var PrinAmount = parseFloat($('#PrincipalAmount').val()) ? parseFloat($('#PrincipalAmount').val()) : 0;
                var ProvisionAmount = parseFloat($('#ProvisionAmount').val()) ? parseFloat($('#ProvisionAmount').val()) : 0;
                var ReceiveAmount = parseFloat($('#ReceiveAmount').val()) ? parseFloat($('#ReceiveAmount').val()) : 0;
                var AdvanceTax = parseFloat($('#AdvanceTax').val()) ? parseFloat($('#AdvanceTax').val()) : 0;
                var ExciseDuty = parseFloat($('#ExciseDuty').val()) ? parseFloat($('#ExciseDuty').val()) : 0;

                $("#DiffAmount").val(ReceiveAmount.toFixed(2) - ProvisionAmount.toFixed(2));
                $("#TotalAmount").val((PrinAmount + ReceiveAmount) - (ExciseDuty + AdvanceTax)).number(true, 2);
            });
        });

        function Refresh() {
        //$('#EncashDate').val(formatDate(new Date()));
        $('#ProvisionAmount').val('')
        $('#ReceiveAmount').val('');
        $('#DiffAmount').val('');
        $('#PercentDiff').val('');
        $('#ExciseDuty').val('');
        $('#AdvanceTax').val('');
        $('#PrematurePercent').val('');
        $('#PrincipalLedID').val('');
        $('#InterestLedID').val('');
        $('#PrincipalLedger').val('');
        $('#InterestLedger').val('');
        $('#TotalAmount').val('');
        $('#MaturityStatus').val('');
        $('#TotalAmount').val('');
            InterestCalculator('@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().formulaType',@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().amount,@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().rate, '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().openDate', '@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
        SumCal();
        EncashAmountCal()
    }

    function formatDate(date) {
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return day + ' ' + monthNames[monthIndex] + ' ' + year;
    }

    function EncashDateValidation(encashDate) {
        var encashValid = true;
        var date1 = new Date(encashDate);
        var date2 = new Date('@Model.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
        var timeDiff = date1.getTime() - date2.getTime();
        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
        if (diffDays > 0) {
            encashValid = false;
        } else {
            encashValid = true;
        }
        return encashValid;
        }
        function ajaxGetLedger(response) {
            var GeLedgersList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.accountName;
                GeLedgersList[GeLedgersList.length] = obj;
            });

            $('#PrincipalLedger').autocomplete({
                source: GeLedgersList,
                select: function (event, ui) {
                    $("#PrincipalLedger").val(ui.item.value);
                    $("#PrincipalLedID").val(ui.item.key);
                }
            });
            $('#InterestLedger').autocomplete({
                source: GeLedgersList,
                select: function (event, ui) {
                    $("#InterestLedger").val(ui.item.value);
                    $("#InterestLedID").val(ui.item.key);
                }
            });
        }




    function InterestCalculator(formulaType,amount,rate,openDate,maturityDate) {
        var encashDate=$('#EncashDate').val();
        var date1 = new Date(encashDate);
        var date2 = new Date('@Model?.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
        var timeDiff = date1.getTime() - date2.getTime();
        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
        if (diffDays>=0) {
            $('#MaturityStatus').val('Matured').css('color', 'green');
            $('#divSupportFile').hide();
            $('#UploadSupport').val('');
            $('#PMP').hide();
            $('#PrematurePercent').val('');

        } else {
            $('#MaturityStatus').val('Pre-Matured').css('color', 'red');
            $('#divSupportFile').show();
            $('#PMP').show();
        }

        var totalInterest = 0;

        if (formulaType == 'Type 1') {
            if (diffDays>=0){
                totalInterest = Formula1Cal(amount, rate, openDate,maturityDate);
            }else{
                totalInterest = Formula1Cal(amount, rate, openDate, encashDate);
            }

        } else if (formulaType == 'Type 2') {
            if (diffDays>=0){
                totalInterest = Formula2Cal(amount, rate, openDate, maturityDate);
            }else{
                totalInterest = Formula2Cal(amount, rate, openDate,encashDate );
            }
        } else {
            totalInterest = 0;
        }

        $('#ProvisionAmount').val(totalInterest).number(true, 2);
    }

    function Formula1Cal(amount, rate, odate, mdate) {
        rate = parseFloat(rate) / 100;
        var openDate = new Date(odate);
        var maturityDate = new Date(mdate);
        var interest = 0;
        var fracopen = 0;
        var fracmature = 0;
        var totalDay = 0;

        var totalMonth = totalMonths(openDate, maturityDate);

        if (totalMonth <= 0) {
            totalDay = totalDays(openDate, maturityDate);
            interest = ((amount * rate) / 360) * totalDay;
        }

        else {
            fracopen = 30 - new Date(openDate).getDate() + 1;
            fracmature = new Date(maturityDate).getDate() - 1;
            totalDay = fracopen + fracmature;
            interest = ((amount * rate) / 360) * (totalMonth - 1) * 30 + ((amount * rate) / 360) * totalDay;
        }
        return interest;
    }

    function Formula2Cal(amount, rate, odate, mdate) {
        rate = parseFloat(rate) / 100;
        var openDate = new Date(odate);
        var maturityDate = new Date(mdate);
        var interest = 0;
        var fracopen = 0;
        var fracmature = 0;
        var totalDay = 0;

        var totalMonth = totalMonths(openDate, maturityDate);
        totalDay = totalDays(openDate, maturityDate);
        interest = ((amount * rate) / 360) * totalDay;
        return interest;
    }

    function totalDays(openDate, maturityDate) {
        var timeDiff = maturityDate.getTime() - openDate.getTime();
        var tdays = Math.ceil(timeDiff / (1000 * 3600 * 24));
        return tdays;
    }
    function totalMonths(d1, d2) {
        var months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth();
        months += d2.getMonth();
        return months <= 0 ? 0 : months;
    }

    function PrematReceiveAMTCalculator(formulaType,amount,rate,openDate,maturityDate) {
        var encashDate=$('#EncashDate').val();
        var date1 = new Date(encashDate);
        var date2 = new Date('@Model?.getFDRInformationForEncashmentViewModels?.FirstOrDefault().maturityDate');
        var timeDiff = date1.getTime() - date2.getTime();
        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));

        var totalInterest = 0;

        if (formulaType == 'Type 1') {
            if (diffDays>=0){
                totalInterest = Formula1Cal(amount, rate, openDate,maturityDate);
            }else{
                totalInterest = Formula1Cal(amount, rate, openDate, encashDate);
            }

        } else if (formulaType == 'Type 2') {
            if (diffDays>=0){
                totalInterest = Formula2Cal(amount, rate, openDate, maturityDate);
            }else{
                totalInterest = Formula2Cal(amount, rate, openDate,encashDate );
            }
        } else {
            totalInterest = 0;
        }

        $('#ReceiveAmount').val(totalInterest).number(true, 2);
    }

    function FDRDetails() {
        $("#EditModal").modal("show");
    }

    function EncashAmountCal() {
        var diffAmount = 0;
        var provisionAmount = parseFloat($("#ProvisionAmount").val().replace(/,/g,''))?parseFloat($("#ProvisionAmount").val().replace(/,/g,'')):0;
        var receiveAmount = parseFloat($("#ReceiveAmount").val().replace(/,/g, '')) ? parseFloat($("#ReceiveAmount").val().replace(/,/g, '')) : 0;
        diffAmount =  receiveAmount-provisionAmount;
        var diffPercentage = (diffAmount /provisionAmount)* 100;
        var advanceITax = receiveAmount * (10 / 100);
        $("#DiffAmount").val(diffAmount.toFixed(2));
        if(isNaN(diffPercentage)){
            $("#PercentDiff").val(0);
        }else{
            $("#PercentDiff").val(diffPercentage.toFixed(2));
        }

        $("#AdvanceTax").val(advanceITax).number(true, 2);
    }

    function SumCal(){

        var sum = 0;
        $(".amtcal").each(function () {
            sum += +parseFloat($(this).val().replace(/,/g,'')) ? parseFloat($(this).val().replace(/,/g,'')) : 0;
        });
        $("#TotalAmount").val(sum).number(true, 2);

    }

            </script>
        }
