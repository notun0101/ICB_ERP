@*@Model BillPaymentViewModel*@

@{
    ViewData["Title"] = "Index";
}

@section Style{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        ul.ui-autocomplete {
            z-index: 99999999;
        }

        .redStar {
            color: red;
        }
    </style>
}

    <div class="card p-0 m-0">
        <div class="row">
            <div class="col-sm-10">
                <h5 class="card-title pull-left col-md-12" style="color: black;margin-left:0px;padding-left:0px;">Bill Payment</h5>
            </div>
        </div>
    </div>


<div class="container">
    <div class="row">
        <div class="col-12">

            <form asp- method="post" asp-area="HR" asp-controller="BillPayment" asp-action="Index" id="logoutForm" class="navbar-right" data-parsley-validate="parsley" enctype="multipart/form-data">
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="form-group row">
                    <label for="date" class="col-sm-3 col-form-label">Select Supplier <span class="redStar">*</span></label>
                    <div class="col-sm-9">
                        <select class="form-control" id="customerId" name="customerId" required>
                            <option value="">Select One</option>
                            @foreach (var data in Model.relSupplierCustomerResourses)
                            {
                                <option value="@data.Id">@data.organizationName</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="date" class="col-sm-3 col-form-label">Bill Payment<span class="redStar">*</span></label>
                    <div class="col-sm-9">
                        <table class="table table-bordered table-striped" id="modalTable">
                            <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Invoice Number</th>
                                    <th>Due</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>


                                <tr>
                                    <th colspan="3" class="text-center">Total Amount to pay</th>
                                    <td><input data-parsley-type="number" data-parsley-trigger="keyup" id="total" name="total" readonly class="form-control" /></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="date" class="col-sm-3 col-form-label">Bill Payment Date <span class="redStar">*</span></label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="date" value="" name="date" required>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="date" class="col-sm-3 col-form-label">Payment Mode <span class="redStar">*</span></label>
                    <div class="col-sm-9">
                        <select type="text" class="form-control" id="paymentModeId" name="paymentModeId">

                            @foreach (var data in Model.paymentModes)
                            {
                                <option value="@data.Id">@data.paymentModeName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="date" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 row">
                        <div class="col-sm-6 row" id="cash">
                            <label class="col-sm-6 col-form-label"> Amount</label>
                            <input data-parsley-type="number" class="col-sm-6 form-control" id="cashAmount" value="" name="cashAmount">
                        </div>
                        <div class="col-sm-6 row" id="bank" style="display:none">

                            <label class="col-sm-6 col-form-label">Bank Amount</label>
                            <input data-parsley-type="number" class="col-sm-6 form-control" id="bankAmount" value="" name="bankAmount">
                        </div>

                    </div>
                </div>
                <div class="form-group row">
                    <label for="remarks" class="col-sm-3 col-form-label"> Remarks</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="remarks" value="" name="remarks">
                        <input type="hidden" class="form-control" id="relSupplierCustomerResourseId" value="" name="relSupplierCustomerResourseId">
                    </div>
                </div>

                <button type="submit" disabled id="SubmitButton" value="Submit" class="btn btn-success btn-lg" style="float:right; margin-top:5px;" title="Payment"><i class="fas fa-shopping-cart"></i></button>
                <button type="button" onclick="Refresh()" title="Refresh" class="btn btn-danger btn-lg" style="float:right; margin-top:5px;margin-right:5px;"><i class="fas fa-sync"></i></button>
            </form>
        </div>
    </div>
</div>

<br />
<br />
<div class="row clearfix">
    <div class="col-12">
        <div class="card mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h5 class="m-0 font-weight-bold text-primary">Bill Payment List</h5>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <table class="table table-striped table-bordered" id="departmentTable1">
                    <thead>
                        <tr>
                            <th>Supplier Name</th>
                            <th>Collection Date</th>
                            <th style="text-align:right">Total Collection Amount</th>
                            <th>Action</th>
                    </thead>
                    <tbody>
                        @foreach (var data in Model.billPaymentMasters)
                        {
                            <tr>
                                <td>@data.relSupplierCustomerResourse.organizationName</td>
                                <td>@data.billPaymentDate?.ToString("dd/MM/yyyy")</td>
                                <td style="text-align:right">@data.totalAmount?.ToString("0,0.00")</td>
                                <td>
                                    <a title="Print Bill Receipt" class="btn btn-info" href="~/Purchase/BillPayment/pdspdf/@data.Id" target="_blank"><i class="fa fa-print"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $(document).ready(function () {
            $('#departmentTable').DataTable();
            $('#departmentTable1').DataTable();
            $('#date').flatpickr({ dateFormat: "m/d/Y", maxDate: "@DateTime.Now.ToString("MM/dd/yyyy")" });

            var sum = 0;
            $('.paymentAmount').each(function () {
                sum += Number($(this).val());
            });
            $("#total").val(sum);

            $("#customerId").change(function () {
                var id = $('#customerId').val();
                //alert(id);
                $('#relSupplierCustomerResourseId').val(id);
                Common.Ajax('GET', '/global/api/GetDueBillReceiveByCustomerId/' + id, [], 'json', ajaxDueInvoice, false);
            })
            //$('#paymentModeId').on('change', function (e) {
            //    var val = $(this).val();
            //    var total = $('#total').val();
            //    if (val == 1) {
            //        $('#cash').show();
            //        $('#bank').hide();
            //        $('#cashAmount').val(total);

            //    }
            //    else if (val == 2) {
            //        $('#bank').show();
            //        $('#cash').hide();

            //        $('#bankAmount').val(total);
            //    }
            //    else {
            //        $('#bank').show();
            //        $('#cash').show();
            //        $('#bankAmount').val(total / 2);
            //        $('#cashAmount').val(total / 2);

            //    }
            //})

        });

        function Refresh() {
            location.reload();
        }

        function Payment(employeeId) {
            $('#employeeId').val(employeeId);
        }

        function AddQuantity(id) {
            if ($("#select-" + id).prop("checked") == true) {
                var x = $("#paymentDue-" + id).val();
                $("#paymentAmount-" + id).val($("#paymentDue-" + id).val());
                //$("#paymentAmount-" + id).removeAttr("readonly");
                $("#select-" + id).attr("name", "selectPaymentHeadIds[]");
                $("#paymentAmount-" + id).attr("name", "selectPaymentHeadAmounts[]");
                $("#paymentDue-" + id).attr("name", "selectPaymentHeadDues[]");
            } else {
                $("#paymentAmount-" + id).val("");
                $("#paymentAmount-" + id).attr("readonly", true);
                $("#select-" + id).removeAttr("name");
                $("#paymentAmount-" + id).removeAttr("name");
                $("#paymentDue-" + id).removeAttr("name");
            }
            var sum = 0;
            $('.paymentAmount').each(function () {
                sum += Number($(this).val());
            });
            $("#total").val(sum);
            if ($("#total").val() > 0) {
                $("#SubmitButton").removeAttr('disabled');
            } else {
                $("#SubmitButton").attr('disabled', true);
            }
            var total = $("#total").val();
            $('#cashAmount').val(total);
            $('#bankAmount').val(total);
        }

        function TotalCalculation() {
            var sum = 0;
            $('.paymentAmount').each(function () {
                sum += Number($(this).val());
            });
            $("#total").val(sum);
            if ($("#total").val() > 0) {
                $("#SubmitButton").removeAttr('disabled');
            } else {
                $("#SubmitButton").attr('disabled', true);
            }
            var total = $("#total").val();
            $('#cashAmount').val(total);
            $('#bankAmount').val(total);
        }

        function ajaxDueInvoice(response) {
            $("#modalTable").find("tbody>tr:not(:last)").remove();
            console.log(response);
            if (response != null) {
                $.each(response, function (i, item) {
                    $("#modalTable").find('tbody').prepend('<tr><th><div class="custom-control custom-checkbox mb-3"><input type="checkbox" class="custom-control-input" value="' + item.Id + '" id="select-' + item.Id + '" onclick="AddQuantity(' + item.Id + ');"><label class="custom-control-label" for="select-' + item.Id + '"></label></div></th><th><input type="text" class="form-control" value="' + item.billPaymentNo + '" id="paymentHead-' + item.Id + '" readonly /></th><th><input data-parsley-type="number" style="text-align:right" class="form-control" value="' + item.totalAmount + '" id="paymentDue-' + item.Id + '" readonly /></th><th><input style="text-align:right" data-parsley-type="number" onkeyup="TotalCalculation();" onclick="TotalCalculation();" class="form-control paymentAmount" data-parsley-trigger="keyup" min="0" max="' + item.totalAmount + '" value="" id="paymentAmount-' + item.Id + '" readonly /></th></tr>');
                });
            }
        }

        function addCommas(x) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }
    </script>
}

